test-class;tested-class;score
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.langdetect.LanguageDetectorModel.validateArtifactMap();0.5614035129547119
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.langdetect.LanguageDetectorModel.<init>(java.io.InputStream);0.5555555820465088
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8333333730697632
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8273809552192688
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.<init>();0.6474769115447998
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6410256624221802
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6146563291549683
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5650358200073242
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5641435384750366
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8333333730697632
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8273809552192688
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.<init>();0.6474769115447998
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6410256624221802
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6146563291549683
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5650358200073242
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5641435384750366
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.9844980239868164
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.8493315577507019
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.7434149980545044
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.7434149980545044
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.6696879267692566
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.6620839834213257
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(opennlp.tools.ml.model.DataReader);0.6465820670127869
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.6282925009727478
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.6190189123153687
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.sortValues();0.6082487106323242
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.PlainTextNaiveBayesModelReader.<init>(java.io.BufferedReader);0.5868538022041321
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.PlainTextNaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.BufferedWriter);0.5868538022041321
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.PlainTextFileDataReader.<init>(java.io.BufferedReader);0.5667855143547058
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.PlainTextNaiveBayesModelWriter.writeDouble(double);0.5530622601509094
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.doccat.DocumentSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.doccat.DoccatFactory);1.0
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.sortedScoreMap(java.lang.String[]);0.8999999761581421
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getBestCategory(double[]);0.8733333349227905
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.<init>(opennlp.tools.doccat.DoccatModel);0.800000011920929
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.categorize(java.lang.String[]);0.800000011920929
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getCategory(int);0.699999988079071
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getIndex(java.lang.String);0.699999988079071
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getNumberOfCategories();0.6666666865348816
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.categorize(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.6499999761581421
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerContextGenerator.<init>(opennlp.tools.doccat.FeatureGenerator[]);0.6245614290237427
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[]);0.6140978336334229
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.6140978336334229
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DoccatModel.getFactory();0.6038278341293335
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DoccatFactory.<init>();0.5891363620758057
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DoccatFactory.getFeatureGenerators();0.569136381149292
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.6807585954666138
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.67783522605896
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.isSortAndMerge();0.6384828090667725
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6156798601150513
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6123497486114502
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.5928769707679749
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.5814754366874695
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5804533362388611
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.5672236084938049
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.5600976943969727
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5576503276824951
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8197781443595886
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8133416175842285
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.sortValues();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.<init>();0.6619285941123962
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.6562368273735046
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6509541869163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6358233690261841
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.6307764053344727
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.6240543723106384
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6118298768997192
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.5854353904724121
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5718176364898682
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8333333730697632
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8273809552192688
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.<init>();0.6474769115447998
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6410256624221802
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6146563291549683
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5650358200073242
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5641435384750366
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.6807586550712585
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6778352856636047
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.isSortAndMerge();0.6384828090667725
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6156798601150513
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.612349808216095
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.5928769707679749
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.5814754366874695
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5804533362388611
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.5672236084938049
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.5600976943969727
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5576503872871399
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8197781443595886
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8133416175842285
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.sortValues();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.<init>();0.6619285941123962
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.6562368273735046
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6509541869163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6358233690261841
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.6307764053344727
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.6240543723106384
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6118298768997192
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.5854353904724121
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5718176364898682
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8333333730697632
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8273809552192688
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.<init>();0.6474769115447998
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6410256624221802
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6146563291549683
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.5814144611358643
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5650358200073242
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5641435384750366
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.8209065198898315
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.752497673034668
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.752497673034668
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7263645529747009
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6498843431472778
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6237512230873108
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.AbstractEventTrainer.<init>();0.5576503276824951
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.loadArtifactSerializers();0.8452032804489136
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.7456912398338318
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.createBaseArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.6351983547210693
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.langdetect.LanguageDetectorModel.<init>(java.io.InputStream);0.6038498282432556
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.initializeFactory();0.5931059122085571
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.finishLoadingArtifacts(java.io.InputStream);0.5792344808578491
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorEvaluator.processSample(opennlp.tools.langdetect.LanguageSample);1.0
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.8307105302810669
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorEvaluator.getDocumentCount();0.75
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorEvaluator.getAccuracy();0.6538461446762085
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.langdetect.LanguageDetectorModel.<init>(java.io.InputStream);0.5714285969734192
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.langdetect.LanguageDetectorModel.validateArtifactMap();0.5563910007476807
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8197781443595886
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8133416175842285
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.sortValues();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.<init>();0.6619285941123962
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.6562368273735046
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6509541869163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6358233690261841
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.6307764053344727
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.6240543723106384
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6118298768997192
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.5854353904724121
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5718176364898682
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.9375
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.8476123809814453
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.7138574123382568
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.6657941341400146
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.6602230072021484
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.6602230072021484
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.625
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8197781443595886
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.8133416175842285
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.sortValues();0.720887303352356
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.<init>();0.6619285941123962
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.6562368273735046
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractEventTrainer.<init>();0.6509541869163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6358233690261841
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.6307764053344727
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.6240543723106384
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.6118298768997192
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.5854353904724121
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.573729395866394
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.display(java.lang.String);0.5718176364898682
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.9101123809814453
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.8388574123382568
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.7857142686843872
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.6958266496658325
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.BinaryNaiveBayesModelReader.<init>(java.io.File);0.6642886400222778
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.findParameters();0.6602859497070312
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.6601123809814453
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.651294469833374
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.BinaryNaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.File);0.6468402743339539
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.624571681022644
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.5798659324645996
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModelReader.<init>(java.io.File);0.577257513999939
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModelWriter.<init>();0.5743345618247986
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.sortValues();0.5529695153236389
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool.loadResources(java.io.File, java.io.File);1.0
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.serialize(java.io.File);0.9622463583946228
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.9622463583946228
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.create(java.lang.String, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.8988191485404968
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderModel.isModelValid(opennlp.tools.ml.model.MaxentModel);0.8919827938079834
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.getSequenceCodec();0.8777530789375305
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.getResources();0.8426429629325867
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.8278597593307495
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.FileUtil.deleteDirectory(java.io.File);0.816633939743042
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.getArtifactSerializer(java.lang.String);0.7937177419662476
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.ml.model.Context.getOutcomes();0.7905969619750977
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.getFeatureGenerator();0.783510148525238
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.setManifestProperty(java.lang.String, java.lang.String);0.7789344787597656
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.7719591856002808
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.753271758556366
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7408704161643982
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.loadArtifactSerializers();0.7326565980911255
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.<init>();0.7302905321121216
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.init(byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.7302905321121216
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.createBaseArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.7162333130836487
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.initializeFactory();0.7111057043075562
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.6946430802345276
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.6813653707504272
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.lang.String, java.util.Map<java.lang.String, java.lang.String>, opennlp.tools.util.BaseToolFactory);0.6813653707504272
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.6813653707504272
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.createFeatureGenerators();0.6716719269752502
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderModel.<init>(java.lang.String, opennlp.tools.ml.model.MaxentModel, int, byte[], java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.String>, opennlp.tools.util.SequenceCodec<java.lang.String>, opennlp.tools.namefind.TokenNameFinderFactory);0.6672780513763428
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderModel.init(java.lang.Object, byte[], java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.String>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.6672780513763428
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.6485207080841064
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.BioCodec.<init>();0.6470427513122559
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.getManifestProperty(java.lang.String);0.6458856463432312
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.checkArtifactMap();0.6444997191429138
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.getEntryExtension(java.lang.String);0.6367548704147339
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.createArtifactSerializers();0.6308067440986633
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.6278308033943176
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.getVersion();0.6251891255378723
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.instantiateSequenceCodec(java.lang.String);0.6232047080993652
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.TrainingParameters.<init>();0.6228340864181519
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.6228340864181519
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderModel.createArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.6167194247245789
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[]);0.606813371181488
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.5971010327339172
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.5830137729644775
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.5801871418952942
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.5801871418952942
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.PlainTextByLineStream.reset();0.5801871418952942
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderFactory.validateArtifactMap();0.5756212472915649
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.createArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.5718217492103577
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.5712370276451111
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.5633533596992493
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.finishLoadingArtifacts(java.io.InputStream);0.5607141852378845
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.namefind.TokenNameFinderModel.validateArtifactMap();0.5541864633560181
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.loadDefaultFeatureGeneratorBytes();1.0
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator();0.934567928314209
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getSequenceValidator();0.895061731338501
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getTagDictionary();0.895061731338501
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator(int);0.7172839641571045
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.createFeatureGenerators();0.5987654328346252
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getFeatureGenerator();0.5987654328346252
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.createArtifactMap();0.5888888835906982
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.<init>(byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.postag.TagDictionary);0.5790123343467712
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getResources();0.5592592358589172
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.ParserTestUtil.openTestTrainingData();1.0
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.chunking.Parser.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>, opennlp.tools.parser.HeadRules, opennlp.tools.util.TrainingParameters);0.9922451376914978
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.chunking.Parser.mergeReportIntoManifest(java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.lang.String>, java.lang.String);0.9145911335945129
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.chunking.Parser.<init>(opennlp.tools.ml.model.MaxentModel, opennlp.tools.ml.model.MaxentModel, opennlp.tools.postag.POSTagger, opennlp.tools.chunker.Chunker, opennlp.tools.parser.HeadRules, int, double);0.7111090421676636
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.chunking.Parser.<init>(opennlp.tools.parser.ParserModel, int, double);0.7111090421676636
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.ParserTestUtil.createTestHeadRules();0.6692516207695007
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.5955458879470825
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.ParserFactory.create(opennlp.tools.parser.ParserModel);0.5611748099327087
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.POSTaggerNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999999403953552
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator(int);0.769416093826294
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.postag.POSTaggerFactory.getSequenceValidator();0.7145773768424988
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.POSTaggerNameFeatureGenerator.<init>(opennlp.tools.postag.POSModel);0.6774193048477173
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.postag.POSTaggerFactory.getTagDictionary();0.672641932964325
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.postag.POSTaggerFactory.createFeatureGenerators();0.5786727666854858
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.postag.POSModel.getPosSequenceModel();0.56439608335495
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.ParserTestUtil.openTestTrainingData();1.0
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.treeinsert.Parser.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>, opennlp.tools.parser.HeadRules, int, int);0.9497312307357788
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9419906139373779
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.treeinsert.Parser.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>, opennlp.tools.parser.HeadRules, opennlp.tools.util.TrainingParameters);0.8100649118423462
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.ParserTestUtil.createTestHeadRules();0.7765339016914368
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.7185244560241699
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.treeinsert.Parser.<init>(opennlp.tools.ml.model.MaxentModel, opennlp.tools.ml.model.MaxentModel, opennlp.tools.ml.model.MaxentModel, opennlp.tools.postag.POSTagger, opennlp.tools.chunker.Chunker, opennlp.tools.parser.HeadRules, int, double);0.7122984528541565
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.treeinsert.Parser.<init>(opennlp.tools.parser.ParserModel, int, double);0.7122984528541565
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.treeinsert.Parser.getRightFrontier(opennlp.tools.parser.Parse, java.util.Set<java.lang.String>);0.6704462170600891
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.Parse.getChildCount();0.6067913174629211
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.5758166313171387
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSTaggerME.tag(java.lang.String[]);1.0
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSTaggerME.tag(java.lang.String[], java.lang.Object[]);0.75
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator(int);0.6816533207893372
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSTaggerME.<init>(opennlp.tools.postag.POSModel);0.6666666865348816
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSTaggerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.postag.POSTaggerFactory);0.6666666865348816
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSModel.getFactory();0.6376327276229858
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.6166459321975708
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[]);0.6062074303627014
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSTaggerFactory.getTagDictionary();0.5793805718421936
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.NameFinderEventStream.createEvents(opennlp.tools.namefind.NameSample);0.8539090752601624
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.7743626236915588
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.AbstractEventStream.close();0.7101033329963684
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.NameFinderEventStream.generateEvents(java.lang.String[], java.lang.String[], opennlp.tools.namefind.NameContextGenerator);0.7044749855995178
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.6831272840499878
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.638184666633606
opennlp.tools.cmdline.TokenNameFinderToolTest.run();opennlp.tools.cmdline.namefind.TokenNameFinderTool.run(java.lang.String[]);1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.run();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();0.5833333134651184
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();0.9072627425193787
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9071428775787354
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.8142856955528259
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.79859858751297
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.getType();0.7625051140785217
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[], java.lang.String[][]);0.7214285731315613
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.setProbs(opennlp.tools.util.Span[]);0.7214285731315613
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.probs(opennlp.tools.util.Span[]);0.6517857909202576
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.6501199007034302
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.6416294574737549
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.6220734119415283
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.6128842830657959
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.5767908096313477
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5767908096313477
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.5700547099113464
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.5543790459632874
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.TwoPassDataIndexer.<init>();0.9005235433578491
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.734131395816803
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.734131395816803
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.734131395816803
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.7183030247688293
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.TwoPassDataIndexer.computeEventCounts(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.io.DataOutputStream, java.util.Map<java.lang.String, java.lang.Integer>, int);0.6352530121803284
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.DefaultNameContextGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.6135909557342529
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);0.609557032585144
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.6072754859924316
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.605553150177002
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.<init>();0.6014720797538757
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>();0.5965859889984131
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);0.5965859889984131
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();0.5946707725524902
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.BioCodec.<init>();0.5930606722831726
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.5927293300628662
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.CachedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.5910832285881042
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.OutcomePriorFeatureGenerator.<init>();0.5905664563179016
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.5850723385810852
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.AbstractDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>);0.5849167108535767
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.579327404499054
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.579327404499054
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.579327404499054
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.TrainingParameters.<init>(java.util.Map<java.lang.String, java.lang.String>);0.573537290096283
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.5714721083641052
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.Cache.<init>(int);0.5703135132789612
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.Span.<init>(int, int);0.5634316205978394
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5634316205978394
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.namefind.TokenNameFinderCrossValidator.getFMeasure();1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.namefind.TokenNameFinderCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, int);0.75
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.namefind.TokenNameFinderCrossValidator.<init>(java.lang.String, java.lang.String, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.6666666269302368
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.ml.model.Context.getOutcomes();0.6077268719673157
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.5513653755187988
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.POSTaggerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.postag.POSTaggerFactory);1.0
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.POSTaggerFactory.<init>();0.9391741156578064
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.WordTagSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8842267394065857
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.<init>();0.8233557939529419
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.BaseToolFactory.<init>();0.8219865560531616
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8049389123916626
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.8035495281219482
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8010998964309692
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator();0.6361438632011414
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.PlainTextByLineStream.reset();0.6344332098960876
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.6074711680412292
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.5733557939529419
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);1.0
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.postag.POSModel.<init>(java.io.InputStream);0.9040874242782593
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.postag.POSModel.createArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.8852522373199463
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.postag.POSModel.validateArtifactMap();0.8475819230079651
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.createBaseArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.7739781141281128
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.loadArtifactSerializers();0.7739781141281128
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.7739781141281128
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.getArtifactSerializer(java.lang.String);0.7363077998161316
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.postag.POSModel.<init>(java.lang.String, opennlp.tools.ml.model.MaxentModel, int, java.util.Map<java.lang.String, java.lang.String>, opennlp.tools.postag.POSTaggerFactory);0.7345710396766663
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.finishLoadingArtifacts(java.io.InputStream);0.6609671711921692
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.initializeFactory();0.6609671711921692
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);1.0
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.postag.POSModel.<init>(java.io.InputStream);0.9040874242782593
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.postag.POSModel.createArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.8664171099662781
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.postag.POSModel.validateArtifactMap();0.8287467360496521
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.7739781141281128
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.7629597187042236
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.loadArtifactSerializers();0.7363077998161316
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.postag.POSModel.<init>(java.lang.String, opennlp.tools.ml.model.MaxentModel, int, java.util.Map<java.lang.String, java.lang.String>, opennlp.tools.postag.POSTaggerFactory);0.7345710396766663
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.createBaseArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.7077302932739258
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.getArtifactSerializer(java.lang.String);0.6986374258995056
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.finishLoadingArtifacts(java.io.InputStream);0.6609671711921692
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.6285483837127686
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.initializeFactory();0.623296856880188
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.checkArtifactMap();0.5856265425682068
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.5724902153015137
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.7685181498527527
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameFinderEventStream.createEvents(opennlp.tools.namefind.NameSample);0.7685181498527527
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameFinderEventStream.overrideType(opennlp.tools.util.Span[]);0.7471704483032227
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.AbstractEventStream.close();0.7101033329963684
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.6652520298957825
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameFinderEventStream.generateEvents(java.lang.String[], java.lang.String[], opennlp.tools.namefind.NameContextGenerator);0.6617795825004578
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);0.9059977531433105
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.9059977531433105
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.8527038097381592
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[], java.lang.String[][]);0.7994097471237183
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.setProbs(opennlp.tools.util.Span[]);0.7461158037185669
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.probs(opennlp.tools.util.Span[]);0.7061452865600586
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.7003162503242493
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.6391943693161011
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.5859003067016602
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.574708878993988
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.5692238211631775
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.875
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);0.75
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.find(java.lang.String[], java.lang.String[][]);0.75
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();0.7024555206298828
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.5966863036155701
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.setProbs(opennlp.tools.util.Span[]);0.5625
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikPOSTaggerFactory.setTagDictionary(opennlp.tools.postag.TagDictionary);1.0
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikPOSTaggerFactory.createTagDictionary(java.io.File);0.9470281600952148
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikPOSTaggerFactory.getTagDictionary();0.9470281600952148
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSModel.getFactory();0.7332549095153809
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator();0.7283633351325989
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.getFeatureGenerator();0.7018774151802063
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.<init>();0.68863445520401
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikPOSTaggerFactory.createMorfologikDictionary(byte[], byte[]);0.6821687817573547
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.getResources();0.6621484756469727
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator(int);0.6555269956588745
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.createArtifactMap();0.6356625556945801
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.createFeatureGenerators();0.6124873161315918
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.validateArtifactMap();0.6091765761375427
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);0.6017263531684875
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.loadDefaultFeatureGeneratorBytes();0.5974855422973633
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.createArtifactSerializersMap();0.5965248346328735
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);0.9999999403953552
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.9999999403953552
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();0.9637854099273682
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9169327616691589
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[], java.lang.String[][]);0.833865761756897
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.setProbs(opennlp.tools.util.Span[]);0.7507987022399902
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.getType();0.7165588140487671
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.6927507519721985
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.probs(opennlp.tools.util.Span[]);0.6884983777999878
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.6869369745254517
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.6781149506568909
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.6718338131904602
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.628322184085846
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.6007856130599976
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.5504246950149536
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5504246950149536
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameFinderEventStream.createEvents(opennlp.tools.namefind.NameSample);0.9690057635307312
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);0.8882552981376648
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.8882552981376648
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8727818131446838
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.8421121835708618
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameFinderEventStream.generateEvents(java.lang.String[], java.lang.String[], opennlp.tools.namefind.NameContextGenerator);0.8075047731399536
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.AbstractEventStream.close();0.7213014364242554
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.6405509114265442
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.AbstractEventStream.read();0.5598004460334778
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.namefind.TokenNameFinderCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, int);1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.namefind.TokenNameFinderCrossValidator.getFMeasure();0.9375
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.namefind.TokenNameFinderCrossValidator.<init>(java.lang.String, java.lang.String, opennlp.tools.util.TrainingParameters, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.75
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.namefind.TokenNameFinderCrossValidator.<init>(java.lang.String, java.lang.String, opennlp.tools.util.TrainingParameters, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.75
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.6085027456283569
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.5930320620536804
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameFinderEventStream.createEvents(opennlp.tools.namefind.NameSample);0.8882552981376648
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8727818131446838
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.8421121835708618
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.8075047731399536
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameFinderEventStream.overrideType(opennlp.tools.util.Span[]);0.8075047731399536
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameFinderEventStream.generateEvents(java.lang.String[], java.lang.String[], opennlp.tools.namefind.NameContextGenerator);0.7671295404434204
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.AbstractEventStream.close();0.7213014364242554
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.AbstractEventStream.read();0.6405509114265442
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.5598004460334778
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);0.9999999403953552
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.8808125853538513
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.8181818127632141
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.8181818127632141
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();0.8066217303276062
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.util.Span.getType();0.7533625364303589
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[], java.lang.String[][]);0.7272726893424988
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameFinderME.setProbs(opennlp.tools.util.Span[]);0.7272726893424988
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.7256348729133606
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.6989943981170654
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameFinderME.probs(opennlp.tools.util.Span[]);0.6590908765792847
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.instantiateSequenceCodec(java.lang.String);0.653539776802063
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.6477273106575012
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.6457825303077698
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.6397638320922852
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.6015486717224121
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.ml.model.Context.getOutcomes();0.5819597840309143
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.571544349193573
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.571544349193573
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.5647247433662415
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.914617657661438
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);0.9089822173118591
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.9089822173118591
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9089822173118591
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.find(java.lang.String[], java.lang.String[][]);0.8009020090103149
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.7705106735229492
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.setProbs(opennlp.tools.util.Span[]);0.7648752331733704
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.probs(opennlp.tools.util.Span[]);0.7108351588249207
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.706025242805481
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.7029542922973633
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.7005401849746704
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.6674455404281616
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.instantiateSequenceCodec(java.lang.String);0.6264037489891052
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.8333333730697632
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.8333333730697632
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();0.7216863036155701
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.6844912767410278
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.find(java.lang.String[], java.lang.String[][]);0.6666666865348816
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.6633563041687012
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6633563041687012
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.6579980850219727
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.BioCodec.<init>();0.6415702104568481
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.6338730454444885
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.6304205656051636
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.6259074807167053
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.TrainingParameters.<init>();0.6201357841491699
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.615997850894928
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.615997850894928
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.6026875972747803
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.setProbs(opennlp.tools.util.Span[]);0.5833333134651184
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.5550196170806885
opennlp.tools.cmdline.CLITest.testHelpMessageOfTools();opennlp.tools.cmdline.CLI.getToolNames();1.0
opennlp.tools.cmdline.CLITest.testHelpMessageOfTools();opennlp.tools.cmdline.CLI.main(java.lang.String[]);0.6428571343421936
opennlp.tools.cmdline.CLITest.testToolParameterMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.cmdline.CLITest.testToolParameterMessage();opennlp.tools.cmdline.TerminateToolException.getMessage();0.7940091490745544
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.sentPosDetect(java.lang.String);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.getSentenceProbabilities();0.8333333730697632
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.isAcceptableBreak(java.lang.String, int, int);0.6411764621734619
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.<init>(opennlp.tools.sentdetect.SentenceModel);0.6000000238418579
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.getFirstNonWS(java.lang.String, int);0.6000000238418579
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.sentdetect.SentenceSample>, opennlp.tools.sentdetect.SentenceDetectorFactory, opennlp.tools.util.TrainingParameters);0.6000000238418579
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorFactory.isUseTokenEnd();0.5909835696220398
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorFactory.getEndOfSentenceScanner();0.5888096690177917
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorFactory.getSDContextGenerator();0.5838407278060913
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.getFirstWS(java.lang.String, int);0.574999988079071
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.getSentences();0.9090909957885742
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getTokenSample();0.9081818461418152
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getOriginal();0.8172728419303894
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getTranslation();0.8172728419303894
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.advanceLeft(java.lang.String, int);0.7272727489471436
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.advanceRight(java.lang.String, int);0.7272727489471436
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.<init>();0.6818181872367859
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.add(opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument$IrishSentenceBankSentence);0.6363636255264282
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getFlex();0.635454535484314
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankFlex.getFlex();0.6338961124420166
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankFlex.getSurface();0.6338961124420166
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.5987442135810852
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getLanguageCode();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerModel.getFactory();0.9896137118339539
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.9536541700363159
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.9383753538131714
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.<init>(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.7843136787414551
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.createManifestEntries();0.7422969341278076
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.init(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.7352941036224365
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getAbbreviationDictionary();0.7347953915596008
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.createArtifactMap();0.7208765745162964
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.validateArtifactMap();0.7056242823600769
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getContextGenerator();0.7001204490661621
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerFactory.<init>();0.6924019455909729
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.<init>(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.5504816770553589
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.init(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.5504816770553589
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.<init>(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.init(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.8311688303947449
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8156710267066956
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.getAbbreviationDictionary();0.800000011920929
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.getLanguageCode();0.800000011920929
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.7755101919174194
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.getContextGenerator();0.6917293071746826
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerModel.<init>(java.io.InputStream);0.6811477541923523
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.util.BaseToolFactory.<init>();0.6259422302246094
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.createArtifactMap();0.6218487620353699
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.612599790096283
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.612599790096283
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.createManifestEntries();0.6122449040412903
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.<init>();0.598214328289032
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.tokenize.TokenizerFactory.validateArtifactMap();0.5902255773544312
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.9772728085517883
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.getContextGenerator();0.9242424964904785
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.getAbbreviationDictionary();0.8563637137413025
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.getLanguageCode();0.7651516199111938
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.<init>(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.6060606241226196
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.createArtifactMap();0.6060606241226196
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.createManifestEntries();0.6060606241226196
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.init(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.6060606241226196
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.getLanguageCode();0.9457594156265259
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.923468828201294
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.getContextGenerator();0.8941390514373779
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.<init>(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.8757032155990601
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.init(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.8757032155990601
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.8757032155990601
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.getAbbreviationDictionary();0.8476806879043579
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerModel.getFactory();0.8000484108924866
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.createArtifactMap();0.772679328918457
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.createManifestEntries();0.7443477511405945
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.validateArtifactMap();0.7207267880439758
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.tokenize.TokenizerFactory.<init>();0.7115088701248169
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.6505488753318787
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.6342774033546448
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.6342774033546448
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.util.model.BaseModel.getLanguage();0.559975266456604
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.tokenize.TokenizerTestUtil.createSimpleMaxentTokenModel();1.0
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.tokenize.TokenizerModel.<init>(java.io.InputStream);0.8805327415466309
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.8618708848953247
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7929553985595703
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.ml.model.Context.getOutcomes();0.7843844294548035
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.tokenize.TokenizerModel.getMaxentModel();0.7621697187423706
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.tokenize.TokenizerModel.validateArtifactMap();0.7175143361091614
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.tokenize.TokenizerModel.isModelCompatible(opennlp.tools.ml.model.MaxentModel);0.7038015723228455
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.tokenize.TokenizerModel.<init>(opennlp.tools.ml.model.MaxentModel, java.util.Map<java.lang.String, java.lang.String>, opennlp.tools.tokenize.TokenizerFactory);0.6946916580200195
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.6140827536582947
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.5789862871170044
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.getDivtypes();0.8999999761581421
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.getTexts();0.699999988079071
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.<init>();0.6499999761581421
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.<init>(java.util.Map<java.lang.String, java.lang.String>, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.lang.String>>>);0.6499999761581421
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.attrib(org.w3c.dom.Node, java.lang.String, boolean);0.6499999761581421
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.5982142686843872
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.5982142686843872
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.7482142448425293
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.6982142925262451
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.7482142448425293
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.6482142806053162
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.7482142448425293
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.6482142806053162
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.5982142686843872
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.5982142686843872
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.7482142448425293
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.6482142806053162
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.7482142448425293
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.6482142806053162
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.computeDirection(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>();0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double);0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int);0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int);0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int, boolean);0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.isConverged(opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult);0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(opennlp.tools.ml.maxent.quasinewton.Function);0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.display(java.lang.String);0.5625
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.7482142448425293
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.6982142925262451
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.6553031206130981
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6306818723678589
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.computeDirection(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>();0.875
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double);0.875
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int);0.875
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int);0.875
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int, boolean);0.875
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(opennlp.tools.ml.maxent.quasinewton.Function);0.875
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.isConverged(opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult);0.75
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.display(java.lang.String);0.625
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testGetParagraphs();opennlp.tools.formats.nkjp.NKJPTextDocument.getParagraphs();1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testGetParagraphs();opennlp.tools.formats.nkjp.NKJPTextDocument.parse(java.io.InputStream);0.6538461446762085
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatFactory.getFeatureGenerators();1.0
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.9995034337043762
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatModel.getFactory();0.8690890669822693
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatFactory.loadFeatureGenerators(java.lang.String);0.8405796885490417
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatFactory.<init>();0.782608687877655
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatFactory.createManifestEntries();0.739130437374115
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatFactory.featureGeneratorsAsString();0.7199999690055847
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatFactory.validateArtifactMap();0.7156750559806824
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.6273675560951233
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.doccat.DoccatModel.<init>(java.io.InputStream);0.5560455322265625
opennlp.tools.doccat.DocumentSampleTest.testEquals();opennlp.tools.doccat.DocumentSample.equals(java.lang.Object);1.0
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatFactory.<init>(opennlp.tools.doccat.FeatureGenerator[]);0.9999999403953552
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatFactory.getFeatureGenerators();0.9685713648796082
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatModel.getFactory();0.9423877000808716
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.9280819296836853
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.ml.model.Context.getOutcomes();0.8435167074203491
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatFactory.loadFeatureGenerators(java.lang.String);0.8204081058502197
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatFactory.createManifestEntries();0.7530611753463745
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatFactory.featureGeneratorsAsString();0.7139999270439148
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatFactory.<init>();0.7053571343421936
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatFactory.validateArtifactMap();0.7043232321739197
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatModel.<init>(java.io.InputStream);0.6909591555595398
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.ml.ArrayMath.argmax(double[]);0.5545352101325989
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.util.BaseToolFactory.<init>();0.552981436252594
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.getCategory();1.0
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.getText();0.7999999523162842
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[]);0.6000000238418579
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.6000000238418579
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentCategorizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.doccat.DocumentSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.doccat.DoccatFactory);0.9999999403953552
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[]);0.918279230594635
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.918279230594635
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DoccatFactory.<init>();0.8829236030578613
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8591007590293884
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();0.8287721872329712
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.8287721872329712
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.BaseToolFactory.<init>();0.7849279046058655
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.<init>();0.7703195810317993
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentCategorizerContextGenerator.<init>(opennlp.tools.doccat.FeatureGenerator[]);0.6077781915664673
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DoccatFactory.getFeatureGenerators();0.5725787878036499
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.doccat.DocumentSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.doccat.DoccatFactory);1.0
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.sortedScoreMap(java.lang.String[]);0.8999999761581421
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getBestCategory(double[]);0.8733333349227905
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.<init>(opennlp.tools.doccat.DoccatModel);0.800000011920929
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.categorize(java.lang.String[]);0.800000011920929
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getCategory(int);0.699999988079071
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getIndex(java.lang.String);0.699999988079071
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getNumberOfCategories();0.6666666865348816
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.categorize(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.6499999761581421
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.TokenNameFinderEvaluator.getFMeasure();1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.TokenNameFinderEvaluator.<init>(opennlp.tools.namefind.TokenNameFinder, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.9649122953414917
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.8033564686775208
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.NameSample.getNames();0.789793074131012
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.TokenNameFinderEvaluator.processSample(opennlp.tools.namefind.NameSample);0.7570850253105164
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.7482185363769531
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.7280299067497253
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.692942202091217
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.cmdline.namefind.NameEvaluationErrorListener.<init>(java.io.OutputStream);0.6555277109146118
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6071687936782837
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);1.0
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.chunker.ChunkerEvaluator.getFMeasure();0.8781852722167969
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.chunker.ChunkerEvaluator.<init>(opennlp.tools.chunker.Chunker, opennlp.tools.chunker.ChunkerEvaluationMonitor[]);0.6838964819908142
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.chunker.ChunkerEvaluator.processSample(opennlp.tools.chunker.ChunkSample);0.6427969336509705
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.5939364433288574
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getRecallScore();0.5787382125854492
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);1.0
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.LemmatizerEvaluator.getWordAccuracy();0.8643113970756531
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.LemmatizerEvaluator.<init>(opennlp.tools.lemmatizer.Lemmatizer, opennlp.tools.lemmatizer.LemmatizerEvaluationMonitor[]);0.7355841994285583
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.LemmatizerEvaluator.processSample(opennlp.tools.lemmatizer.LemmaSample);0.6913784146308899
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.5632468461990356
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmatizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.lemmatizer.LemmaSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.lemmatizer.LemmatizerFactory);1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmatizerFactory.<init>();0.9803921580314636
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmaSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9460784792900085
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.8450328707695007
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.8337313532829285
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8337313532829285
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.8223156929016113
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8219391107559204
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.8204082250595093
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.6670646667480469
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmatizerME.encodeLemmas(java.lang.String[], java.lang.String[]);0.6669921875
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmatizerFactory.getContextGenerator();0.6646026968955994
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.MockInputStreamFactory.createInputStream();0.6489545106887817
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.5704081654548645
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.perceptron.PerceptronTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);0.7599183917045593
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7222222089767456
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6388888955116272
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.perceptron.PerceptronTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int, boolean);0.6210294961929321
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.perceptron.PerceptronTrainer.<init>();0.5932517051696777
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.perceptron.PerceptronTrainer.findParameters(int, boolean);0.5515850782394409
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.model.AbstractModel.equals(java.lang.Object);0.9999999403953552
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.8142316937446594
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.7447241544723511
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.model.AbstractModel.hashCode();0.7021102905273438
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.validate();0.6737952828407288
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.isSortAndMerge();0.6525174975395203
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int, boolean);0.6365590691566467
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6241470575332642
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.setTolerance(double);0.6200096607208252
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.setSkippedAveraging(boolean);0.5960565805435181
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.findParameters(int, boolean);0.594003438949585
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.isPerfectSquare(int);0.5858765244483948
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.displayIteration(int);0.5830320715904236
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.5797500610351562
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.perceptron.PerceptronTrainer.<init>();0.5744987726211548
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.5553441047668457
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.8968254327774048
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelWriter.persist();0.7667204141616821
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7589224576950073
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelReader.<init>(opennlp.tools.ml.model.DataReader);0.7084362506866455
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelReader.checkModelType();0.7084362506866455
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.6873553395271301
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronTrainer.validate();0.6805533170700073
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModelReader.getModel();0.6772394180297852
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6710254549980164
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelReader.constructModel();0.6687537431716919
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelReader.<init>(java.io.DataInputStream);0.667458176612854
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.658730149269104
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.6566972732543945
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.6566972732543945
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelWriter.computeOutcomePatterns(opennlp.tools.ml.model.ComparablePredicate[]);0.644065260887146
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.DataOutputStream);0.6272879242897034
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelWriter.close();0.6272879242897034
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelWriter.sortValues();0.6079902648925781
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelWriter.writeInt(int);0.587605357170105
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.5813469886779785
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.5684462785720825
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronTrainer.isSortAndMerge();0.5615056753158569
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5519778728485107
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.8945508599281311
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.7619048357009888
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.validate();0.6938750147819519
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.isSortAndMerge();0.6700655221939087
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6224464178085327
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.<init>();0.5986369252204895
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.setTolerance(double);0.5986369252204895
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.setSkippedAveraging(boolean);0.5980103611946106
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.594550609588623
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.594550609588623
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int, boolean);0.5867321491241455
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.AbstractTrainer.addToReport(java.lang.String, java.lang.String);0.5799320936203003
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.findParameters(int, boolean);0.5748273730278015
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.displayIteration(int);0.5649687647819519
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.perceptron.PerceptronTrainer.trainingStats(opennlp.tools.ml.model.EvalParameters);0.5629225969314575
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7272727489471436
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6918228268623352
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6818181872367859
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.perceptron.PerceptronTrainer.validate();0.5957769751548767
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5808378458023071
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.perceptron.PerceptronTrainer.isSortAndMerge();0.5730496644973755
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5581105947494507
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.555459201335907
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7272726893424988
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6918228268623352
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6818181872367859
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.perceptron.PerceptronTrainer.validate();0.5957769751548767
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.perceptron.PerceptronTrainer.setSkippedAveraging(boolean);0.5844132900238037
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5808378458023071
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5808378458023071
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.perceptron.PerceptronTrainer.isSortAndMerge();0.5730496644973755
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.555459201335907
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.perceptron.PerceptronTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.550322413444519
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7307692170143127
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.634615421295166
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.628885805606842
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.perceptron.PerceptronTrainer.validate();0.5782944560050964
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.perceptron.PerceptronTrainer.setStepSizeDecrease(double);0.5686790943145752
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.perceptron.PerceptronTrainer.isSortAndMerge();0.5590636730194092
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.TerminateToolException.getMessage();0.7646014094352722
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CmdLineTool.getName();0.7555321455001831
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerTrainerTool.getName();0.7222222685813904
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerTrainerTool.getName();0.7131519317626953
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CmdLineTool.<init>();0.5888653993606567
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.TypedCmdLineTool.<init>(java.lang.Class<T>);0.5773810148239136
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatTool.<init>();0.5714285969734192
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.BasicCmdLineTool.<init>();0.5645147562026978
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerMETool.<init>();0.5604395866394043
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatCrossValidatorTool.<init>();0.5595238208770752
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.entitylinker.EntityLinkerTool.<init>();0.5595238208770752
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerCrossValidatorTool.<init>();0.5580952167510986
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatTrainerTool.<init>();0.5574229955673218
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractCrossValidatorTool.<init>(java.lang.Class<T>, java.lang.Class<P>);0.5567765235900879
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerTrainerTool.<init>();0.5555555820465088
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerCrossValidatorTool.<init>();0.5555555820465088
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerCrossValidatorTool.<init>();0.5555555820465088
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractTrainerTool.<init>(java.lang.Class<T>, java.lang.Class<P>);0.553884744644165
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatEvaluatorTool.<init>();0.553884744644165
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.SimpleTokenizerTool.<init>();0.553884744644165
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerMETool.<init>();0.5535714626312256
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerEvaluatorTool.<init>();0.5523809790611267
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractEvaluatorTool.<init>(java.lang.Class<T>, java.lang.Class<P>);0.5510203838348389
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.dictionary.DictionaryBuilderTool.<init>();0.5510203838348389
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.CheckModelUpdaterTool.<init>();0.5510203838348389
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.TokenNameFinderCrossValidator.<init>(java.lang.String, java.lang.String, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.TokenNameFinderCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, int);0.875
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.6529250144958496
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.eval.FMeasure.<init>();0.6233381628990173
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.6195357441902161
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.618805468082428
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.6070390343666077
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.601325511932373
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.556305468082428
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.ChunkerModel.getFactory();1.0
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.ChunkerFactory.<init>();0.8009423017501831
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.DummyChunkerFactory.getSequenceValidator();0.7547580003738403
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.ChunkerFactory.validateArtifactMap();0.7205845713615417
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.DummyChunkerFactory.getContextGenerator();0.7073338031768799
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.DummyChunkerFactory.<init>();0.5545223951339722
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.chunker.ChunkerModel.<init>(java.io.InputStream);1.0
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.initializeFactory();0.9522042870521545
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.chunker.ChunkerModel.validateArtifactMap();0.875
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.loadArtifactSerializers();0.8522042632102966
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.finishLoadingArtifacts(java.io.InputStream);0.8022043108940125
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.7522043585777283
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.7522043585777283
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.7522043585777283
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.createBaseArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.7487560510635376
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.checkArtifactMap();0.7022042870521545
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.createArtifactSerializers();0.5822043418884277
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.createArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.5822043418884277
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.initializeFactory();1.0
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.checkArtifactMap();0.8720074892044067
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.8720074892044067
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.chunker.ChunkerModel.validateArtifactMap();0.8063008189201355
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.chunker.ChunkerModel.<init>(java.io.InputStream);0.7974916100502014
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.createBaseArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.7392619848251343
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.finishLoadingArtifacts(java.io.InputStream);0.7350645065307617
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.loadArtifactSerializers();0.7191870212554932
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.getManifestProperty(java.lang.String);0.6165407299995422
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.createArtifactSerializers();0.5573429465293884
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.createArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.5573429465293884
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ConllXPOSSampleStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);1.0
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ConllXPOSSampleStream.read();1.0
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.getSentence();0.9950834512710571
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.getTags();0.9950834512710571
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.checkArguments();0.8593692779541016
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.PlainTextByLineStream.reset();0.778929591178894
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.6261540055274963
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.6099717617034912
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[]);0.5950835347175598
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[][]);0.5950835347175598
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.lang.String[][]);0.5950835347175598
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.5796261429786682
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.FilterObjectStream.close();0.5796261429786682
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.5789296627044678
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.5511481761932373
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getSentenceIdComment();1.0
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getWordLines();0.8901960253715515
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.postProcessContractions(java.util.List<opennlp.tools.formats.conllu.ConlluWordLine>);0.8657004237174988
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.close();0.8418300151824951
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getTextComment();0.8169934153556824
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.768627405166626
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.read();0.768627405166626
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.reset();0.5511713027954102
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluLemmaSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.getLemmas();0.9058282375335693
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.9058282375335693
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluLemmaSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, opennlp.tools.formats.conllu.ConlluTagset);0.8333333730697632
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);0.7979850769042969
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.toString();0.7391615509986877
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.reset();0.6684867143630981
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.5991828441619873
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTagset.<init>();0.5750828385353088
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.5724948644638062
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.5516355037689209
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluPOSSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.postag.POSSample.parse(java.lang.String);0.9584203958511353
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, opennlp.tools.formats.conllu.ConlluTagset);0.875
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.postag.POSSample.equals(java.lang.Object);0.7084203958511353
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.postag.POSSample.checkArguments();0.6459203958511353
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.reset();0.5613850951194763
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9733840227127075
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluTokenSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>);0.875
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.util.PlainTextByLineStream.reset();0.6913992762565613
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.6608840227127075
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.tokenize.TokenSample.addToken(java.lang.StringBuilder, java.util.List<opennlp.tools.util.Span>, java.lang.String, boolean);0.5983840227127075
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);0.5983840227127075
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluStream.postProcessContractions(java.util.List<opennlp.tools.formats.conllu.ConlluWordLine>);0.5951206684112549
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.ParagraphStream.read();1.0
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.FilterObjectStream.reset();0.9315373301506042
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8333333134651184
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.sentdetect.SentenceSample.getDocument();0.7342381477355957
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentenceSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, int);0.6909810304641724
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentenceSampleStream.read();0.6909810304641724
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9733840227127075
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTokenSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>);0.875
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);0.7233840227127075
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.7233840227127075
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.reset();0.566399335861206
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluTokenSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>);0.89892578125
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();0.89892578125
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.reset();0.8387227058410645
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.8073729872703552
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.addToken(java.lang.StringBuilder, java.util.List<opennlp.tools.util.Span>, java.lang.String, boolean);0.678955078125
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.6216829419136047
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);0.6147460341453552
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.getText();0.6147460341453552
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.util.FilterObjectStream.close();0.5832691192626953
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getWordLines();0.5803796052932739
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.5555595755577087
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluPOSSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.postag.POSSample.parse(java.lang.String);0.9584203958511353
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, opennlp.tools.formats.conllu.ConlluTagset);0.875
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.util.PlainTextByLineStream.reset();0.6863850355148315
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.postag.POSSample.checkArguments();0.6459203958511353
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.postag.POSSample.getSentence();0.6459203958511353
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluStream.postProcessContractions(java.util.List<opennlp.tools.formats.conllu.ConlluWordLine>);0.6028846502304077
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.postag.POSSample.equals(java.lang.Object);0.5834203958511353
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.ParagraphStream.read();1.0
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.75
opennlp.tools.formats.ad.ADParagraphStreamTest.testSimpleReading();opennlp.tools.formats.ad.ADSentenceStream.read();1.0
opennlp.tools.formats.ad.ADParagraphStreamTest.testSimpleReading();opennlp.tools.formats.ad.ADSentenceStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.625
opennlp.tools.formats.ad.ADParagraphStreamTest.testLeadingWithContraction();opennlp.tools.formats.ad.ADSentenceStream.read();1.0
opennlp.tools.formats.ad.ADParagraphStreamTest.testLeadingWithContraction();opennlp.tools.formats.ad.ADSentenceStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8333333730697632
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean, boolean);1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.close();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.getSentence();0.8906758427619934
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.getTags();0.8906758427619934
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.read();0.8333333730697632
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADSentenceStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.7576823234558105
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.process(opennlp.tools.formats.ad.ADSentenceStream$SentenceParser$Node, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.75
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.checkArguments();0.7478187084197998
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADSentenceStream.SentenceParser.<init>();0.6923311352729797
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.6772119402885437
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.util.PlainTextByLineStream.reset();0.6772119402885437
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.processLeaf(opennlp.tools.formats.ad.ADSentenceStream$SentenceParser$Leaf, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.6666666865348816
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.6648366451263428
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.6532674431800842
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.6406758427619934
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.lang.String[][]);0.6406758427619934
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.close();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean, boolean);0.75
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.read();0.75
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.process(opennlp.tools.formats.ad.ADSentenceStream$SentenceParser$Node, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.7142857313156128
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.util.PlainTextByLineStream.reset();0.6772119402885437
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.postag.POSSample.getSentence();0.6634031534194946
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.postag.POSSample.getTags();0.6049615740776062
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.processLeaf(opennlp.tools.formats.ad.ADSentenceStream$SentenceParser$Leaf, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.6022727489471436
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.read();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.postag.POSSample.getSentence();0.7543122172355652
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.postag.POSSample.getTags();0.7240091562271118
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean, boolean);0.6666666865348816
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.close();0.6666666865348816
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.process(opennlp.tools.formats.ad.ADSentenceStream$SentenceParser$Node, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.6666666865348816
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.postag.POSSample.checkArguments();0.581152081489563
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.processLeaf(opennlp.tools.formats.ad.ADSentenceStream$SentenceParser$Leaf, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.560606062412262
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9189189076423645
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.8909955620765686
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.7837837338447571
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7432432174682617
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.create(java.lang.String, java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getLanguageCode();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.97991544008255
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.9368771314620972
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getContextGenerator();0.9261060357093811
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getAbbreviationDictionary();0.8981990218162537
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.<init>();0.5765503644943237
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.init(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.5765503644943237
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerFactory.getSequenceValidator();1.0
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerFactory.getContextGenerator();0.9655433893203735
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerModel.getFactory();0.9238861203193665
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerFactory.<init>();0.7194245457649231
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerFactory.validateArtifactMap();0.6739871501922607
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.chunker.ChunkSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.chunker.ChunkerFactory);1.0
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkerFactory.<init>();0.9500384330749512
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9486491084098816
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.8242513537406921
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.8185283541679382
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8100459575653076
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.8047749996185303
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8019696474075317
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.643379271030426
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkerFactory.getContextGenerator();0.6342490315437317
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.6224498748779297
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.5742513537406921
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.typeSystemInit(org.apache.uima.cas.TypeSystem);1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.util.CasUtil.deserializeXmiCAS(org.apache.uima.cas.CAS, java.io.InputStream);0.9059374928474426
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.documentDone(org.apache.uima.cas.CAS);0.8219524621963501
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.postProcessAnnotations(opennlp.tools.util.Span[], org.apache.uima.cas.text.AnnotationFS[]);0.7841848134994507
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.6825159192085266
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.652841329574585
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.process(org.apache.uima.cas.CAS);0.6439048647880554
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.<init>(org.apache.uima.cas.CAS, org.apache.uima.cas.Type, org.apache.uima.cas.Type);1.0
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.hasNext();1.0
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.iterator();1.0
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.next();1.0
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.createEmptyCAS(org.apache.uima.resource.metadata.TypeSystemDescription);0.8132332563400269
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.AnnotationIterator.hasNext();0.7376207113265991
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.AnnotationIterator.iterator();0.7376207113265991
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.AnnotationIterator.next();0.7376207113265991
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.deserializeXmiCAS(org.apache.uima.cas.CAS, java.io.InputStream);0.7053900957107544
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.createTypeSystemDescription(java.io.InputStream);0.6774308085441589
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationIteratorPair.getSubIterator();0.6271135210990906
opennlp.tools.langdetect.LanguageDetectorCrossValidatorTest.evaluate();opennlp.tools.langdetect.LanguageDetectorCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.langdetect.LanguageSample>, int);1.0
opennlp.tools.langdetect.LanguageDetectorCrossValidatorTest.evaluate();opennlp.tools.langdetect.LanguageDetectorCrossValidator.getDocumentAccuracy();0.6052631735801697
opennlp.tools.langdetect.LanguageDetectorCrossValidatorTest.evaluate();opennlp.tools.langdetect.LanguageDetectorCrossValidator.getDocumentCount();0.59375
opennlp.tools.langdetect.LanguageDetectorCrossValidatorTest.evaluate();opennlp.tools.langdetect.LanguageDetectorCrossValidator.<init>(opennlp.tools.util.TrainingParameters, opennlp.tools.langdetect.LanguageDetectorFactory, opennlp.tools.langdetect.LanguageDetectorEvaluationMonitor[]);0.5625
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9642857313156128
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.8571429252624512
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.8562814593315125
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7142857313156128
opennlp.tools.postag.POSDictionaryTest.testCaseSensitiveDictionary();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSDictionaryTest.testCaseSensitiveDictionary();opennlp.tools.postag.POSDictionary.serialize(java.io.OutputStream);0.8125
opennlp.tools.postag.POSDictionaryTest.testCaseSensitiveDictionary();opennlp.tools.postag.POSDictionary.create(java.io.InputStream);0.75
opennlp.tools.postag.POSDictionaryTest.testCaseSensitiveDictionary();opennlp.tools.postag.POSDictionary.<init>();0.59375
opennlp.tools.postag.POSDictionaryTest.testCaseSensitiveDictionary();opennlp.tools.postag.POSDictionary.<init>(boolean);0.59375
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.hashCode();1.0
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.equals(java.lang.Object);0.875
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.create(java.io.InputStream);0.59375
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);0.59375
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.iterator();0.59375
opennlp.tools.postag.POSDictionaryTest.testLoadingDictionaryWithoutCaseAttribute();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSDictionaryTest.testLoadingDictionaryWithoutCaseAttribute();opennlp.tools.postag.POSDictionary.create(java.io.InputStream);0.7999999523162842
opennlp.tools.postag.POSDictionaryTest.testLoadingDictionaryWithoutCaseAttribute();opennlp.tools.postag.POSDictionary.<init>();0.6000000238418579
opennlp.tools.postag.POSDictionaryTest.testLoadingDictionaryWithoutCaseAttribute();opennlp.tools.postag.POSDictionary.<init>(boolean);0.6000000238418579
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.loadDefaultFeatureGeneratorBytes();1.0
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.DummyPOSTaggerFactory.getPOSContextGenerator();0.9255030155181885
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.DummyPOSTaggerFactory.getTagDictionary();0.875346302986145
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.DummyPOSTaggerFactory.getSequenceValidator();0.7750328183174133
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSModel.getFactory();0.6673227548599243
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.getFeatureGenerator();0.6645768284797668
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.<init>(byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.postag.TagDictionary);0.6520376801490784
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.getResources();0.6269592642784119
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.createArtifactMap();0.6018809080123901
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.validateArtifactMap();0.5768024921417236
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.createArtifactSerializersMap();0.5648230910301208
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSTaggerFactory.<init>();0.5579937100410461
opennlp.tools.postag.POSDictionaryTest.testCaseInsensitiveDictionary();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSDictionaryTest.testCaseInsensitiveDictionary();opennlp.tools.postag.POSDictionary.serialize(java.io.OutputStream);0.8125
opennlp.tools.postag.POSDictionaryTest.testCaseInsensitiveDictionary();opennlp.tools.postag.POSDictionary.create(java.io.InputStream);0.75
opennlp.tools.postag.POSDictionaryTest.testCaseInsensitiveDictionary();opennlp.tools.postag.POSDictionary.<init>();0.625
opennlp.tools.postag.POSDictionaryTest.testCaseInsensitiveDictionary();opennlp.tools.postag.POSDictionary.<init>(boolean);0.625
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.serialize(java.io.OutputStream);1.0
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.<init>();0.875
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.<init>(boolean);0.875
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.equals(java.lang.Object);0.875
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.iterator();0.8125
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.create(java.io.InputStream);0.6875
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);0.625
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.put(java.lang.String, java.lang.String[]);0.625
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.nicePrint();1.0
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.6666666865348816
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.6470588445663452
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();0.5625
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getTags();1.0
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getPreds();0.9375
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getSentence();0.8181818127632141
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();1.0
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.equals(java.lang.Object);0.9166666269302368
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getSentence();0.9166666269302368
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getPreds();0.8125
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);0.7941176891326904
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.7450980544090271
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getTags();0.7083333134651184
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.util.Span.equals(java.lang.Object);0.6028401255607605
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.5520833134651184
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();1.0
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);0.8049535155296326
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.8049535155296326
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.7894736528396606
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.getTags();0.7518796324729919
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.util.Span.equals(java.lang.Object);0.7222877740859985
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.getSentence();0.6698563694953918
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.getPreds();0.6249999403953552
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getSentence();1.0
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9285714626312256
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getPreds();0.7857142686843872
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.7142857313156128
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getTags();0.7142857313156128
opennlp.tools.chunker.ChunkSampleTest.testEquals();opennlp.tools.chunker.ChunkSample.equals(java.lang.Object);1.0
opennlp.tools.chunker.ChunkSampleTest.testEquals();opennlp.tools.chunker.ChunkSample.getTags();0.6071428656578064
opennlp.tools.chunker.ChunkSampleTest.testEquals();opennlp.tools.chunker.ChunkSample.getPreds();0.5625
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getPreds();0.9999999403953552
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getSentence();0.9999999403953552
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ChunkSampleStream.read();0.9184845089912415
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ChunkSampleStream.getInitialChunks(opennlp.tools.parser.Parse);0.8767352104187012
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8515689373016357
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>);0.8349859118461609
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getTags();0.8330028057098389
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.7912535071372986
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ChunkSampleStream.getInitialChunks(opennlp.tools.parser.Parse, java.util.List<opennlp.tools.parser.Parse>);0.7723619341850281
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.5825070142745972
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSampleStream.read();1.0
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.getSentence();0.9705729484558105
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8888888955116272
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.getPreds();0.859461784362793
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.getTags();0.859461784362793
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.7124029397964478
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.util.PlainTextByLineStream.reset();0.6157479882240295
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.5816839933395386
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);1.0
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.chunker.ChunkerEvaluator.getFMeasure();0.9724153876304626
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.FMeasure.getRecallScore();0.7527654767036438
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.7263650894165039
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.7007952928543091
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.chunker.ChunkerEvaluator.<init>(opennlp.tools.chunker.Chunker, opennlp.tools.chunker.ChunkerEvaluationMonitor[]);0.6732106804847717
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.chunker.ChunkerEvaluator.processSample(opennlp.tools.chunker.ChunkSample);0.6732106804847717
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.createReport(java.util.Locale);1.0
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9259486794471741
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.chunker.ChunkerDetailedFMeasureListener.<init>();0.7768207788467407
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.<init>();0.7329679131507874
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.zeroOrPositive(double);0.7294999361038208
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.chunker.ChunkerDetailedFMeasureListener.asSpanArray(opennlp.tools.chunker.ChunkSample);0.7095109224319458
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.missclassified(T, T);0.667076826095581
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.addFalseNegative(java.lang.String);0.6631754636764526
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.addTruePositive(java.lang.String);0.6577134132385254
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.addFalsePositive(java.lang.String);0.6563478708267212
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.initStatsForOutcomeAndGet(java.lang.String);0.6446045637130737
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.getTags();1.0
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();0.9777778387069702
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.getPreds();0.9583333730697632
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.getSentence();0.9494950175285339
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.888888955116272
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);0.8496732115745544
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.8496732115745544
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.PlainTextByLineStream.reset();0.8146175146102905
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.DummyChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean);0.7481796145439148
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.DummyChunkSampleStream.read();0.7481796145439148
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.Span.spansToStrings(opennlp.tools.util.Span[], java.lang.String[]);0.692675769329071
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.6011480689048767
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.5923952460289001
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.5888826251029968
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.FilterObjectStream.close();0.5888826251029968
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999999403953552
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7719243764877319
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7426918148994446
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.7399519085884094
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6462013125419617
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.model.Context.getOutcomes();0.595809280872345
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumCorrect();0.570902407169342
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getLoglikelihood();0.5628615021705627
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumEvents();0.5548206567764282
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999999403953552
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7426918148994446
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7204627990722656
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.7013556957244873
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6397686004638672
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.model.Context.getOutcomes();0.6344055533409119
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumCorrect();0.5596451759338379
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getLoglikelihood();0.5532125234603882
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumEvents();0.5532125234603882
opennlp.tools.cmdline.CLITest.testMainHelpMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.cmdline.CLITest.testMainHelpMessage();opennlp.tools.cmdline.CLI.usage();0.75
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFail();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFail();opennlp.tools.formats.brat.BratNameSampleStream.read(opennlp.tools.formats.brat.BratDocument);0.7146018147468567
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFail();opennlp.tools.formats.brat.SegmenterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.5625
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCr();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCr();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.7777777910232544
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCr();opennlp.tools.sentdetect.NewlineSentenceDetector.sentPosDetect(java.lang.String);0.692307710647583
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineLf();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.8703703880310059
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentPosDetect(java.lang.String);0.692307710647583
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCrLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCrLf();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.75
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCrLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentPosDetect(java.lang.String);0.7115384340286255
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFilter();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFilter();opennlp.tools.formats.brat.BratNameSampleStream.read(opennlp.tools.formats.brat.BratDocument);0.7146018147468567
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFilter();opennlp.tools.formats.brat.SegmenterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.625
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFilter();opennlp.tools.formats.brat.BratNameSampleStream.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.tokenize.Tokenizer, opennlp.tools.util.ObjectStream<opennlp.tools.formats.brat.BratDocument>, java.util.Set<java.lang.String>);0.5896018147468567
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.formats.brat.BratDocumentParser.parse(opennlp.tools.formats.brat.BratDocument);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.readNoOverlap();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.readNoOverlap();opennlp.tools.formats.brat.BratNameSampleStream.read(opennlp.tools.formats.brat.BratDocument);0.7146018147468567
opennlp.tools.formats.brat.BratNameSampleStreamTest.readNoOverlap();opennlp.tools.formats.brat.SegmenterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.5625
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.util.Span.getEnd();0.8913984298706055
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.8667347431182861
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.util.Span.getStart();0.7802873849868774
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.7395240664482117
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.tokenize.SimpleTokenizer.<init>();0.5828112959861755
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerME.train(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, opennlp.tools.tokenize.TokenizerFactory, opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.create(java.lang.String, java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.9916656017303467
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.950473964214325
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);0.950473964214325
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.8521952033042908
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.825875461101532
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8255610466003418
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.8090506792068481
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.7059513330459595
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.6886352896690369
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.getContextGenerator();0.6758761405944824
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.6588943600654602
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.<init>(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.6583322882652283
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.init(java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.6583322882652283
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.6129721999168396
opennlp.tools.namefind.NameSampleTest.testMissingType();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testMissingType();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.namefind.NameSampleTest.testMissingType();opennlp.tools.namefind.NameSample.errorTokenWithContext(java.lang.String[], int);0.6309523582458496
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.getTags();1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.checkArguments();0.6857143044471741
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[]);0.550000011920929
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[][]);0.550000011920929
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.lang.String[][]);0.550000011920929
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.WordTagSampleStream.read();1.0
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.POSSample.getSentence();0.8716993927955627
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.CollectionObjectStream.reset();0.8015819787979126
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.FilterObjectStream.reset();0.7489035129547119
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.WordTagSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.7142857313156128
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.POSSample.parse(java.lang.String);0.65741366147995
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.FilterObjectStream.close();0.6060463786125183
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.POSSample.getTags();0.5859850645065308
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.TokSpanEventStream.createEvents(opennlp.tools.tokenize.TokenSample);0.7949666976928711
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.TokSpanEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, boolean);0.7287194728851318
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.TokSpanEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, boolean, opennlp.tools.tokenize.TokenContextGenerator);0.7287194728851318
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.util.AbstractEventStream.close();0.5715176463127136
opennlp.tools.tokenize.SimpleTokenizerTest.testWordDotTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotation.toString();0.9999999403953552
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.SpanAnnotation.toString();0.87221360206604
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotationStream.<init>(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream);0.851264476776123
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotationStream.read();0.851264476776123
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.8268227577209473
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.SpanAnnotation.getCoveredText();0.6593974828720093
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotation.setNote(java.lang.String);0.6098370552062988
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotation.<init>(java.lang.String, java.lang.String);0.5743677020072937
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9999999403953552
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.namefind.NameSampleDataStream.read();0.7199117541313171
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.6752974390983582
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(java.lang.CharSequence, int);1.0
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.nextSpaceIndex(java.lang.CharSequence, int, int);0.6071428656578064
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.<init>(java.util.Set<java.lang.String>, char[]);0.6000000238418579
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.collectFeatures(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Character);0.5833333134651184
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.escapeChar(java.lang.Character);0.574999988079071
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.previousSpaceIndex(java.lang.CharSequence, int);0.5694444179534912
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.util.Span.getStart();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.9348607063293457
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.7853593826293945
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.util.Span.getEnd();0.7195418477058411
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.673812210559845
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceModel.getFactory();1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();0.9268248677253723
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.741459846496582
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getAbbreviationDictionary();0.7057099342346191
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.eosStringToCharArray(java.lang.String);0.7043868899345398
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getSDContextGenerator();0.7035914063453674
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.createManifestEntries();0.7017388343811035
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.init(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.6951186656951904
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.createArtifactMap();0.6814888715744019
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.isUseTokenEnd();0.6808598041534424
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.eosCharArrayToString(char[]);0.6765820980072021
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.validateArtifactMap();0.6670699715614319
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>();0.6545700430870056
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getEndOfSentenceScanner();0.6322086453437805
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceModel.getEosCharacters();0.6292700171470642
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceModel.getAbbreviations();0.559758186340332
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.init(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8301822543144226
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.getAbbreviationDictionary();0.800000011920929
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceModel.<init>(java.io.InputStream);0.7379204034805298
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.getSDContextGenerator();0.7346938848495483
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.getEndOfSentenceScanner();0.7204968929290771
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();0.7142857313156128
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.util.BaseToolFactory.<init>();0.622604489326477
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.createArtifactMap();0.6218487620353699
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.createManifestEntries();0.6122449040412903
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.eosStringToCharArray(java.lang.String);0.6000000238418579
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>();0.598214328289032
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.isUseTokenEnd();0.5934065580368042
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.validateArtifactMap();0.5902255773544312
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.sentdetect.SentenceDetectorFactory.eosCharArrayToString(char[]);0.5857142806053162
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.554957926273346
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.554957926273346
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.read();0.9000000357627869
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.7885624766349792
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.6712413430213928
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSample.getNames();0.9999999403953552
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8791034817695618
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSample.getSentence();0.8046436309814453
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSampleDataStream.read();0.6837471127510071
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.557978093624115
opennlp.tools.namefind.NameSampleTest.testTypeWithSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.namefind.NameSampleTest.testTypeWithSpace();opennlp.tools.namefind.NameSample.errorTokenWithContext(java.lang.String[], int);0.70634925365448
opennlp.tools.postag.POSTaggerMETest.testBuildNGramDictionary();opennlp.tools.postag.POSTaggerME.buildNGramDictionary(opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, int);1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.BratAnnotationStream.read();1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.RelationAnnotation.toString();0.8919537663459778
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.SpanAnnotation.toString();0.8782366514205933
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.BratAnnotationStream.<init>(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream);0.785714328289032
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.BratAnnotation.toString();0.7211911678314209
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.6896752119064331
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.SpanAnnotation.getCoveredText();0.592522382736206
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getSentence();1.0
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getAddictionalContext();0.8333333134651184
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getTags();0.75
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.parse(java.lang.String);0.75
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.checkArguments();0.625
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.8956987857818604
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.equals(java.lang.Object);0.6852836608886719
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.getStart();0.6852836608886719
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.sentdetect.SentenceDetectorEvaluator.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.sentdetect.SentenceDetectorEvaluationMonitor[]);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.sentdetect.SentenceDetectorEvaluator.getFMeasure();0.8636363744735718
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.sentdetect.SentenceDetectorEvaluator.processSample(opennlp.tools.sentdetect.SentenceSample);0.807692289352417
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.800143837928772
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.cmdline.sentdetect.SentenceEvaluationErrorListener.<init>(java.io.OutputStream);0.7534562349319458
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.7378203868865967
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6810189485549927
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.sentdetect.SentenceDetectorEvaluator.trimSpans(java.lang.String, opennlp.tools.util.Span[]);0.6111111044883728
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.6014567613601685
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.585858166217804
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.getSentence();1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.checkArguments();0.75
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[]);0.550000011920929
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[][]);0.550000011920929
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.lang.String[][]);0.550000011920929
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.sentdetect.SDEventStream.createEvents(opennlp.tools.sentdetect.SentenceSample);0.7826378345489502
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.sentdetect.SDEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.sentdetect.SentenceSample>, opennlp.tools.sentdetect.SDContextGenerator, opennlp.tools.sentdetect.EndOfSentenceScanner);0.7174180150032043
opennlp.tools.tokenize.SimpleTokenizerTest.testWordNumericTokeniztation();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testEquals();opennlp.tools.postag.POSSample.equals(java.lang.Object);1.0
opennlp.tools.postag.POSSampleTest.testEquals();opennlp.tools.postag.POSSample.getTags();0.6071428656578064
opennlp.tools.postag.POSSampleTest.testEquals();opennlp.tools.postag.POSSample.parse(java.lang.String);0.5833333134651184
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.9613051414489746
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.util.Span.getStart();0.656676709651947
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.6149320602416992
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar2();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar2();opennlp.tools.namefind.NameSample.errorTokenWithContext(java.lang.String[], int);0.7777777910232544
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar2();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.7783079147338867
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.7775121331214905
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);0.7775121331214905
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSampleStream.read();0.7775121331214905
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.6639024019241333
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.6112440228462219
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSample.addToken(java.lang.StringBuilder, java.util.List<opennlp.tools.util.Span>, java.lang.String, boolean);0.5663874745368958
opennlp.tools.formats.muc.SgmlParserTest.testParse1();opennlp.tools.formats.muc.SgmlParser.parse(java.io.Reader, opennlp.tools.formats.muc.SgmlParser$ContentHandler);1.0
opennlp.tools.formats.muc.SgmlParserTest.testParse1();opennlp.tools.formats.muc.SgmlParser.getAttributes(java.lang.CharSequence);0.5692307949066162
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.DummyFactory.getContextGenerator();0.9999999403953552
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.8490696549415588
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.DummyFactory.MyContectGenerator.getContext(java.lang.CharSequence);0.7780243754386902
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>(opennlp.tools.tokenize.Tokenizer);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8928571343421936
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.tokenize.SimpleTokenizer.<init>();0.6660016179084778
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.tokenize.AbstractTokenizer.<init>();0.6438563466072083
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.5605230331420898
opennlp.tools.namefind.NameSampleTest.testNestedNameSpans();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testNestedNameSpans();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.namefind.NameSampleTest.testNestedNameSpans();opennlp.tools.namefind.NameSample.errorTokenWithContext(java.lang.String[], int);0.648809552192688
opennlp.tools.tokenize.WhitespaceTokenizerTest.testTokenizationOfStringWithoutTokens();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8269721269607544
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);0.8269721269607544
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSampleStream.read();0.8269721269607544
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.getText();0.8091602325439453
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.7697485089302063
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.764205276966095
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.6501271724700928
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.addToken(java.lang.StringBuilder, java.util.List<opennlp.tools.util.Span>, java.lang.String, boolean);0.5706106424331665
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.<init>(java.lang.String, opennlp.tools.util.Span[]);0.5547072887420654
opennlp.tools.postag.POSSampleTest.testParse();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParse();opennlp.tools.postag.POSSample.getTags();0.5714285969734192
opennlp.tools.postag.POSSampleTest.testParse();opennlp.tools.postag.POSSample.toString();0.5625
opennlp.tools.postag.POSSampleTest.testParse();opennlp.tools.postag.POSSample.checkArguments();0.5535714030265808
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.getSDContextGenerator();0.9177560210227966
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();0.914171040058136
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.8603963255882263
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.init(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.8603963255882263
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceModel.getFactory();0.8544497489929199
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.getEndOfSentenceScanner();0.8454328179359436
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.getAbbreviationDictionary();0.7605902552604675
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.createArtifactMap();0.7591732144355774
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.createManifestEntries();0.7313368916511536
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.eosStringToCharArray(java.lang.String);0.7184308767318726
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.isUseTokenEnd();0.711481511592865
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.eosCharArrayToString(char[]);0.7109024524688721
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.validateArtifactMap();0.708128809928894
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>();0.699072003364563
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.6522334218025208
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.5537577271461487
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.5537577271461487
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9999999403953552
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerME.<init>(opennlp.tools.tokenize.TokenizerModel);0.8213787078857422
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerME.tokenizePos(java.lang.String);0.7915104031562805
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerME.train(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, opennlp.tools.tokenize.TokenizerFactory, opennlp.tools.util.TrainingParameters);0.739240825176239
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerME.useAlphaNumericOptimization();0.6707926392555237
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerModel.getFactory();0.610188364982605
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerModel.getMaxentModel();0.5996277332305908
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerTestUtil.createMaxentTokenModel();0.5707152485847473
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.TokenizerFactory.getContextGenerator();0.5537810921669006
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.sentdetect.SentenceSample>, opennlp.tools.sentdetect.SentenceDetectorFactory, opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.9879781007766724
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.init(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.9879781007766724
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9538263082504272
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.EmptyLinePreprocessorStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8855084776878357
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.8488882780075073
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.8422214388847351
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8236405253410339
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.822508692741394
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.8058040142059326
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.getSDContextGenerator();0.7022638320922852
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.getEndOfSentenceScanner();0.6691374778747559
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.6569738984107971
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.6461430788040161
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.parseDocument(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream, java.io.InputStream);1.0
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getAnnotation(java.lang.String);0.9375
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getAnnotations();0.9375
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getText();0.8125
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getId();0.6875
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.<init>(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.formats.brat.BratAnnotation>);0.625
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.6866465210914612
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.util.Span.getStart();0.570845901966095
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.getSentence();0.65625
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.6448863744735718
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.getAdditionalContext();0.6328125
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.equals(java.lang.Object);0.625
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);0.625
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.getNames();0.59375
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.5625
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSample.getNames();0.9999999403953552
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8791034817695618
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSample.getSentence();0.8046436309814453
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.getType();0.7172120809555054
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSampleDataStream.read();0.6837471127510071
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.557978093624115
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.getStart();1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.equals(java.lang.Object);0.7711178064346313
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.6866465210914612
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9100714921951294
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.util.Span.getEnd();0.8359683752059937
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.util.Span.getStart();0.7359684109687805
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.6431668996810913
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.trim(java.lang.CharSequence);1.0
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.<init>(int, int);0.5833333134651184
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5833333134651184
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.5714285969734192
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.getStart();0.5625
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.postag.POSEvaluator.<init>(opennlp.tools.postag.POSTagger, opennlp.tools.postag.POSTaggerEvaluationMonitor[]);1.0
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.8654676079750061
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.7988009452819824
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.postag.POSEvaluator.getWordAccuracy();0.7822222709655762
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.postag.POSEvaluator.processSample(opennlp.tools.postag.POSSample);0.7487179636955261
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.cmdline.postag.POSEvaluationErrorListener.<init>(java.io.OutputStream);0.692307710647583
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6410722136497498
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Mean.<init>();0.634116530418396
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.9895339012145996
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.equals(java.lang.Object);0.8729538917541504
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.getStart();0.8047102093696594
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.599979043006897
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.599979043006897
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.getEnd();0.599979043006897
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSample.getNames();0.8832690119743347
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.util.Span.getType();0.6884562969207764
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.6332690119743347
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSample.getSentence();0.6332690119743347
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.626344621181488
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSampleTypeFilter.read();0.625
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.587814450263977
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSample.getId();0.5707690119743347
opennlp.tools.util.StringUtilTest.testNoBreakSpace();opennlp.tools.util.StringUtil.isWhitespace(char);1.0
opennlp.tools.util.StringUtilTest.testNoBreakSpace();opennlp.tools.util.StringUtil.isWhitespace(int);1.0
opennlp.tools.postag.POSSampleTest.testParseWithError();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSampleEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>);0.8475197553634644
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSampleEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, opennlp.tools.postag.POSContextGenerator);0.8475197553634644
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSampleEventStream.createEvents(opennlp.tools.postag.POSSample);0.8475197553634644
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8200361728668213
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSampleEventStream.generateEvents(java.lang.String[], java.lang.String[], java.lang.Object[], opennlp.tools.postag.POSContextGenerator);0.7203917503356934
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.AbstractEventStream.close();0.7169090509414673
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSample.checkArguments();0.6936073899269104
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSample.parse(java.lang.String);0.6512313485145569
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.6321570873260498
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSample.getSentence();0.6088553667068481
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSample.getAddictionalContext();0.5664793848991394
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSample.getNames();0.9999999403953552
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSample.getSentence();0.8046436309814453
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.7814252972602844
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSampleDataStream.read();0.7814252972602844
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.Span.equals(java.lang.Object);0.6195338368415833
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);0.6092873215675354
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.FilterObjectStream.close();0.557978093624115
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar1();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar1();opennlp.tools.namefind.NameSample.errorTokenWithContext(java.lang.String[], int);0.7777777910232544
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar1();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);0.9166666269302368
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.7083333134651184
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerTestUtil.createSimpleMaxentTokenModel();1.0
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerModel.getMaxentModel();0.9301588535308838
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.8858022093772888
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerME.tokenizePos(java.lang.String);0.8127163648605347
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerFactory.getContextGenerator();0.7948601841926575
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerME.<init>(opennlp.tools.tokenize.TokenizerModel);0.7782374620437622
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.7509779930114746
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerME.train(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, opennlp.tools.tokenize.TokenizerFactory, opennlp.tools.util.TrainingParameters);0.7437586188316345
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.7062003016471863
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerME.useAlphaNumericOptimization();0.6914017796516418
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.TokenizerModel.getFactory();0.5853700637817383
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.5767714381217957
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.5720999240875244
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.sentdetect.SentenceDetectorEvaluator.getFMeasure();1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.sentdetect.SentenceDetectorEvaluator.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.sentdetect.SentenceDetectorEvaluationMonitor[]);0.9593023061752319
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.818751871585846
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.7547983527183533
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.7317231893539429
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.sentdetect.SentenceDetectorEvaluator.processSample(opennlp.tools.sentdetect.SentenceSample);0.7182468771934509
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.cmdline.sentdetect.SentenceEvaluationErrorListener.<init>(java.io.OutputStream);0.7070249319076538
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.6910254955291748
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6329030990600586
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.sentdetect.SentenceDetectorEvaluator.trimSpans(java.lang.String, opennlp.tools.util.Span[]);0.6111111044883728
opennlp.tools.tokenize.WhitespaceTokenizerTest.testOneToken();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithNewLine();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithNewLine();opennlp.tools.namefind.NameSample.errorTokenWithContext(java.lang.String[], int);0.8571428060531616
opennlp.tools.namefind.NameSampleTest.testTypeWithNewLine();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.tokenize.SimpleTokenizerTest.testWhitespaceTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>();0.9375
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>(opennlp.tools.tokenize.Tokenizer);0.9375
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.5813562870025635
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.postag.POSEvaluator.<init>(opennlp.tools.postag.POSTagger, opennlp.tools.postag.POSTaggerEvaluationMonitor[]);1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.8113758563995361
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.postag.POSEvaluator.processSample(opennlp.tools.postag.POSSample);0.807692289352417
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.cmdline.postag.POSEvaluationErrorListener.<init>(java.io.OutputStream);0.7115384340286255
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6635051965713501
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Mean.<init>();0.6569842100143433
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.postag.POSEvaluator.getWordAccuracy();0.6333333253860474
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.5970901250839233
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSampleStream.read();0.9329649209976196
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.getText();0.922252893447876
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8552178144454956
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);0.8552178144454956
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.836243748664856
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.7438360452651978
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.7278852462768555
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.addToken(java.lang.StringBuilder, java.util.List<opennlp.tools.util.Span>, java.lang.String, boolean);0.6112645864486694
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.<init>(java.lang.String, opennlp.tools.util.Span[]);0.5918278098106384
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.BratDocument.parseDocument(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream, java.io.InputStream);1.0
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.BratDocument.getAnnotation(java.lang.String);0.9285714626312256
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.BratDocument.<init>(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.formats.brat.BratAnnotation>);0.6071428656578064
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSample.getNames();0.7166023254394531
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.util.Span.getType();0.6884562969207764
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSampleTypeFilter.read();0.6666666865348816
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.6332690119743347
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSample.getSentence();0.6332690119743347
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.626344621181488
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.5916023254394531
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceModel.getFactory();0.9485296607017517
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.getSDContextGenerator();0.9084249138832092
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.getEndOfSentenceScanner();0.8829430937767029
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.getAbbreviationDictionary();0.8123076558113098
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7709654569625854
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.7384614944458008
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.init(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.7384614944458008
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.ml.model.Context.getOutcomes();0.7003673911094666
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.createManifestEntries();0.6886446475982666
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.createArtifactMap();0.6877828240394592
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.eosStringToCharArray(java.lang.String);0.6615384221076965
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.eosCharArrayToString(char[]);0.6538462042808533
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.isUseTokenEnd();0.6508876085281372
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.validateArtifactMap();0.6356275677680969
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.6284162402153015
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>();0.6230769157409668
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.554392397403717
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(java.lang.CharSequence, int);1.0
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.collectFeatures(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Character);0.699999988079071
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.nextSpaceIndex(java.lang.CharSequence, int, int);0.699999988079071
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.previousSpaceIndex(java.lang.CharSequence, int);0.675000011920929
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.<init>(java.util.Set<java.lang.String>, char[]);0.6499999761581421
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.escapeChar(java.lang.Character);0.6499999761581421
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.parse(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.util.Span.getType();0.6966985464096069
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.read();0.8888888955116272
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.7301504611968994
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.6955938935279846
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);1.0
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.TokenNameFinderEvaluator.getFMeasure();0.7413122057914734
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.DictionaryNameFinder.<init>(opennlp.tools.dictionary.Dictionary);0.6485384702682495
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.DictionaryNameFinder.<init>(opennlp.tools.dictionary.Dictionary, java.lang.String);0.6485384702682495
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getFMeasure();0.6287871599197388
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getRecallScore();0.6240494847297668
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.614930272102356
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.DictionaryNameFinder.clearAdaptiveData();0.5889301300048828
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.5674711465835571
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.TokenNameFinderEvaluator.<init>(opennlp.tools.namefind.TokenNameFinder, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.5570683479309082
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSample.getNames();0.7166023254394531
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSampleTypeFilter.read();0.6666666865348816
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.6332690119743347
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.626344621181488
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSample.getSentence();0.5650871992111206
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);1.0
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.trim(java.lang.CharSequence);1.0
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.<init>(int, int);0.8947368264198303
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.8947368264198303
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.getType();0.7894737124443054
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.7368420958518982
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.getEnd();0.7368420958518982
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.getStart();0.7368420958518982
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.StringUtil.isWhitespace(char);0.6689196228981018
opennlp.tools.tokenize.WhitespaceTokenizerTest.testWhitespaceTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.tokenize.SimpleTokenizerTest.testWordWithOtherTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorME.predictLanguage(java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorME.predictLanguages(java.lang.CharSequence);0.734375
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorME.<init>(opennlp.tools.langdetect.LanguageDetectorModel);0.5666666626930237
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.Language.getLang();0.5569033026695251
opennlp.tools.langdetect.LanguageSampleTest.testHash();opennlp.tools.langdetect.LanguageSample.hashCode();1.0
opennlp.tools.langdetect.LanguageSampleTest.testHash();opennlp.tools.langdetect.Language.hashCode();0.6268932819366455
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5723621249198914
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.NegLLComputeTask.call();0.9749999046325684
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.GradientComputeTask.call();0.9459152817726135
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7291666865348816
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6750000715255737
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6278460621833801
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.AbstractModelReader.getModel();0.6407918334007263
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, boolean);0.9000000357627869
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.9000000357627869
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5723621845245361
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.AbstractTrainer.<init>();0.5665146112442017
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.AbstractEventTrainer.<init>();0.5538685321807861
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.5524008274078369
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.5524008274078369
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.5524008274078369
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.6840278506278992
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6464121341705322
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.6553031206130981
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6306818723678589
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.6666666865348816
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.625
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.5695127248764038
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7537878751754761
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6553030610084534
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(boolean);0.6499999761581421
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, boolean);0.6499999761581421
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.6499999761581421
opennlp.tools.util.featuregen.CharacterNgramFeatureGeneratorTest.testDefault();opennlp.tools.util.featuregen.CharacterNgramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.CharacterNgramFeatureGeneratorTest.testDefault();opennlp.tools.util.featuregen.CharacterNgramFeatureGenerator.<init>();0.75
opennlp.tools.util.featuregen.CharacterNgramFeatureGeneratorTest.testDefault();opennlp.tools.util.featuregen.CharacterNgramFeatureGenerator.<init>(int, int);0.75
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9999999403953552
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.isMergeToRight(opennlp.tools.tokenize.Detokenizer$DetokenizationOperation);0.9999999403953552
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.isMergeToLeft(opennlp.tools.tokenize.Detokenizer$DetokenizationOperation);0.9411764144897461
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.getText();0.882352888584137
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.<init>(opennlp.tools.tokenize.Detokenizer, java.lang.String[]);0.8235294222831726
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.toString();0.8235294222831726
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);0.8022940158843994
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[], java.lang.String);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);0.75
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString();opennlp.tools.tokenize.DictionaryDetokenizer.<init>(opennlp.tools.tokenize.DetokenizationDictionary);0.574999988079071
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileMissingCount();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.serialize(java.io.OutputStream);1.0
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.getOperation(java.lang.String);0.71875
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.<init>(java.io.InputStream);0.6875
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.init(java.io.InputStream);0.6875
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.create(java.lang.String, java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.9295774698257446
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getAbbreviationDictionary();0.8499675989151001
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getSDContextGenerator();0.8258227705955505
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getEndOfSentenceScanner();0.7287183403968811
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.stupidBackoff(opennlp.tools.util.StringList);0.6785714626312256
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.<init>(java.io.InputStream, int);0.6428571343421936
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileNotANumber();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileNotANumber();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.6497414708137512
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.serialize(java.io.OutputStream);1.0
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.size();0.7222222089767456
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.numberOfGrams();0.6153846383094788
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);0.6111111044883728
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.iterator();0.5833333134651184
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.toDictionary(boolean);0.5833333134651184
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.toDictionary(boolean);1.0
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);0.8999999761581421
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.iterator();0.8999999761581421
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.Dictionary.size();0.8306441903114319
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.7796897292137146
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.Dictionary.getMinTokenCount();0.6806442141532898
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);0.6749999523162842
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.setCount(opennlp.tools.util.StringList, int);0.6749999523162842
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.5999999642372131
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.serialize(java.io.OutputStream);1.0
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.<init>(java.io.InputStream);0.6875
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.equals(java.lang.Object);0.6875
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.iterator();0.65625
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.59375
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.5625
opennlp.tools.postag.POSDictionaryTest.testToString();opennlp.tools.postag.POSDictionary.toString();1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString2();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[], java.lang.String);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString2();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);0.75
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString2();opennlp.tools.tokenize.DictionaryDetokenizer.<init>(opennlp.tools.tokenize.DetokenizationDictionary);0.574999988079071
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.close();1.0
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.read();0.8333333730697632
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.CollectionObjectStream.reset();0.7238924503326416
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.6666666865348816
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.AbstractEventStream.read();1.0
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.8333333730697632
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.AbstractEventStream.close();0.8333333730697632
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.CollectionObjectStream.reset();0.7238924503326416
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.55722576379776
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.initializeFactory();1.0
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.chunker.ChunkerModel.validateArtifactMap();0.8806896209716797
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.checkArtifactMap();0.8599740266799927
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.7899610996246338
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.loadArtifactSerializers();0.7838729619979858
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.chunker.ChunkerModel.<init>(java.io.InputStream);0.7701427936553955
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.finishLoadingArtifacts(java.io.InputStream);0.7485897541046143
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.createBaseArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.6982199549674988
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.getManifestProperty(java.lang.String);0.5891343355178833
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.createArtifactSerializers();0.5603184700012207
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.createArtifactSerializers(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer>);0.5603184700012207
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratDocumentStream.reset();1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.SegmenterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8752057552337646
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratNameSampleStream.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.tokenize.Tokenizer, opennlp.tools.util.ObjectStream<opennlp.tools.formats.brat.BratDocument>, java.util.Set<java.lang.String>);0.8287347555160522
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratDocumentStream.<init>(opennlp.tools.formats.brat.AnnotationConfiguration, java.io.File, boolean, java.io.FileFilter);0.5623971819877625
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.read();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TestSampleStream.read();0.9987071752548218
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);0.6722689270973206
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.6722689270973206
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();0.6722689270973206
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.next();0.6722689270973206
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.poison();0.6638655662536621
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.CollectionObjectStream.read();0.5896063446998596
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.getTestSampleStream();0.5754091143608093
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.next();0.75
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.CollectionObjectStream.reset();0.6885197162628174
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);0.625
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.625
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);0.8333333730697632
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.8333333730697632
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.next();0.6666666865348816
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.getTestSampleStream();0.5595394372940063
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999999403953552
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.7107123732566833
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7017494440078735
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.6725168824195862
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6282619833946228
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6257336139678955
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.model.Context.getOutcomes();0.6016572117805481
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8456228971481323
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8395437598228455
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.util.model.ModelUtil.createDefaultTrainingParameters();0.8056716918945312
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.7363877892494202
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.7272244095802307
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7163084745407104
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7128320336341858
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.Context.getOutcomes();0.7113692760467529
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.isSortAndMerge();0.6927749514579773
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6851667165756226
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6526609659194946
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.ml.model.DataIndexer);0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.AbstractEventTrainer.validate();0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.6418246626853943
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6376785635948181
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.<init>();0.6326039433479309
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);0.6125469207763672
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[]);0.6024842262268066
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISModel.eval(int[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.6017106771469116
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.5980916619300842
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, opennlp.tools.ml.model.Prior, int);0.5824613571166992
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISModel.eval(opennlp.tools.ml.model.Context[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.5816536545753479
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.5780346393585205
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[]);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[], opennlp.tools.ml.model.Prior);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.findParameters(int, double);0.5649114847183228
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.display(java.lang.String);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.nextIteration(double, java.util.concurrent.CompletionService<opennlp.tools.ml.maxent.GISTrainer$ModelExpectationComputeTask>);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumCorrect();0.5596129894256592
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumEvents();0.5589861869812012
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(java.util.Map<java.lang.String, java.lang.Integer>);0.5584790706634521
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.<init>(opennlp.tools.ml.maxent.GISTrainer, int, int, int);0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getLoglikelihood();0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.5579776763916016
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.5579776763916016
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.9589589834213257
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.AbstractModel.getOutcome(int);0.9356498718261719
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(int[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.9087110757827759
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(java.lang.String[]);0.9087110757827759
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(java.lang.String[], float[]);0.9087110757827759
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(java.lang.String[], double[]);0.752769410610199
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(java.lang.String[], float[], double[]);0.752769410610199
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(opennlp.tools.ml.model.Context[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.752769410610199
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.7474244236946106
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.683251142501831
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.AbstractModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[]);0.6822447180747986
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.AbstractModel.init(java.lang.String[], opennlp.tools.ml.model.Context[], java.lang.String[]);0.6822447180747986
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[]);0.6553058624267578
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[], opennlp.tools.ml.model.Prior);0.6553058624267578
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.OnePassDataIndexer.computeEventCounts(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>, int);0.6372454166412354
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.RealValueFileEventStream.read();0.5914827585220337
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.RealValueFileEventStream.parseContexts(java.lang.String[]);0.5719900727272034
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[], float[]);0.5712159872055054
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getLoglikelihood();0.5662872791290283
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.5620708465576172
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.5620708465576172
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.5620708465576172
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.model.FileEventStream.close();0.5620708465576172
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumEvents();0.5614140629768372
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumCorrect();0.5565409064292908
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.model.AbstractModel.getAllOutcomes(double[]);0.6428161859512329
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.model.RealValueFileEventStream.parseContexts(java.lang.String[]);0.5942490100860596
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.model.AbstractModel.getOutcome(int);0.5624591112136841
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.model.Context.getOutcomes();0.5567930936813354
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.5513637661933899
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8456228971481323
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8395437598228455
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.util.model.ModelUtil.createDefaultTrainingParameters();0.8056716918945312
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.7363877892494202
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.7272244095802307
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7163084745407104
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7128320336341858
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.Context.getOutcomes();0.7113692760467529
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.isSortAndMerge();0.6927749514579773
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6851667165756226
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6526609659194946
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.ml.model.DataIndexer);0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.AbstractEventTrainer.validate();0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.6418246626853943
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6376785635948181
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.<init>();0.6326039433479309
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);0.6125469207763672
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[]);0.6024842262268066
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISModel.eval(int[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.6017106771469116
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.5980916619300842
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, opennlp.tools.ml.model.Prior, int);0.5824613571166992
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISModel.eval(opennlp.tools.ml.model.Context[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.5816536545753479
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.5780346393585205
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[]);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[], opennlp.tools.ml.model.Prior);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.findParameters(int, double);0.5649114847183228
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.display(java.lang.String);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.nextIteration(double, java.util.concurrent.CompletionService<opennlp.tools.ml.maxent.GISTrainer$ModelExpectationComputeTask>);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumCorrect();0.5596129894256592
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumEvents();0.5589861869812012
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(java.util.Map<java.lang.String, java.lang.Integer>);0.5584790706634521
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.<init>(opennlp.tools.ml.maxent.GISTrainer, int, int, int);0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getLoglikelihood();0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.5579776763916016
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.5579776763916016
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.8128668665885925
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8042790293693542
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7953161001205444
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6725170016288757
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6282620429992676
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.model.Context.getOutcomes();0.6016572713851929
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8456228971481323
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8395437598228455
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.util.model.ModelUtil.createDefaultTrainingParameters();0.8056716918945312
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.7363877892494202
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.7272244095802307
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7163084745407104
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7128320336341858
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.Context.getOutcomes();0.7113692760467529
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.isSortAndMerge();0.6927749514579773
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6851667165756226
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6526609659194946
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.ml.model.DataIndexer);0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.AbstractEventTrainer.validate();0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.6418246626853943
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6376785635948181
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.<init>();0.6326039433479309
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);0.6125469207763672
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[]);0.6024842262268066
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISModel.eval(int[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.6017106771469116
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.5980916619300842
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, opennlp.tools.ml.model.Prior, int);0.5824613571166992
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISModel.eval(opennlp.tools.ml.model.Context[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.5816536545753479
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.5780346393585205
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[]);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[], opennlp.tools.ml.model.Prior);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.findParameters(int, double);0.5649114847183228
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.display(java.lang.String);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.nextIteration(double, java.util.concurrent.CompletionService<opennlp.tools.ml.maxent.GISTrainer$ModelExpectationComputeTask>);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumCorrect();0.5596129894256592
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumEvents();0.5589861869812012
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(java.util.Map<java.lang.String, java.lang.Integer>);0.5584790706634521
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.<init>(opennlp.tools.ml.maxent.GISTrainer, int, int, int);0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getLoglikelihood();0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.5579776763916016
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.5579776763916016
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8456228971481323
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8395437598228455
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.util.model.ModelUtil.createDefaultTrainingParameters();0.8056716918945312
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.7363877892494202
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.7272244095802307
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7163084745407104
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7128320336341858
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.Context.getOutcomes();0.7113692760467529
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.isSortAndMerge();0.6927749514579773
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6851667165756226
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6526609659194946
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.ml.model.DataIndexer);0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.AbstractEventTrainer.validate();0.6450526714324951
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.6418246626853943
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6376785635948181
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.<init>();0.6326039433479309
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);0.6125469207763672
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[]);0.6024842262268066
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISModel.eval(int[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.6017106771469116
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.5980916619300842
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, opennlp.tools.ml.model.Prior, int);0.5824613571166992
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISModel.eval(opennlp.tools.ml.model.Context[], float[], double[], opennlp.tools.ml.model.EvalParameters);0.5816536545753479
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.5780346393585205
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[]);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISModel.<init>(opennlp.tools.ml.model.Context[], java.lang.String[], java.lang.String[], opennlp.tools.ml.model.Prior);0.5716251134872437
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.findParameters(int, double);0.5649114847183228
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.display(java.lang.String);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.nextIteration(double, java.util.concurrent.CompletionService<opennlp.tools.ml.maxent.GISTrainer$ModelExpectationComputeTask>);0.559897243976593
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumCorrect();0.5596129894256592
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getNumEvents();0.5589861869812012
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(java.util.Map<java.lang.String, java.lang.Integer>);0.5584790706634521
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.<init>(opennlp.tools.ml.maxent.GISTrainer, int, int, int);0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.getLoglikelihood();0.5583594441413879
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.5579776763916016
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.5579776763916016
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.setGaussianSigma(double);1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.trainModel(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8319538235664368
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7856574058532715
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.6736266016960144
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.trainModel(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, int, int);0.663907527923584
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.util.model.ModelUtil.createDefaultTrainingParameters();0.6303132176399231
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.6110129356384277
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6078921556472778
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.5952050089836121
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.581024706363678
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.5798844695091248
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.model.Context.getOutcomes();0.5745702385902405
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.5601540803909302
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.<init>();0.5518767237663269
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999999403953552
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8888826370239258
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8042789101600647
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.7660835385322571
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.PrepAttachDataUtil.readPpaFile(java.lang.String);0.6725168824195862
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.model.Context.getOutcomes();0.6484405398368835
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.628261923789978
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);1.0
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.9598640203475952
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.model.Context.getParameters();0.942494809627533
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.7706950902938843
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.URLInputStreamFactory.<init>(java.net.URL);0.7566156983375549
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.7478234767913818
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.7410851716995239
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7360405325889587
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.isSortAndMerge();0.7360405325889587
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.7210493683815002
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.model.Context.getOutcomes();0.7160207033157349
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.util.TrainingParameters.<init>();0.7050219774246216
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.URLInputStreamFactory.createInputStream();0.6999972462654114
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.FootballEventStream.<init>();0.6991113424301147
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6912050247192383
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.6861491203308105
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.model.UniformPrior.logPrior(double[], int[]);0.6848492622375488
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.doTrain(opennlp.tools.ml.model.DataIndexer);0.6794220805168152
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.6521158218383789
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.<init>();0.6511127948760986
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);0.6369581818580627
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.AbstractEventTrainer.validate();0.63458651304245
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, opennlp.tools.ml.model.Prior, int);0.6015716195106506
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.5917850136756897
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.5917850136756897
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.5917850136756897
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.FootballEventStream.reset();0.5858742594718933
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.findParameters(int, double);0.5803396701812744
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.ml.model.DataIndexer);0.5779680013656616
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.nextIteration(double, java.util.concurrent.CompletionService<opennlp.tools.ml.maxent.GISTrainer$ModelExpectationComputeTask>);0.5750316977500916
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.gaussianUpdate(int, int, double);0.5741470456123352
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.display(java.lang.String);0.5732623934745789
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.5561008453369141
opennlp.tools.ngram.NGramUtilsTest.testGetNGrams();opennlp.tools.ngram.NGramUtils.getNGrams(opennlp.tools.util.StringList, int);1.0
opennlp.tools.postag.DefaultPOSContextGeneratorTest.dictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGeneratorTest.dictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.625
opennlp.tools.postag.DefaultPOSContextGeneratorTest.dictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.625
opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);0.8184335231781006
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.util.StringList.getToken(int);0.8079083561897278
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.util.StringList.size();0.8079083561897278
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.util.StringList.toString();0.8079083561897278
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.util.StringList.<init>(java.lang.String);0.7679128646850586
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);1.0
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.8800000548362732
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.800000011920929
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);0.8790581822395325
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.8735336661338806
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.util.StringList.toString();0.855902910232544
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.util.StringList.size();0.8265728950500488
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.util.StringList.getToken(int);0.8119078874588013
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.7952231168746948
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.util.StringList.<init>(java.lang.String);0.7679128646850586
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.7440290451049805
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.util.StringList.<init>(java.lang.String);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9301649928092957
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.util.StringList.toString();0.839285671710968
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);0.7753759026527405
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.util.StringList.getToken(int);0.7589285969734192
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.util.StringList.size();0.7321428656578064
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.6444506645202637
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.6444506645202637
opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.800000011920929
opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);1.0
opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.<init>(java.lang.String);opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);1.0
opennlp.tools.util.StringList.<init>(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9880456328392029
opennlp.tools.util.StringList.<init>(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.6487168669700623
opennlp.tools.util.StringList.<init>(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.6487168669700623
opennlp.tools.util.StringList.<init>(java.lang.String);opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.6480580568313599
opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);opennlp.tools.util.StringList.<init>(java.lang.String);1.0
opennlp.tools.postag.DefaultPOSContextGeneratorTest.noDictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGeneratorTest.noDictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.625
opennlp.tools.postag.DefaultPOSContextGeneratorTest.noDictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.625
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);1.0
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.util.StringList.<init>(java.lang.String);0.6419890522956848
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);0.6419890522956848
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.util.StringList.getToken(int);0.6419890522956848
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.util.StringList.size();0.6419890522956848
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.util.StringList.toString();0.6419890522956848
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.6666666865348816
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.625
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.contains(java.lang.Object);0.5766505599021912
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.hasNext();0.5766505599021912
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.iterator();0.5766505599021912
opennlp.tools.util.StringListTest.testCompareToIgnoreCase();opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);1.0
opennlp.tools.util.StringListTest.testCompareToIgnoreCase();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.5526315569877625
opennlp.tools.util.StringListTest.testCompareToIgnoreCase();opennlp.tools.util.StringList.getToken(int);0.5526315569877625
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.util.Span.getStart();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.9348607063293457
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.util.Span.getEnd();0.8130279183387756
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.5803261399269104
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.5569546222686768
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.ngram.NGramModel.toDictionary();1.0
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.ngram.NGramModel.toDictionary(boolean);0.75
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.ngram.NGramModel.<init>();0.5833333134651184
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();null.contains(java.lang.Object);0.7433172464370728
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6875
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.625
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.asStringSet();0.856113076210022
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.7567428350448608
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.7567428350448608
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testLookup();null.contains(java.lang.Object);0.6183172464370728
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.util.Span.getEnd();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.9971847534179688
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.util.Span.getStart();0.8753520846366882
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.7049742341041565
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.5803261399269104
opennlp.tools.dictionary.DictionaryTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testLookup();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.875
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.asStringSet();0.927272617816925
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();null.size();0.8919806480407715
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6999999284744263
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.9356986880302429
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.util.Span.getEnd();0.7805383205413818
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.util.Span.getStart();0.7805383205413818
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.6023653149604797
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.util.Span.length();0.5805383324623108
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6875
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.625
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9777778387069702
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);0.9540522694587708
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.hasNext();0.775912880897522
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.7333333492279053
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.contains(java.lang.Object);0.72353196144104
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.iterator();0.72353196144104
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.next();0.6013097167015076
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.size();0.6013097167015076
opennlp.tools.dictionary.DictionaryTest.testEquals();opennlp.tools.dictionary.Dictionary.equals(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryTest.testEquals();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.5833333134651184
opennlp.tools.dictionary.DictionaryTest.testParseOneEntryPerLine();opennlp.tools.dictionary.Dictionary.parseOneEntryPerLine(java.io.Reader);1.0
opennlp.tools.dictionary.DictionaryTest.testParseOneEntryPerLine();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.625
opennlp.tools.dictionary.DictionaryTest.testParseOneEntryPerLine();opennlp.tools.dictionary.Dictionary.size();0.574999988079071
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.6000000238418579
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.550000011920929
opennlp.tools.postag.DefaultPOSContextGeneratorTest.multithreading();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseLongerEntry();opennlp.tools.util.Span.length();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseLongerEntry();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.9348607063293457
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseLongerEntry();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.6445977687835693
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseLongerEntry();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.5803261399269104
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.<init>();0.6666666865348816
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>);0.5661602020263672
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.TwoPassDataIndexer.<init>();0.6666666865348816
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>);0.5844744443893433
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.OnePassRealValueDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.6309523582458496
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.6151936054229736
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.5901442766189575
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassRealValueDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.7420347929000854
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.7328739166259766
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>);0.6764234900474548
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.getContext(int, java.lang.String[], java.lang.String[], java.lang.Object[]);1.0
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.<init>(int, opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.75
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.getContext(int, java.lang.String[], java.lang.String[], java.lang.Object[]);1.0
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.<init>(int, opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.8703703880310059
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>();0.6511386632919312
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);0.6511386632919312
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.Cache.<init>(int);0.6072062253952026
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.getSegments();0.8999999761581421
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.<init>();0.6499999761581421
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.<init>(java.util.Map<java.lang.String, java.util.Map<java.lang.String, opennlp.tools.formats.nkjp.NKJPSegmentationDocument$Pointer>>);0.6499999761581421
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.fromSeg(org.w3c.dom.Node);0.6499999761581421
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.xmlID(org.w3c.dom.Node);0.6499999761581421
opennlp.tools.lemmatizer.LemmatizerMETest.testLemmasAsArray();opennlp.tools.lemmatizer.LemmatizerME.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testLemmasAsArray();opennlp.tools.lemmatizer.LemmatizerME.decodeLemmas(java.lang.String[], java.lang.String[]);0.7999999523162842
opennlp.tools.lemmatizer.LemmatizerMETest.testLemmasAsArray();opennlp.tools.lemmatizer.LemmatizerME.predictSES(java.lang.String[], java.lang.String[]);0.6499999761581421
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.LanguageSample.toString();1.0
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.625
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.Language.getLang();0.5643932819366455
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.LanguageDetectorME.predictLanguages(java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.LanguageDetectorME.<init>(opennlp.tools.langdetect.LanguageDetectorModel);0.5625
opennlp.tools.langdetect.LanguageTest.emptyLanguage();opennlp.tools.langdetect.Language.<init>(java.lang.String);1.0
opennlp.tools.langdetect.LanguageTest.emptyLanguage();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);1.0
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.getConfidence();1.0
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.getLang();0.625
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.5833333134651184
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.5833333134651184
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.LanguageSample.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.Language.equals(java.lang.Object);0.6268932819366455
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.LanguageSample.getLanguage();0.5681818127632141
opennlp.tools.langdetect.LanguageTest.testHash();opennlp.tools.langdetect.Language.hashCode();1.0
opennlp.tools.langdetect.LanguageTest.testHash();opennlp.tools.langdetect.Language.getLang();0.5714285969734192
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.getLanguage();1.0
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.equals(java.lang.Object);0.75
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.getContext();0.6875
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.Language.equals(java.lang.Object);0.6268932819366455
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.5625
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.8768932819366455
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.8768932819366455
opennlp.tools.langdetect.LanguageTest.nonEmptyConfidence();opennlp.tools.langdetect.Language.getConfidence();1.0
opennlp.tools.langdetect.LanguageTest.nonEmptyConfidence();opennlp.tools.langdetect.Language.getLang();0.625
opennlp.tools.langdetect.LanguageTest.nonEmptyConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.5833333134651184
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.toString();1.0
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.625
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.625
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.getLang();0.59375
opennlp.tools.langdetect.LanguageTest.testEquals();opennlp.tools.langdetect.Language.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageTest.testEquals();opennlp.tools.langdetect.Language.getLang();0.5714285969734192
opennlp.tools.langdetect.LanguageTest.emptyLanguageConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.reset();1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.read();0.8999999761581421
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.<init>(java.io.File, int, int);0.699999988079071
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.LanguageSample.getContext();1.0
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.699999988079071
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.LanguageSample.getLanguage();0.699999988079071
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.5768932700157166
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.5768932700157166
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9499194622039795
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.9109812378883362
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9109812378883362
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9109812378883362
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.defaultParams();0.8406842947006226
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.78452467918396
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.7700549364089966
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.maxent.GISTrainer.isSortAndMerge();0.7489346265792847
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.TrainerFactory.createBuiltinTrainer(java.lang.Class<T>);0.7192016243934631
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.7002851366996765
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.maxent.GISTrainer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.664695143699646
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(java.util.Map<java.lang.String, java.lang.Integer>);0.6091230511665344
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.maxent.GISTrainer.<init>();0.6085354685783386
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.6021031141281128
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>);0.58806312084198
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.5827308297157288
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.5740232467651367
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.display(java.lang.String);0.5740232467651367
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.5740232467651367
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String, java.lang.String);0.5598860383033752
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.chunker.ChunkerME.topKSequences(java.lang.String[], java.lang.String[], double);1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.util.Sequence.getProbs();0.6547335386276245
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.util.Sequence.getOutcomes();0.5833050012588501
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.chunker.ChunkerME.chunkAsSpans(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.chunker.ChunkerME.chunk(java.lang.String[], java.lang.String[]);0.6239669322967529
opennlp.tools.langdetect.LanguageDetectorMETest.testSupportedLanguages();opennlp.tools.langdetect.LanguageDetectorME.getSupportedLanguages();1.0
opennlp.tools.chunker.ChunkerMETest.testChunkAsArray();opennlp.tools.chunker.ChunkerME.chunk(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbArray();opennlp.tools.chunker.ChunkerME.topKSequences(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbArray();opennlp.tools.util.Sequence.getProbs();0.7261621356010437
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleList();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleList();opennlp.tools.chunker.ChunkSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.7222222089767456
opennlp.tools.cmdline.CLITest.testUnknownFileMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.cmdline.CLITest.testUnknownFileMessage();opennlp.tools.cmdline.TerminateToolException.getMessage();0.7646014094352722
opennlp.tools.cmdline.TerminateToolExceptionTest.testCreation();opennlp.tools.cmdline.TerminateToolException.getCode();1.0
opennlp.tools.cmdline.TerminateToolExceptionTest.testCreation();opennlp.tools.cmdline.TerminateToolException.<init>(int);0.8333333730697632
opennlp.tools.cmdline.TerminateToolExceptionTest.testCreation();opennlp.tools.cmdline.TerminateToolException.<init>(int, java.lang.String);0.8333333730697632
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.CmdLineTool.<init>();0.7230861186981201
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.BasicCmdLineTool.<init>();0.7160773277282715
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.namefind.TokenNameFinderTool.run(java.lang.String[]);0.6666666865348816
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();0.8266666531562805
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.699999988079071
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.indexOf(int, int);0.550000011920929
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);0.8333333730697632
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.6333333253860474
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.indexOf(int, int);0.550000011920929
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getDimension();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.7222222089767456
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.699999988079071
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.indexOf(int, int);0.574999988079071
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);0.75
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.6428571343421936
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.indexOf(int, int);0.5535714030265808
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.7564102411270142
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.7857142686843872
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.indexOf(int, int);0.6071428656578064
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.5996043682098389
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.5996043682098389
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.7857142686843872
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.indexOf(int, int);0.6071428656578064
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.5996043682098389
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.5996043682098389
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.TokenizerEvaluator.<init>(opennlp.tools.tokenize.Tokenizer, opennlp.tools.tokenize.TokenizerEvaluationMonitor[]);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.TokenizerEvaluator.getFMeasure();0.8636363744735718
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.8201438188552856
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.TokenizerEvaluator.processSample(opennlp.tools.tokenize.TokenSample);0.807692289352417
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.7455981969833374
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.tokenizer.TokenEvaluationErrorListener.<init>(java.io.OutputStream);0.7423469424247742
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6836163401603699
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.6092345714569092
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.6058580875396729
opennlp.tools.formats.ad.ADTokenSampleStreamTest.testSentences();opennlp.tools.tokenize.TokenSample.getText();1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.DetokenizerEvaluator.<init>(opennlp.tools.tokenize.Detokenizer, opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener[]);1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.DetokenizerEvaluator.getFMeasure();0.8636363744735718
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.8130009770393372
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.DetokenizerEvaluator.processSample(opennlp.tools.tokenize.TokenSample);0.807692289352417
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener.<init>(java.io.OutputStream);0.75
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.7428203821182251
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6836163401603699
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.6064567565917969
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.5987153053283691
opennlp.tools.tokenize.TokenSampleTest.testEquals();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);1.0
opennlp.tools.tokenize.TokenSampleTest.testEquals();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.557692289352417
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.getText();1.0
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.<init>(java.lang.String, opennlp.tools.util.Span[]);0.7999999523162842
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.DetokenizerEvaluator.getFMeasure();1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.DetokenizerEvaluator.<init>(opennlp.tools.tokenize.Detokenizer, opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener[]);0.9593023061752319
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.8319079875946045
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.767954409122467
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.7368394732475281
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.DetokenizerEvaluator.processSample(opennlp.tools.tokenize.TokenSample);0.7182468771934509
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener.<init>(java.io.OutputStream);0.7034883499145508
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.69614177942276
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6355608701705933
opennlp.tools.tokenize.TokenSampleTest.testTokenSampleSerDe();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenSampleTest.testTokenSampleSerDe();opennlp.tools.tokenize.TokenSample.getText();0.625
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.TokenizerEvaluator.getFMeasure();1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.TokenizerEvaluator.<init>(opennlp.tools.tokenize.Tokenizer, opennlp.tools.tokenize.TokenizerEvaluationMonitor[]);0.9593023061752319
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.839216947555542
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.7752634286880493
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.7396818399429321
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.TokenizerEvaluator.processSample(opennlp.tools.tokenize.TokenSample);0.7182468771934509
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.6989841461181641
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.tokenizer.TokenEvaluationErrorListener.<init>(java.io.OutputStream);0.6956572532653809
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6355608701705933
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.startsWith(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.getStart();0.625
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.<init>(int, int);0.6000000238418579
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6000000238418579
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);0.574999988079071
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.913432776927948
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.methodNameToParameter(java.lang.String);0.7611939907073975
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<?>[]);0.7537313103675842
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getAlphaNumOpt();0.7263780236244202
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getIterations();0.7263780236244202
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.StringArgumentFactory.parseArgument(java.lang.reflect.Method, java.lang.String, java.lang.String);0.7199657559394836
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.BooleanArgumentFactory.parseArgument(java.lang.reflect.Method, java.lang.String, java.lang.String);0.7157760262489319
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.IntegerArgumentFactory.parseArgument(java.lang.reflect.Method, java.lang.String, java.lang.String);0.7157760262489319
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.6977611780166626
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(java.lang.String[], java.lang.Class<?>[]);0.5984749794006348
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.<init>();0.9583333730697632
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getRecallScore();0.8928571939468384
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.8235294222831726
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.updateScores(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9285714626312256
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9090909361839294
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.8529411554336548
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.<init>();0.7142857313156128
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.countTruePositives(java.lang.Object[], java.lang.Object[]);0.625
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.TokenNameFinderEvaluator.<init>(opennlp.tools.namefind.TokenNameFinder, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.TokenNameFinderEvaluator.getFMeasure();0.8636363744735718
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.8128553628921509
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.TokenNameFinderEvaluator.processSample(opennlp.tools.namefind.NameSample);0.807692289352417
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.7651167511940002
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.cmdline.namefind.NameEvaluationErrorListener.<init>(java.io.OutputStream);0.7328042387962341
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.6910396814346313
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.NameSample.getNames();0.6820940375328064
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.628753125667572
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.5985696911811829
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.mergeInto(opennlp.tools.util.eval.FMeasure);1.0
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.updateScores(java.lang.Object[], java.lang.Object[]);0.7250000238418579
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.getRecallScore();0.6928571462631226
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.658823549747467
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.countTruePositives(java.lang.Object[], java.lang.Object[]);0.6000000238418579
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.equals(java.lang.Object);0.6666666865348816
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.currentVersion();0.5714285969734192
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.getMajor();0.5625
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.toString();0.5625
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.isSnapshot();0.550000011920929
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.isSnapshot();0.949999988079071
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.equals(java.lang.Object);0.7999999523162842
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.<init>(int, int, int, boolean);0.699999988079071
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.getRevision();0.699999988079071
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.getMajor();0.6499999761581421
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.getMinor();0.6499999761581421
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.843730628490448
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.8269848823547363
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.799750804901123
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.7402330040931702
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.7239670157432556
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>);0.6968570947647095
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.toIndexedStringArray(java.util.Map<java.lang.String, java.lang.Integer>);0.6589031219482422
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.util.TrainingParameters.<init>();0.6577285528182983
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.6534811854362488
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.display(java.lang.String);0.6534811854362488
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.6534811854362488
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.6534811854362488
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.OnePassDataIndexer.<init>();0.5834751129150391
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.570976734161377
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.5637473464012146
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.OnePassDataIndexer.computeEventCounts(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>, java.util.Map<java.lang.String, java.lang.Integer>, int);0.5545578002929688
opennlp.tools.util.featuregen.StringPatternTest.testContainsHyphen();opennlp.tools.util.featuregen.StringPattern.containsHyphen();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsHyphen();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6785714626312256
opennlp.tools.util.featuregen.FeatureGeneratorUtilTest.test();opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(java.lang.String);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomVocabulary(int);0.9907407760620117
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomSentence();0.9074074625968933
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.7916666865348816
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.<init>();0.75
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.75
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.stupidBackoff(opennlp.tools.util.StringList);0.75
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.languagemodel.NGramLanguageModel.<init>();0.59375
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.59375
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.7307692170143127
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], double, opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.6153846383094788
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.75
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel);0.625
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel, int);0.625
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], double, opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.625
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.75
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel);0.625
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel, int);0.625
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], double, opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.625
opennlp.tools.util.featuregen.StringPatternTest.testIsAllHiragana();opennlp.tools.util.featuregen.StringPattern.isAllHiragana();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllHiragana();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6153846383094788
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.6071428656578064
opennlp.tools.util.featuregen.StringPatternTest.testIsAllKatakana();opennlp.tools.util.featuregen.StringPattern.isAllKatakana();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLetters();opennlp.tools.util.featuregen.StringPattern.isAllLetter();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLetters();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.5909091234207153
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.7142857313156128
opennlp.tools.util.featuregen.StringPatternTest.testContainsComma();opennlp.tools.util.featuregen.StringPattern.containsComma();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsComma();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6538461446762085
opennlp.tools.util.featuregen.StringPatternTest.testIsAllDigit();opennlp.tools.util.featuregen.StringPattern.isAllDigit();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllDigit();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6000000238418579
opennlp.tools.util.featuregen.StringPatternTest.testIsAllDigit();opennlp.tools.util.featuregen.StringPattern.<init>(int, int);0.574999988079071
opennlp.tools.util.featuregen.StringPatternTest.testContainsLetters();opennlp.tools.util.featuregen.StringPattern.containsLetters();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsLetters();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6666666865348816
opennlp.tools.util.featuregen.StringPatternTest.testContainsLetters();opennlp.tools.util.featuregen.StringPattern.<init>(int, int);0.550000011920929
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.7142857313156128
opennlp.tools.util.featuregen.StringPatternTest.testIsAllCapitalLetter();opennlp.tools.util.featuregen.StringPattern.isAllCapitalLetter();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllCapitalLetter();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.5833333134651184
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.7142857313156128
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testGenWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);1.0
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testGenWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9285714626312256
opennlp.tools.util.featuregen.StringPatternTest.testContainsDigit();opennlp.tools.util.featuregen.StringPattern.containsDigit();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsDigit();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6538461446762085
opennlp.tools.util.featuregen.StringPatternTest.testContainsDigit();opennlp.tools.util.featuregen.StringPattern.<init>(int, int);0.5769230723381042
opennlp.tools.util.featuregen.StringPatternTest.testIsInitialCapitalLetter();opennlp.tools.util.featuregen.StringPattern.isInitialCapitalLetter();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsInitialCapitalLetter();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.5681818127632141
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testOnlyLetterTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testOnlyLetterTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.6428571343421936
opennlp.tools.util.featuregen.StringPatternTest.testContainsPeriod();opennlp.tools.util.featuregen.StringPattern.containsPeriod();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsPeriod();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6785714626312256
opennlp.tools.util.featuregen.StringPatternTest.testContainsPeriod();opennlp.tools.util.featuregen.StringPattern.<init>(int, int);0.5535714030265808
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9285714626312256
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.6071428656578064
opennlp.tools.util.featuregen.StringPatternTest.testDigits();opennlp.tools.util.featuregen.StringPattern.digits();1.0
opennlp.tools.util.featuregen.StringPatternTest.testDigits();opennlp.tools.util.featuregen.StringPattern.<init>(int, int);0.625
opennlp.tools.util.featuregen.StringPatternTest.testDigits();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6111111044883728
opennlp.tools.util.featuregen.FeatureGeneratorUtilTest.testJapanese();opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(java.lang.String);1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9285714626312256
opennlp.tools.util.featuregen.StringPatternTest.testContainsSlash();opennlp.tools.util.featuregen.StringPattern.containsSlash();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsSlash();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.6538461446762085
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testNoWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);1.0
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testNoWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.7142857313156128
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testNextOfBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testNextOfBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();0.8181818127632141
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLowerCaseLetter();opennlp.tools.util.featuregen.StringPattern.isAllLowerCaseLetter();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLowerCaseLetter();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.574999988079071
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.7142857313156128
opennlp.tools.util.StringUtilTest.testIsEmptyWithNullString();opennlp.tools.util.StringUtil.isEmpty(java.lang.CharSequence);1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9999999403953552
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.getNames();0.9954553246498108
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.formats.Conll03NameSampleStream.read();0.9043917655944824
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.getSentence();0.8954722881317139
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.formats.Conll03NameSampleStream.<init>(opennlp.tools.formats.Conll03NameSampleStream$LANGUAGE, opennlp.tools.util.InputStreamFactory, int);0.7044256925582886
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.formats.EvalitaNameSampleStream.reset();1.0
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.formats.EvalitaNameSampleStream.read();0.699999988079071
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.formats.EvalitaNameSampleStream.extract(int, int, java.lang.String);0.5714285969734192
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSampleWithGermanAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.read();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSampleWithGermanAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.<init>(opennlp.tools.formats.Conll03NameSampleStream$LANGUAGE, opennlp.tools.util.InputStreamFactory, int);0.8333333730697632
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.getNames();0.9999999403953552
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9450505971908569
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.formats.Conll03NameSampleStream.read();0.9066640734672546
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.getSentence();0.8992595672607422
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.formats.Conll03NameSampleStream.<init>(opennlp.tools.formats.Conll03NameSampleStream$LANGUAGE, opennlp.tools.util.InputStreamFactory, int);0.7555533647537231
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.util.Span.getStart();0.625793993473053
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSampleWithEnglishAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.read();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSampleWithEnglishAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.<init>(opennlp.tools.formats.Conll03NameSampleStream$LANGUAGE, opennlp.tools.util.InputStreamFactory, int);0.8333333730697632
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.getNames();0.9237633943557739
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.formats.Conll02NameSampleStream.read();0.8100143671035767
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.formats.Conll02NameSampleStream.<init>(opennlp.tools.formats.Conll02NameSampleStream$LANGUAGE, opennlp.tools.util.InputStreamFactory, int);0.7576016783714294
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5568745136260986
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.5568745136260986
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5568745136260986
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.getNames();0.9499697089195251
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.getSentence();0.8399030566215515
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.formats.Conll02NameSampleStream.read();0.8204968571662903
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.formats.Conll02NameSampleStream.<init>(opennlp.tools.formats.Conll02NameSampleStream$LANGUAGE, opennlp.tools.util.InputStreamFactory, int);0.7654635906219482
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.formats.Conll02NameSampleStream.extract(int, int, java.lang.String);0.7104302644729614
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5647363662719727
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.5647363662719727
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5647363662719727
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.util.Span.getStart();0.5553300976753235
opennlp.tools.formats.Conll02NameSampleStreamTest.testReset();opennlp.tools.formats.Conll02NameSampleStream.reset();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testReset();opennlp.tools.formats.Conll02NameSampleStream.read();0.699999988079071
opennlp.tools.util.StringUtilTest.testIsEmpty();opennlp.tools.util.StringUtil.isEmpty(java.lang.CharSequence);1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testReset();opennlp.tools.formats.Conll03NameSampleStream.reset();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testReset();opennlp.tools.formats.Conll03NameSampleStream.read();0.699999988079071
opennlp.tools.formats.NameFinderCensus90NameStreamTest.testParsingEnglishSample();opennlp.tools.formats.NameFinderCensus90NameStream.read();1.0
opennlp.tools.formats.NameFinderCensus90NameStreamTest.testParsingEnglishSample();opennlp.tools.formats.NameFinderCensus90NameStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.75
opennlp.tools.formats.NameFinderCensus90NameStreamTest.testParsingEnglishSample();opennlp.tools.util.StringList.getToken(int);0.6770133972167969
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9999999403953552
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.getNames();0.9654603600502014
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.getSentence();0.8704765439033508
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.formats.EvalitaNameSampleStream.<init>(opennlp.tools.formats.EvalitaNameSampleStream$LANGUAGE, opennlp.tools.util.InputStreamFactory, int);0.7944104671478271
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.formats.EvalitaNameSampleStream.read();0.7944104671478271
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.formats.EvalitaNameSampleStream.extract(int, int, java.lang.String);0.6994265913963318
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.util.Span.getStart();0.6027675867080688
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5855249762535095
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.5855249762535095
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5855249762535095
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9285714626312256
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9285714626312256
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9285714626312256
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.getSentences();0.8999999761581421
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.<init>(java.util.List<opennlp.tools.formats.letsmt.LetsmtDocument$LetsmtSentence>);0.6499999761581421
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.LetsmtSentence.getNonTokenizedText();0.6359492540359497
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.LetsmtSentence.getTokens();0.5991071462631226
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleArray();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleArray();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.6666666865348816
opennlp.tools.chunker.ChunkSampleTest.testToString();opennlp.tools.chunker.ChunkSample.toString();1.0
opennlp.tools.chunker.ChunkSampleTest.testToString();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.625
opennlp.tools.chunker.ChunkSampleTest.testToString();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.5882353186607361
opennlp.tools.chunker.ChunkSampleTest.testParameterValidation();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);1.0
opennlp.tools.chunker.ChunkSampleTest.testParameterValidation();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.625
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9642857313156128
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();0.779645562171936
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtBeginOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtBeginOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.7857142686843872
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtBeginOfSentence();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();0.5653598308563232
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8095238208770752
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();0.779645562171936
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtEndOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtEndOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.7142857313156128
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testForCorrectFeatures();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getDeprel();1.0
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getLemma();0.875
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.<init>(java.lang.String);0.75
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getDeps();0.75
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getFeats();0.75
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getHead();0.75
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getId();0.75
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getMisc();0.75
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getPosTag(opennlp.tools.formats.conllu.ConlluTagset);0.75
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getForm();0.625
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionaryInsensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionaryInsensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.<init>(morfologik.stemming.Dictionary, boolean);0.6666666865348816
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionarySensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionarySensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.<init>(morfologik.stemming.Dictionary, boolean);0.6666666865348816
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testNoLemma();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testNoLemma();opennlp.morfologik.tagdict.MorfologikTagDictionary.<init>(morfologik.stemming.Dictionary, boolean);0.5625
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.mean();1.0
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.count();0.875
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.toString();0.875
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.<init>();0.75
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.add(double);0.625
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.add(double, long);0.5625
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerTrue();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.978668212890625
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9189189076423645
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.7837837338447571
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappingsClassicFormat(org.w3c.dom.Element);0.7252174019813538
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.5600000023841858
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.5550000071525574
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.875
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.7916666865348816
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9642857313156128
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.9405382871627808
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.8571429252624512
opennlp.tools.util.featuregen.GeneratorFactoryTest.testParameters();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testParameters();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.75
opennlp.tools.util.featuregen.GeneratorFactoryTest.testParameters();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7083333730697632
opennlp.tools.util.featuregen.GeneratorFactoryTest.testParameters();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.5892857313156128
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8999999761581421
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.7666666507720947
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7166666984558105
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9230769872665405
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.9221492409706116
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.8205128312110901
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7820512652397156
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithCustomGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithCustomGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9941806793212891
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithCustomGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.938948392868042
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithCustomGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.8008677363395691
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();0.9999999403953552
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9025169014930725
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8550159335136414
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.7916814684867859
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7679309844970703
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.7115108370780945
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.875
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.7916666865348816
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();0.9999999403953552
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9025169014930725
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8550159335136414
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.7916814684867859
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7679309844970703
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();0.9999999403953552
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8589743375778198
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8035566806793213
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.748138964176178
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.buildGenerator(org.w3c.dom.Element, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.7412117719650269
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.6363011002540588
opennlp.tools.langdetect.DefaultLanguageDetectorContextGeneratorTest.extractContext();opennlp.tools.langdetect.DefaultLanguageDetectorContextGenerator.getContext(java.lang.CharSequence);1.0
opennlp.tools.langdetect.DefaultLanguageDetectorContextGeneratorTest.extractContext();opennlp.tools.langdetect.DefaultLanguageDetectorContextGenerator.<init>(int, int, opennlp.tools.util.normalizer.CharSequenceNormalizer[]);0.6111111044883728
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.ngram.NGramUtils.calculateTrigramLinearInterpolationProbability(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>, java.lang.Double, java.lang.Double, java.lang.Double);1.0
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.ngram.NGramUtils.calculateBigramMLProbability(java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>);0.6945488452911377
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.ngram.NGramUtils.calculateTrigramMLProbability(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable<opennlp.tools.util.StringList>);0.6878402829170227
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.ngram.NGramUtils.calculateUnigramMLProbability(java.lang.String, java.util.Collection<opennlp.tools.util.StringList>);0.6878402829170227
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.ngram.NGramUtils.calculateNgramMLProbability(opennlp.tools.util.StringList, java.lang.Iterable<opennlp.tools.util.StringList>);0.6008771657943726
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.ngram.NGramUtils.calculateTrigramLinearInterpolationProbability(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>, java.lang.Double, java.lang.Double, java.lang.Double);1.0
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.ngram.NGramUtils.calculateBigramMLProbability(java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>);0.6945488452911377
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.ngram.NGramUtils.calculateTrigramMLProbability(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable<opennlp.tools.util.StringList>);0.6878402829170227
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.ngram.NGramUtils.calculateUnigramMLProbability(java.lang.String, java.util.Collection<opennlp.tools.util.StringList>);0.6878402829170227
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.ngram.NGramUtils.calculateNgramMLProbability(opennlp.tools.util.StringList, java.lang.Iterable<opennlp.tools.util.StringList>);0.6008771657943726
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.clearAdaptiveData();0.9285714626312256
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.updateAdaptiveData(java.lang.String[], java.lang.String[]);0.9047619104385376
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.<init>();0.6428571343421936
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.reset();1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.<init>(java.io.File, int, int);0.75
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.read();0.625
opennlp.tools.util.SequenceTest.testToString();opennlp.tools.util.Sequence.toString();1.0
opennlp.tools.util.SequenceTest.testToString();opennlp.tools.util.Sequence.<init>();0.625
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.parser.Parse.getCoveredText();1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.<init>(opennlp.tools.util.ObjectStream<byte[]>);0.7898399829864502
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.read();0.7898399829864502
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.util.XmlUtil.createSaxParser();0.7724039554595947
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.parser.Parse.getTagNodes();0.7367200255393982
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.7313624620437622
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.getTagNodes();1.0
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.getType();0.7272727489471436
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.isPosTag();0.6363636255264282
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.6363636255264282
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.getToken(java.lang.String);0.5681818127632141
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.5681818127632141
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.getType(java.lang.String);0.5568181872367859
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.getSentence();1.0
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.PosSampleStream.read();0.9366185665130615
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8934251666069031
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.PosSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>);0.8514714241027832
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.getTags();0.8297057151794434
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.checkArguments();0.7871321439743042
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[]);0.5742642879486084
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[][]);0.5742642879486084
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.lang.String[][]);0.5742642879486084
opennlp.tools.dictionary.DictionaryTest.testToString();opennlp.tools.dictionary.Dictionary.toString();1.0
opennlp.tools.dictionary.DictionaryTest.testToString();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.5625
opennlp.tools.dictionary.DictionaryTest.testToString();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.5625
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.uima.dictionary.DictionaryResourceImpl.getDictionary();1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.tools.dictionary.Dictionary.asStringSet();0.810232937335968
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.810232937335968
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.tools.dictionary.Dictionary.toString();0.7022018432617188
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.convert.FileToStringSampleStream.read();1.0
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.convert.FileToStringSampleStream.readFile(java.io.File, java.nio.charset.Charset);1.0
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.convert.FileToStringSampleStream.<init>(opennlp.tools.util.ObjectStream<java.io.File>, java.nio.charset.Charset);0.625
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheHits();1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheMisses();1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.625
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheMisses();0.9507575631141663
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheHits();0.925000011920929
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.75
opennlp.tools.parser.ParseSampleStreamTest.testReadTestStream();opennlp.tools.parser.ParseSampleStream.read();1.0
opennlp.tools.parser.ParseSampleStreamTest.testReadTestStream();opennlp.tools.parser.ParseSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.5625
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.reset();1.0
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.close();0.699999988079071
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.read();0.699999988079071
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.5833333134651184
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.reset();1.0
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.875
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.close();0.875
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.read();0.75
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String);0.5765520930290222
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String, java.nio.charset.Charset);0.5765520930290222
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.getHelp();1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.run(java.lang.String[]);0.8500000238418579
opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizerTest.normalizeSpace();opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizerTest.normalizeChar();opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.getSentence();1.0
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.getTags();0.8999999761581421
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.checkArguments();0.75
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[]);0.6000000238418579
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[][]);0.6000000238418579
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.lang.String[][]);0.6000000238418579
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.cutoff(int, int);1.0
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.609375
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.<init>();0.5833333134651184
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.iterator();0.5729166865348816
opennlp.tools.ngram.NGramModelTest.testAdd1();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.ngram.NGramModel.toDictionary(boolean);1.0
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.ngram.NGramModel.<init>();0.5833333134651184
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.ngram.NGramModel.iterator();0.5833333134651184
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9999999403953552
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9833024740219116
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.9833024740219116
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.924369752407074
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.stupidBackoff(opennlp.tools.util.StringList);0.919080913066864
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.ngram.NGramUtils.getNGrams(java.lang.String[], int);0.784488320350647
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.ngram.NGramModel.iterator();0.7368180751800537
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.ngram.NGramModel.<init>();0.6324582099914551
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.6470588445663452
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.languagemodel.NGramLanguageModel.stupidBackoff(opennlp.tools.util.StringList);0.5735294222831726
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.languagemodel.LanguageModelTestUtils.getPerplexity(opennlp.tools.languagemodel.LanguageModel, java.util.Collection<java.lang.String[]>, int);1.0
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomVocabulary(int);0.7916666269302368
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomSentence();0.6590908765792847
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.8285714983940125
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.stupidBackoff(opennlp.tools.util.StringList);0.7692307829856873
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.ngram.NGramModel.iterator();0.7448285222053528
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.7226890921592712
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.ngram.NGramModel.<init>();0.691257119178772
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.ngram.NGramUtils.getNGrams(java.lang.String[], int);0.6903497576713562
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.cutoff(int, int);1.0
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.609375
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.<init>();0.5833333134651184
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.iterator();0.5729166865348816
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.7222222089767456
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.stupidBackoff(opennlp.tools.util.StringList);0.6666666865348816
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.6111111044883728
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);0.6051587462425232
opennlp.tools.ngram.NGramModelTest.testZeroGetCount();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testZeroGetCount();opennlp.tools.ngram.NGramModel.<init>();0.625
opennlp.tools.ngram.NGramModelTest.testZeroGetCount();opennlp.tools.ngram.NGramModel.size();0.625
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.9477124214172363
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.888888955116272
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.7777777910232544
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.stupidBackoff(opennlp.tools.util.StringList);0.7264957427978516
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.ngram.NGramUtils.getNGrams(java.lang.String[], int);0.6711733937263489
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.ngram.NGramModel.iterator();0.5887221693992615
opennlp.tools.ngram.NGramModelTest.testNumberOfGrams();opennlp.tools.ngram.NGramModel.numberOfGrams();1.0
opennlp.tools.ngram.NGramModelTest.testNumberOfGrams();opennlp.tools.ngram.NGramModel.iterator();0.5769230723381042
opennlp.tools.ngram.NGramModelTest.testAdd();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);1.0
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.75
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);1.0
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.75
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.<init>();0.625
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);0.625
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.size();0.625
opennlp.tools.namefind.BilouCodecTest.testCreateSequenceValidator();opennlp.tools.namefind.BilouCodec.createSequenceValidator();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.eval.CrossValidationPartitioner.toString();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);0.625
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.625
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.<init>(opennlp.tools.util.ObjectStream<byte[]>);1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.read();1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9466435313224792
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.XmlUtil.createSaxParser();0.823513925075531
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.FilterObjectStream.close();0.6719133853912354
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.parser.Parse.insert(opennlp.tools.parser.Parse);0.5702299475669861
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.close();0.9999999403953552
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.9565884470939636
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.8086822628974915
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.8086822628974915
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.8086822628974915
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.7901771664619446
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.RealValueFileEventStream.parseContexts(java.lang.String[]);0.6548951268196106
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.6463891863822937
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.RealValueFileEventStream.read();0.6217824816703796
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.OnePassRealValueDataIndexer.sortAndMerge(java.util.List<opennlp.tools.ml.model.ComparableEvent>, boolean);0.5664316415786743
opennlp.tools.util.ObjectStreamUtilsTest.buildStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);1.0
opennlp.tools.util.ObjectStreamUtilsTest.buildStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(java.util.Collection<T>);1.0
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.concatenateObjectStream(java.util.Collection<opennlp.tools.util.ObjectStream<T>>);1.0
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.concatenateObjectStream(opennlp.tools.util.ObjectStream<T>[]);1.0
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8931623697280884
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.formats.muc.DocumentSplitterStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.7971218228340149
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.formats.muc.DocumentSplitterStream.read();0.7410071492195129
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.5764698386192322
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.FilterObjectStream.close();0.5764698386192322
opennlp.tools.namefind.BilouCodecTest.testDecodeOtherFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeEmpty();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletContinuationFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeSingletonFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeMultiClass();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodePairFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeOtherFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeOtherFirst();opennlp.tools.namefind.BioCodec.extractNameType(java.lang.String);0.7083333730697632
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.getEnd();0.625
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.getStart();0.625
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.getType();0.625
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.parseParse(java.lang.String);1.0
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.clone();0.9166666269302368
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.75
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.equals(java.lang.Object);0.6666666865348816
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.getToken(java.lang.String);0.5625
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.setParent(opennlp.tools.parser.Parse);0.5520833134651184
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.getDocument();0.9285714626312256
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.<init>(java.lang.CharSequence, opennlp.tools.util.Span[]);0.7142857313156128
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.getText();1.0
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.6000000238418579
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.getType(java.lang.String);0.5892857313156128
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.getToken(java.lang.String);0.578125
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.550000011920929
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.namefind.RegexNameFinder.<init>(java.util.Map<java.lang.String, java.util.regex.Pattern[]>);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.util.Span.getEnd();0.7457028031349182
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.util.Span.getStart();0.7457028031349182
opennlp.tools.namefind.BioCodecTest.testDecodeSingletonFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeSingletonFirst();opennlp.tools.namefind.BioCodec.extractNameType(java.lang.String);0.7083333134651184
opennlp.tools.parser.ParseTest.testToHashCode();opennlp.tools.parser.Parse.hashCode();1.0
opennlp.tools.parser.ParseTest.testToHashCode();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.6875
opennlp.tools.parser.ParseTest.testToHashCode();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.59375
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.6103603839874268
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.<init>(int, int);0.75
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.75
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.getStart();0.65625
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.getEnd();0.625
opennlp.tools.parser.ParseTest.testShow();opennlp.tools.parser.Parse.show(java.lang.StringBuffer);1.0
opennlp.tools.parser.ParseTest.testShow();opennlp.tools.parser.Parse.equals(java.lang.Object);0.5833333134651184
opennlp.tools.parser.ParseTest.testShow();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.550000011920929
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.sentdetect.SentenceSample.<init>(java.lang.CharSequence, opennlp.tools.util.Span[]);1.0
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.<init>(int, int);0.6161991357803345
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6161991357803345
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getAdditionalContext();0.800000011920929
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.util.Span.equals(java.lang.Object);0.5966986417770386
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.NameSample.getSentence();0.6177356243133545
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.namefind.BioCodec.extractNameType(java.lang.String);0.7916666269302368
opennlp.tools.chunker.ChunkSampleTest.testPhraseAsSpan();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testPhraseAsSpan();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.5833333134651184
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.<init>(int, int);0.75
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.75
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.getStart();0.625
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.getEnd();0.5625
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.toString();1.0
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.<init>(int, int);0.625
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.625
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.625
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.getStart();0.625
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.getEnd();0.5625
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.getType();0.5625
opennlp.tools.namefind.NameSampleTest.testNoTypesToString();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testNoTypesToString();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.6065340638160706
opennlp.tools.namefind.NameSampleTest.testNoTypesToString();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testNoTypesToString();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.5625
opennlp.tools.namefind.NameSampleTest.testNoTypesToString();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.5625
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.getStart();0.5833333134651184
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.<init>(int, int);0.5555555820465088
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5555555820465088
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.getEnd();0.5833333134651184
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.getStart();0.5833333134651184
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.getType();0.5833333134651184
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.<init>(int, int);0.5555555820465088
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5555555820465088
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.<init>(int, int);0.75
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.75
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.getStart();0.65625
opennlp.tools.sentdetect.SentenceSampleTest.testEquals();opennlp.tools.sentdetect.SentenceSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.NameFinderMETest.testDropOverlappingSpans();opennlp.tools.namefind.NameFinderME.dropOverlappingSpans(opennlp.tools.util.Span[]);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.getType();0.6666666865348816
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.getStart();0.6388888955116272
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.getEnd();0.5833333134651184
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.5555555820465088
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5555555820465088
opennlp.tools.namefind.BioCodecTest.testDecodeMultiClass();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeMultiClass();opennlp.tools.namefind.BioCodec.extractNameType(java.lang.String);0.6666666865348816
opennlp.tools.util.eval.FMeasureTest.testPrecision();opennlp.tools.util.eval.FMeasure.precision(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.util.eval.FMeasureTest.testPrecision();opennlp.tools.util.eval.FMeasure.countTruePositives(java.lang.Object[], java.lang.Object[]);0.5555555820465088
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.sentdetect.SentenceSample.getDocument();0.7424242496490479
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.sentdetect.SentenceSample.getDocument();0.7777777910232544
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.sentdetect.SentenceSample.<init>(java.lang.CharSequence, opennlp.tools.util.Span[]);0.5555555820465088
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.getStart();0.5833333134651184
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.<init>(int, int);0.5555555820465088
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5555555820465088
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.6855126619338989
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6855126619338989
opennlp.tools.namefind.BioCodecTest.testDecodePairFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodePairFirst();opennlp.tools.namefind.BioCodec.extractNameType(java.lang.String);0.6666666865348816
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);1.0
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);1.0
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);1.0
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.toString();0.9952836632728577
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.8524265885353088
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.getStart();0.8524265885353088
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.getEnd();0.7095694541931152
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.5667123198509216
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5667123198509216
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.getType();0.6666666865348816
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.getEnd();0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.getStart();0.6111111044883728
opennlp.tools.parser.ParseTest.testEquals();opennlp.tools.parser.Parse.equals(java.lang.Object);1.0
opennlp.tools.parser.ParseTest.testEquals();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.6499999761581421
opennlp.tools.parser.ParseTest.testEquals();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.574999988079071
opennlp.tools.util.eval.FMeasureTest.testRecall();opennlp.tools.util.eval.FMeasure.recall(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.namefind.RegexNameFinder.<init>(java.util.Map<java.lang.String, java.util.regex.Pattern[]>);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.util.Span.getEnd();0.671132504940033
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.util.Span.getStart();0.671132504940033
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.util.Span.getType();0.671132504940033
opennlp.tools.formats.ad.ADNameSampleStreamTest.testNames();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.BioCodecTest.testDecodeTripletFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeTripletFirst();opennlp.tools.namefind.BioCodec.extractNameType(java.lang.String);0.75
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.<init>(int, int);0.625
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.625
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.getEnd();0.5625
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.getStart();0.5625
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.parser.ParseTest.testToString();opennlp.tools.parser.Parse.toString();1.0
opennlp.tools.parser.ParseTest.testToString();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.6000000238418579
opennlp.tools.parser.ParseTest.testToString();opennlp.tools.parser.Parse.getCoveredText();0.5535714030265808
opennlp.tools.parser.ParseTest.testToString();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.550000011920929
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.namefind.BioCodec.extractNameType(java.lang.String);0.7916666269302368
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.getType();0.6666666865348816
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.getEnd();0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.getStart();0.6111111044883728
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);1.0
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);1.0
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);1.0
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.7828283309936523
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.util.Span.getEnd();0.7741095423698425
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.util.Span.<init>(int, int);0.6629984378814697
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6629984378814697
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.util.Span.getStart();0.5518873333930969
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.util.Span.getType();0.5518873333930969
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.getType();0.6666666865348816
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.<init>(int, int);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.getEnd();0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.getStart();0.6111111044883728
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.parseParse(java.lang.String);1.0
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.encodeToken(java.lang.String);0.800000011920929
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.parseParse(java.lang.String, opennlp.tools.parser.GapLabeler);0.75
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.equals(java.lang.Object);0.699999988079071
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.getToken(java.lang.String);0.625
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.show(java.lang.StringBuffer);0.6000000238418579
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.getType(java.lang.String);0.574999988079071
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.insert(opennlp.tools.parser.Parse);0.574999988079071
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.setParent(opennlp.tools.parser.Parse);0.574999988079071
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.decodeToken(java.lang.String);0.5625
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.<init>(java.lang.String, opennlp.tools.util.Span, java.lang.String, double, int);0.550000011920929
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.6177356243133545
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.7982954382896423
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.75
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.75
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.75
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.getStart();0.6966985464096069
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.getEnd();0.5716985464096069
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.getType();0.6666666865348816
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.<init>(int, int);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.getEnd();0.6111111044883728
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.getStart();0.6111111044883728
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9000000357627869
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.7000000476837158
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.7000000476837158
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.7000000476837158
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.5966986417770386
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.util.Span.getStart();0.5966986417770386
opennlp.tools.namefind.NameSampleTest.testEquals();opennlp.tools.namefind.NameSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.NameSampleTest.testEquals();opennlp.tools.namefind.NameSample.getNames();0.59375
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.NameSample.getSentence();0.6177356243133545
opennlp.tools.util.SpanTest.testEquals();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.util.SpanTest.testEquals();opennlp.tools.util.Span.getStart();0.5625
opennlp.tools.util.SpanTest.testGetStart();opennlp.tools.util.Span.getStart();1.0
opennlp.tools.util.SpanTest.testGetStart();opennlp.tools.util.Span.<init>(int, int);0.5625
opennlp.tools.util.SpanTest.testGetStart();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5625
opennlp.tools.util.eval.FMeasureTest.testCountTruePositives();opennlp.tools.util.eval.FMeasure.countTruePositives(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.util.SpanTest.testCrosses();opennlp.tools.util.Span.crosses(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCrosses();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);0.59375
opennlp.tools.util.SpanTest.testCrosses();opennlp.tools.util.Span.getStart();0.5625
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.intersects(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.<init>(int, int);0.6499999761581421
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6499999761581421
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);0.574999988079071
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.getStart();0.574999988079071
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.getEnd();0.550000011920929
opennlp.tools.util.TrainingParametersTest.testGetParameters();opennlp.tools.util.TrainingParameters.getParameters(java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetParameters();opennlp.tools.util.TrainingParameters.getSettings();0.7307692170143127
opennlp.tools.util.TrainingParametersTest.testGetParameters();opennlp.tools.util.TrainingParameters.getSettings(java.lang.String);0.6153846383094788
opennlp.tools.util.TrainingParametersTest.testGetParameters();opennlp.tools.util.TrainingParameters.getObjectSettings(java.lang.String);0.6029411554336548
opennlp.tools.ngram.NGramGeneratorTest.emptyTest();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateLargerWindowThanListTest();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest1();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest3();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest4();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest2();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndNotSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndNotSameType();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.6395220756530762
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterOther();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndSameType();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.6951326131820679
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueCannotBeFirstOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testOtherIsAlwaysAValidOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndNotSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndNotSameType();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.6951326131820679
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testStartIsAlwaysAValidOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndSameType();opennlp.tools.namefind.NameFinderME.extractNameType(java.lang.String);0.6395220160484314
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithHierarchy();opennlp.tools.util.BaseToolFactory.create(java.lang.String, opennlp.tools.util.model.ArtifactProvider);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithInvalidName();opennlp.tools.util.BaseToolFactory.create(java.lang.String, opennlp.tools.util.model.ArtifactProvider);1.0
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeInsensitive();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeInsensitive();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.lang.String, java.lang.String);0.75
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeInsensitive();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(java.nio.file.Path);0.6111111044883728
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeInsensitive();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(morfologik.stemming.Dictionary);0.6111111044883728
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeInsensitive();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.asString(java.lang.CharSequence);0.5694444179534912
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(java.nio.file.Path);1.0
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(morfologik.stemming.Dictionary);1.0
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.builder.MorfologikDictionayBuilder.build(java.nio.file.Path);0.7765226364135742
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.builder.MorfologikDictionayBuilder.<init>();0.6098560094833374
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.builder.MorfologikDictionayBuilder.build(java.nio.file.Path, boolean, boolean, boolean, boolean, boolean);0.5681893229484558
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeMultiLemma();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.util.List<java.lang.String>, java.util.List<java.lang.String>);1.0
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeMultiLemma();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.lang.String, java.lang.String);0.75
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeMultiLemma();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(java.nio.file.Path);0.5555555820465088
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeMultiLemma();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(morfologik.stemming.Dictionary);0.5555555820465088
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.compareTo(opennlp.tools.util.Sequence);1.0
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.getOutcomes();0.8333333730697632
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.getProbs();0.75
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.<init>();0.6666666865348816
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.<init>(opennlp.tools.util.Sequence);0.6666666865348816
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.getProbs(double[]);0.625
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.add(java.lang.String, double);1.0
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.getProbs();1.0
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.getOutcomes();0.9090909361839294
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.getProbs(double[]);0.75
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.<init>();0.6666666865348816
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithInvalidName2();opennlp.tools.postag.POSTaggerFactory.create(java.lang.String, opennlp.tools.dictionary.Dictionary, opennlp.tools.postag.TagDictionary);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithHierarchy2();opennlp.tools.postag.POSTaggerFactory.create(java.lang.String, opennlp.tools.dictionary.Dictionary, opennlp.tools.postag.TagDictionary);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.util.Map<java.lang.String, opennlp.tools.util.model.ArtifactSerializer<?>>, org.w3c.dom.Element);0.75
opennlp.tools.util.featuregen.GeneratorFactoryTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.5555555820465088
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappingsClassicFormat(org.w3c.dom.Element);0.7777777910232544
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.createDOM(java.io.InputStream);0.5555555820465088
opennlp.tools.util.SpanTest.testGetEnd();opennlp.tools.util.Span.getEnd();1.0
opennlp.tools.util.SpanTest.testGetEnd();opennlp.tools.util.Span.<init>(int, int);0.5833333134651184
opennlp.tools.util.SpanTest.testGetEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.5833333134651184
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.657311201095581
opennlp.tools.lemmatizer.LemmaSampleTest.testEquals();opennlp.tools.lemmatizer.LemmaSample.equals(java.lang.Object);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testEquals();opennlp.tools.lemmatizer.LemmaSample.getTags();0.6071428656578064
opennlp.tools.lemmatizer.LemmaSampleTest.testEquals();opennlp.tools.lemmatizer.LemmaSample.getLemmas();0.5833333134651184
opennlp.tools.lemmatizer.LemmaSampleTest.testEquals();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.5555555820465088
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getLemmas();1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getTags();0.75
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.75
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);0.7352941036224365
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.9166666865348816
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.75
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getLemmas();0.75
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getTags();0.75
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testUseAllTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testUseAllTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();0.625
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testUseAllTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.625
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9000000357627869
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.7000000476837158
opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.7999999523162842
opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.75
opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.6403089761734009
opennlp.tools.util.StringList.getToken(int);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.getToken(int);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.6818181872367859
opennlp.tools.util.StringList.getToken(int);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.6818181872367859
opennlp.tools.util.StringList.size();opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
opennlp.tools.util.StringList.size();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.8666666746139526
opennlp.tools.util.StringList.size();opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.8333333730697632
opennlp.tools.util.StringList.size();opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();0.640055775642395
opennlp.tools.util.StringList.size();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.5694756507873535
opennlp.tools.util.StringList.size();opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);0.5636668801307678
opennlp.tools.util.StringList.size();opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);0.5636668801307678
opennlp.tools.util.StringList.toString();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.toString();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.7569756507873535
opennlp.tools.util.StringList.toString();opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.7272727489471436
opennlp.tools.util.StringList.toString();opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.7272727489471436
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.699999988079071
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.699999988079071
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();null.contains(java.lang.Object);0.7433172464370728
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6875
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.625
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.6666666865348816
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.625
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.contains(java.lang.Object);0.5766505599021912
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.hasNext();0.5766505599021912
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.iterator();0.5766505599021912
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();null.hasNext();0.9619399905204773
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();0.8418108224868774
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6470588445663452
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.6470588445663452
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();null.iterator();0.6384105086326599
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.asStringSet();0.856113076210022
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.7567428350448608
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.7567428350448608
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.6000000238418579
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.550000011920929
opennlp.tools.dictionary.DictionaryTest.testHashCode();opennlp.tools.dictionary.Dictionary.hashCode();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9777778387069702
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);0.9540522694587708
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.hasNext();0.775912880897522
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.7333333492279053
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.contains(java.lang.Object);0.72353196144104
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.iterator();0.72353196144104
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.next();0.6013097167015076
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.size();0.6013097167015076
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.util.StringList.equals(java.lang.Object);0.5558669567108154
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();null.hasNext();0.6599838733673096
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.625
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.5833333134651184
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();null.iterator();0.5766505002975464
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();null.hasNext();0.6599838733673096
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.625
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.5833333134651184
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();null.iterator();0.5766505002975464
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.asStringSet();0.927272617816925
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();null.size();0.8919806480407715
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6999999284744263
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.75
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6875
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.asStringSet();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();null.hasNext();0.9619399905204773
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();0.8418108224868774
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.<init>(boolean);0.6470588445663452
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.6470588445663452
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();null.iterator();0.6384105086326599
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testLookup();null.contains(java.lang.Object);0.6183172464370728
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.algorithm();1.0
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.algorithm(java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.getKey(java.lang.String, java.lang.String);0.5833333134651184
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.<init>(java.util.Map<java.lang.String, java.lang.String>);0.5555555820465088
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.defaultParams();1.0
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.algorithm();0.8095238208770752
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.6857143044471741
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getSettings();0.6688311696052551
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.6547619104385376
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.6326530575752258
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.6326530575752258
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, java.lang.String, int);0.5928571224212646
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getSettings(java.lang.String);0.5844155550003052
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String, java.lang.String);0.5773809552192688
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.<init>();0.5663264989852905
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getKey(java.lang.String, java.lang.String);0.5663264989852905
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String, int);0.5663264989852905
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String, java.lang.String);0.5663264989852905
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.methodNameToParameter(java.lang.String);0.8947368264198303
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<?>[]);0.7631579041481018
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.$Proxy10.getEncoding();0.7533642053604126
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.7368420958518982
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.7368420958518982
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(java.lang.String[], java.lang.Class<?>[]);0.6447368264198303
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);1.0
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);1.0
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);1.0
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.putIfAbsent(java.lang.String, double);0.9545454978942871
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getKey(java.lang.String, java.lang.String);0.75
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String, boolean);0.75
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String, double);0.75
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String, int);0.75
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.putIfAbsent(java.lang.String, java.lang.String, double);0.7272727489471436
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.7222222089767456
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String, java.lang.String);0.7222222089767456
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.699999988079071
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, java.lang.String, int);0.699999988079071
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getDoubleParameter(java.lang.String, double);0.6666666865348816
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getDoubleParameter(java.lang.String, java.lang.String, double);0.6666666865348816
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getBooleanParameter(java.lang.String, boolean);0.6578947305679321
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getBooleanParameter(java.lang.String, java.lang.String, boolean);0.6578947305679321
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.<init>(java.util.Map<java.lang.String, java.lang.String>);0.5833333134651184
opennlp.tools.ngram.NGramModelTest.testInvalidFormat();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.util.model.ByteArraySerializerTest.testSerialization();opennlp.tools.util.model.ByteArraySerializer.serialize(byte[], java.io.OutputStream);1.0
opennlp.tools.util.model.ByteArraySerializerTest.testSerialization();opennlp.tools.util.model.ByteArraySerializer.<init>();0.6875
opennlp.tools.util.model.ByteArraySerializerTest.testSerialization();opennlp.tools.util.model.ByteArraySerializer.create(java.io.InputStream);0.6875
opennlp.tools.ml.TrainerFactoryTest.testSequenceTrainerValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testSequenceTrainerValid();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);0.8333333730697632
opennlp.tools.ml.TrainerFactoryTest.testInvalidTrainer();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testInvalidTrainer();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);0.7916666269302368
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.methodNameToParameter(java.lang.String);0.9803921580314636
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.$Proxy10.getEncoding();0.8419952988624573
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.8235294222831726
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.8235294222831726
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<?>[]);0.7941176295280457
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(java.lang.String[], java.lang.Class<?>[]);0.6777493953704834
opennlp.tools.ml.ArrayMathTest.testL1Norm();opennlp.tools.ml.ArrayMath.l1norm(double[]);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.<init>(opennlp.tools.tokenize.DetokenizationDictionary);0.6000000238418579
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSimpleDict();opennlp.tools.tokenize.DetokenizationDictionary.getOperation(java.lang.String);1.0
opennlp.tools.cmdline.ArgumentParserTest.testZeroMethods();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testZeroMethods();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testZeroMethods();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.5859375
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsUsage();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsUsage();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsUsage();opennlp.tools.cmdline.ArgumentParser.methodNameToParameter(java.lang.String);0.6190475821495056
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsUsage();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.59375
opennlp.tools.cmdline.ArgumentParserTest.testInvalidReturnType();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testInvalidReturnType();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testInvalidReturnType();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.606249988079071
opennlp.tools.cmdline.ArgumentParserTest.testInvalidMethodName();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testInvalidMethodName();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testInvalidMethodName();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.6328125
opennlp.tools.ngram.NGramUtilsTest.testNgramMLProbability();opennlp.tools.ngram.NGramUtils.calculateNgramMLProbability(opennlp.tools.util.StringList, java.lang.Iterable<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testNgramMLProbability();opennlp.tools.ngram.NGramUtils.getNMinusOneTokenFirst(opennlp.tools.util.StringList);0.5852272510528564
opennlp.tools.ngram.NGramUtilsTest.testTrigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateTrigramMLProbability(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testTrigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateNgramMLProbability(opennlp.tools.util.StringList, java.lang.Iterable<opennlp.tools.util.StringList>);0.7416666746139526
opennlp.tools.ngram.NGramUtilsTest.testBigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateBigramMLProbability(java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testBigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateNgramMLProbability(opennlp.tools.util.StringList, java.lang.Iterable<opennlp.tools.util.StringList>);0.7319688200950623
opennlp.tools.util.SequenceTest.testCompareTo();opennlp.tools.util.Sequence.compareTo(opennlp.tools.util.Sequence);1.0
opennlp.tools.util.SequenceTest.testCompareTo();opennlp.tools.util.Sequence.<init>();0.5555555820465088
opennlp.tools.util.SequenceTest.testCompareTo();opennlp.tools.util.Sequence.add(java.lang.String, double);0.5555555820465088
opennlp.tools.ml.TrainerFactoryTest.testEventTrainerValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testEventTrainerValid();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);0.875
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerFalse();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testBuiltInValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.<init>(java.io.InputStream);1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.<init>(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.getSettings();1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.<init>(java.util.Map<java.lang.String, java.lang.String>);0.75
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.getSettings(java.lang.String);0.75
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.getStringValue(java.lang.Object);0.6071428656578064
opennlp.tools.ml.model.RealValueFileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.reset();1.0
opennlp.tools.ml.model.RealValueFileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.close();0.699999988079071
opennlp.tools.ml.model.RealValueFileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.5833333134651184
opennlp.tools.ml.model.FileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.reset();1.0
opennlp.tools.ml.model.FileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.close();0.699999988079071
opennlp.tools.ml.model.FileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.5833333134651184
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.read();1.0
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.Event.toString();0.944549560546875
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.7777777910232544
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.close();0.7777777910232544
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.read();1.0
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.Event.toString();0.8959253430366516
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.7777777910232544
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.close();0.7777777910232544
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.<init>();1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9000000357627869
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.<init>();1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.7000000476837158
opennlp.tools.util.featuregen.InSpanGeneratorTest.test();opennlp.tools.util.featuregen.InSpanGenerator.<init>(java.lang.String, opennlp.tools.namefind.TokenNameFinder);1.0
opennlp.tools.util.featuregen.InSpanGeneratorTest.test();opennlp.tools.util.featuregen.InSpanGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.75
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.SuffixFeatureGenerator.getSuffixes(java.lang.String);0.6590908765792847
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.75
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.SuffixFeatureGenerator.getSuffixes(java.lang.String);0.6590908765792847
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.75
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.SuffixFeatureGenerator.getSuffixes(java.lang.String);0.6590908765792847
opennlp.tools.lemmatizer.DictionaryLemmatizerTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.lemmatizer.DictionaryLemmatizerTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.lemmatize(java.lang.String, java.lang.String);0.75
opennlp.tools.lemmatizer.DictionaryLemmatizerTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.getDictKeys(java.lang.String, java.lang.String);0.59375
opennlp.tools.lemmatizer.LemmaSampleTest.testParameterValidation();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testParameterValidation();opennlp.tools.lemmatizer.LemmaSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.625
opennlp.tools.lemmatizer.LemmaSampleTest.testToString();opennlp.tools.lemmatizer.LemmaSample.toString();1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testToString();opennlp.tools.lemmatizer.LemmaSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.625
opennlp.tools.lemmatizer.LemmaSampleTest.testToString();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);0.5882353186607361
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan2();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan2();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.6875
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan1();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan1();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.6875
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan3();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan3();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.6875
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.iterator();1.0
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.<init>(java.lang.String);0.625
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.625
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.getToken(int);0.59375
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.size();0.5625
opennlp.tools.util.StringUtilTest.testToLowerCase();opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.testLowerCase();opennlp.tools.util.featuregen.TokenFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.testLowerCase();opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);0.7354689240455627
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.testLowerCase();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);0.65625
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.methodNameToParameter(java.lang.String);0.7166666388511658
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.6666666269302368
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.6499999761581421
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(java.lang.String[], java.lang.Class<?>[]);0.625
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.7272726893424988
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(java.lang.String[], java.lang.Class<?>[]);0.6477272510528564
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.6363636255264282
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.methodNameToParameter(java.lang.String);0.7321428060531616
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.6785714030265808
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(java.lang.String[], java.lang.Class<?>[]);0.6339285373687744
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.625
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<?>[]);0.75
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.6785714626312256
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.checkProxyInterfaces(java.lang.Class<?>[]);0.6428571343421936
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.validateArgumentsLoudly(java.lang.String[], java.lang.Class<?>[]);0.625
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.methodNameToParameter(java.lang.String);0.5535714626312256
opennlp.tools.util.normalizer.NumberCharSequenceNormalizerTest.normalize();opennlp.tools.util.normalizer.NumberCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testBeginFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.75
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel, int);0.625
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.ml.BeamSearch.bestSequences(int, T[], java.lang.Object[], double, opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.625
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.serialize(java.io.Writer);1.0
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.<init>(java.io.Reader);0.6875
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.equals(java.lang.Object);0.6875
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.readHeadRules(java.io.BufferedReader);0.6875
opennlp.tools.namefind.BioCodecTest.testCreateSequenceValidator();opennlp.tools.namefind.BioCodec.createSequenceValidator();1.0
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.ngram.NGramModel.<init>();0.625
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);0.5625
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.ngram.NGramModel.<init>();0.625
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.5625
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.ngram.NGramModel.remove(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.ngram.NGramModel.size();0.5833333134651184
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.getNames();0.6177356243133545
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.getNames();0.6103603839874268
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.close();1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.close();0.875
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.read();0.75
opennlp.tools.formats.DirectorySampleStreamTest.invalidDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.invalidDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.reset();1.0
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();0.800000011920929
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.699999988079071
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.699999988079071
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();0.699999988079071
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();1.0
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.75
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.PrefixFeatureGenerator.getPrefixes(java.lang.String);0.6590908765792847
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.75
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.PrefixFeatureGenerator.getPrefixes(java.lang.String);0.6590908765792847
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.75
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.PrefixFeatureGenerator.getPrefixes(java.lang.String);0.6590908765792847
opennlp.tools.sentdetect.DefaultEndOfSentenceScannerTest.testScanning();opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.<init>(char[]);1.0
opennlp.tools.sentdetect.DefaultEndOfSentenceScannerTest.testScanning();opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.getPositions(java.lang.String);1.0
opennlp.tools.sentdetect.DefaultEndOfSentenceScannerTest.testScanning();opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.getPositions(char[]);0.75
opennlp.tools.ml.ArrayMathTest.testInvL2Norm();opennlp.tools.ml.ArrayMath.invL2norm(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testInvL2Norm();opennlp.tools.ml.ArrayMath.l2norm(double[]);0.6666666865348816
opennlp.tools.ml.ArrayMathTest.testL2Norm();opennlp.tools.ml.ArrayMath.l2norm(double[]);1.0
opennlp.tools.util.normalizer.UrlCharSequenceNormalizerTest.normalizeUrl();opennlp.tools.util.normalizer.UrlCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.UrlCharSequenceNormalizerTest.normalizeEmail();opennlp.tools.util.normalizer.UrlCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.6071428656578064
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testNext();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testNext();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.7142857313156128
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.7142857313156128
opennlp.tools.util.normalizer.EmojiCharSequenceNormalizerTest.normalizeEmoji();opennlp.tools.util.normalizer.EmojiCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.StringListTest.testGetToken();opennlp.tools.util.StringList.getToken(int);1.0
opennlp.tools.util.StringListTest.testGetToken();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.5625
opennlp.tools.util.StringListTest.testGetToken();opennlp.tools.util.StringList.size();0.5625
opennlp.tools.util.StringListTest.testIntern();opennlp.tools.util.StringList.<init>(java.lang.String);1.0
opennlp.tools.util.StringListTest.testIntern();opennlp.tools.util.StringList.<init>(java.lang.String[]);1.0
opennlp.tools.util.StringListTest.testIntern();opennlp.tools.util.StringList.getToken(int);0.875
opennlp.tools.util.StringListTest.testHashCode();opennlp.tools.util.StringList.hashCode();1.0
opennlp.tools.util.StringListTest.testEquals();opennlp.tools.util.StringList.equals(java.lang.Object);1.0
opennlp.tools.util.StringListTest.testToString();opennlp.tools.util.StringList.toString();1.0
opennlp.tools.util.StringListTest.testToString();opennlp.tools.util.StringList.<init>(java.lang.String);0.625
opennlp.tools.util.StringListTest.testToString();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.625
opennlp.tools.util.StringListTest.testToString();opennlp.tools.util.StringList.getToken(int);0.59375
opennlp.tools.util.StringListTest.testToString();opennlp.tools.util.StringList.size();0.5625
opennlp.tools.namefind.RegexNameFinderTest.testFindMatchingPatternWithoutMatchingTokenBounds();opennlp.tools.namefind.RegexNameFinder.<init>(java.util.Map<java.lang.String, java.util.regex.Pattern[]>);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindMatchingPatternWithoutMatchingTokenBounds();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.test();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.test();opennlp.tools.util.featuregen.TokenFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.SpanTest.testEqualsWithNull();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.util.SpanTest.testEqualsWithNull();opennlp.tools.util.Span.<init>(int, int);0.6666666865348816
opennlp.tools.util.SpanTest.testEqualsWithNull();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6666666865348816
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.clearAdaptiveData();0.9285714626312256
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.updateAdaptiveData(java.lang.String[], java.lang.String[]);0.9047619104385376
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.<init>();0.6428571343421936
opennlp.tools.util.VersionTest.testParseInvalidVersion2();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.util.VersionTest.testParseInvalidVersion();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeEmpty();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testUnigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testUnigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.7333333492279053
opennlp.tools.doccat.NGramFeatureGeneratorTest.test12gram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.test13gram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize1();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize1();opennlp.tools.util.InvalidFormatException.<init>(java.lang.String);0.6670087575912476
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize2();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize2();opennlp.tools.util.InvalidFormatException.<init>(java.lang.String);0.6670087575912476
opennlp.tools.doccat.NGramFeatureGeneratorTest.testBigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testBigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9000000357627869
opennlp.tools.doccat.NGramFeatureGeneratorTest.testTrigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testTrigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.8571428656578064
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getValues();1.0
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getOutcome();0.8571428656578064
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getContext();0.7857142686843872
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.toString();0.7142857313156128
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.6428571343421936
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.getValues();1.0
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.getOutcome();0.7142857313156128
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.6428571343421936
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.6428571343421936
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.getContext();0.6428571343421936
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.toString();0.6428571343421936
opennlp.tools.ml.model.EventTest.testNullOutcome();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);1.0
opennlp.tools.ml.model.EventTest.testNullOutcome();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);1.0
opennlp.tools.ml.model.EventTest.testNullContext();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);1.0
opennlp.tools.ml.model.EventTest.testNullContext();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);1.0
opennlp.tools.util.SpanTest.testContainsInt();opennlp.tools.util.Span.contains(int);1.0
opennlp.tools.util.SpanTest.testContainsInt();opennlp.tools.util.Span.<init>(int, int);0.75
opennlp.tools.util.SpanTest.testContainsInt();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.75
opennlp.tools.util.SpanTest.testLength();opennlp.tools.util.Span.length();1.0
opennlp.tools.util.SpanTest.testLength();opennlp.tools.util.Span.<init>(int, int);0.6666666865348816
opennlp.tools.util.SpanTest.testLength();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.6666666865348816
opennlp.tools.util.SpanTest.testStartLargerThanEnd();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testStartLargerThanEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);1.0
opennlp.tools.util.SpanTest.testTooSmallEnd();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testTooSmallEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);1.0
opennlp.tools.util.SpanTest.testTooSmallStart();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testTooSmallStart();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testCheckMergedContractions();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testSize();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testSmallSentence();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.ml.ArrayMathTest.testToIntArray();opennlp.tools.ml.ArrayMath.toIntArray(java.util.List<java.lang.Integer>);1.0
opennlp.tools.ml.ArrayMathTest.testInnerProduct();opennlp.tools.ml.ArrayMath.innerProduct(double[], double[]);1.0
opennlp.tools.ml.ArrayMathTest.testInnerProductDoubleNaN();opennlp.tools.ml.ArrayMath.innerProduct(double[], double[]);1.0
opennlp.tools.lemmatizer.DictionaryLemmatizerMultiTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.lemmatize(java.util.List<java.lang.String>, java.util.List<java.lang.String>);1.0
opennlp.tools.lemmatizer.DictionaryLemmatizerMultiTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.getAllLemmas(java.lang.String, java.lang.String);0.6875
opennlp.tools.lemmatizer.DictionaryLemmatizerMultiTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.getDictKeys(java.lang.String, java.lang.String);0.59375
opennlp.tools.ml.ArrayMathTest.testToDoubleArray();opennlp.tools.ml.ArrayMath.toDoubleArray(java.util.List<java.lang.Double>);1.0
opennlp.tools.langdetect.LanguageSampleTest.testNullLang();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.noFeaturesTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.createFeaturesSuccessiveTokensTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.createFeaturesTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest1();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest3();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest2();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest4();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ml.ArrayMathTest.testLogSumOfExps();opennlp.tools.ml.ArrayMath.logSumOfExps(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testMax();opennlp.tools.ml.ArrayMath.max(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testMax();opennlp.tools.ml.ArrayMath.argmax(double[]);0.625
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartContinue();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartContinueOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleStart();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityContinueOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityMultiClass();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityRepeated();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityBadTag();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleContinue();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityEmpty();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.util.ext.ExtensionLoaderTest.testLoadingStringGenerator();opennlp.tools.util.ext.ExtensionLoader.instantiateExtension(java.lang.Class<T>, java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByStart();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByStart();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testBeginFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByOutside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByInside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOutsideFollowedByOutside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetSettings();opennlp.tools.util.TrainingParameters.getSettings();1.0
opennlp.tools.util.TrainingParametersTest.testGetSettings();opennlp.tools.util.TrainingParameters.getSettings(java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetSettings();opennlp.tools.util.TrainingParameters.getStringValue(java.lang.Object);0.6428571343421936
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeHashtag();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeRT();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeLaugh();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeUser();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeFace();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.StringUtilTest.testToUpperCase();opennlp.tools.util.StringUtil.toUpperCase(java.lang.CharSequence);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityEmpty();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityUnitOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesStart();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityWrongClass();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityBadTag();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesContinue();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityMultiClass();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinue();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.ml.ArrayMathTest.testArgmaxException2();opennlp.tools.ml.ArrayMath.argmax(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testArgmaxException1();opennlp.tools.ml.ArrayMath.argmax(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testArgmax();opennlp.tools.ml.ArrayMath.argmax(double[]);1.0