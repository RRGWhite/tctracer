test-class;tested-class;score
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.langdetect.LanguageDetectorModel.<init>(java.io.InputStream);1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.9999704957008362
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.9998524188995361
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.9998524188995361
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.9997462034225464
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.PlainTextFileDataReader.<init>(java.io.BufferedReader);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.PlainTextNaiveBayesModelReader.<init>(java.io.BufferedReader);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.PlainTextNaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.BufferedWriter);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(opennlp.tools.ml.model.DataReader);0.9999822974205017
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.9999645948410034
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.9999468922615051
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.9999468922615051
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.9999468922615051
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.9999114871025085
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.9999114871025085
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.AbstractModelReader.<init>(opennlp.tools.ml.model.DataReader);0.9998229146003723
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.AbstractModelWriter.<init>();0.999805212020874
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.9997993111610413
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.9997462034225464
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9994984865188599
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994630813598633
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.AbstractTrainer.<init>();0.9994630813598633
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.<init>(opennlp.tools.doccat.DoccatModel);1.0
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.categorize(java.lang.String[]);1.0
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.getBestCategory(double[]);1.0
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.sortedScoreMap(java.lang.String[]);1.0
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DoccatModel.getFactory();0.9999882578849792
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DoccatFactory.<init>();0.9999823570251465
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DoccatFactory.getFeatureGenerators();0.9999823570251465
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerContextGenerator.<init>(opennlp.tools.doccat.FeatureGenerator[]);0.9999823570251465
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.doccat.DocumentSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.doccat.DoccatFactory);0.9999823570251465
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[]);0.999970555305481
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.999970555305481
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();0.9999646544456482
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.9999587535858154
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998642802238464
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.util.BaseToolFactory.<init>();0.9996873140335083
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996578097343445
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.util.TrainingParameters.<init>();0.9995633959770203
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995633959770203
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999881386756897
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9997580051422119
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9997107982635498
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996930956840515
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.util.TrainingParameters.<init>();0.9996635913848877
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996635913848877
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999881386756897
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9997580051422119
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9997107982635498
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996930956840515
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.util.TrainingParameters.<init>();0.9996635913848877
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996635913848877
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9999823570251465
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999704957008362
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.langdetect.LanguageDetectorModel.<init>(java.io.InputStream);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.9998524188995361
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.9998524188995361
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.9997462034225464
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();null.<init>(opennlp.tools.langdetect.LanguageDetectorEvaluatorTest, java.util.concurrent.atomic.AtomicInteger, java.util.concurrent.atomic.AtomicInteger);1.0
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.cmdline.langdetect.LanguageDetectorEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorEvaluator.<init>(opennlp.tools.langdetect.LanguageDetector, opennlp.tools.langdetect.LanguageDetectorEvaluationMonitor[]);0.9999940991401672
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorEvaluator.getAccuracy();0.9999940991401672
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorEvaluator.getDocumentCount();0.9999940991401672
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorFactory.getContextGenerator();0.999976396560669
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorME.<init>(opennlp.tools.langdetect.LanguageDetectorModel);0.999976396560669
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.util.eval.Mean.<init>();0.9999704957008362
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.9999586939811707
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.9999468922615051
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999232888221741
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999114871025085
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.999899685382843
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998937845230103
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998937845230103
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.langdetect.LanguageDetectorModel.<init>(java.io.InputStream);1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.9999704957008362
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.9998524188995361
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.9998524188995361
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.9997462034225464
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.PlainTextFileDataReader.<init>(java.io.InputStream);1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.PlainTextNaiveBayesModelReader.<init>(java.io.File);1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.PlainTextNaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.File);1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.AbstractModelReader.<init>(java.io.File);0.9999704957008362
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.9999704957008362
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.9999645948410034
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.9999468922615051
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.9999468922615051
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.9999468922615051
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.9999114871025085
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.9999114871025085
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.AbstractModelWriter.<init>();0.999805212020874
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.9997993111610413
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.9997462034225464
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9994984865188599
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994630813598633
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.AbstractTrainer.<init>();0.9994630813598633
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995869994163513
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.<init>();0.9995515942573547
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9994867444038391
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9993924498558044
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.BinaryNaiveBayesModelReader.<init>(java.io.File);1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.BinaryNaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.File);1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModelReader.<init>(java.io.File);0.9999940991401672
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.<init>(java.io.File);0.9999940991401672
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.checkModelType();0.9999881982803345
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.9999704957008362
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.9999704957008362
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.9999704957008362
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.9999350905418396
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.9999350905418396
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModelWriter.<init>();0.9998288154602051
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.BinaryFileDataReader.<init>(java.io.InputStream);0.9998288154602051
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.9998229146003723
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.9997698068618774
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995220899581909
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994866847991943
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.AbstractTrainer.<init>();0.9994866847991943
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.AbstractEventStream.close();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.BioCodec.<init>();0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.999899685382843
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998642802238464
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997168183326721
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997168183326721
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9997109174728394
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.AbstractEventStream.read();0.9997109174728394
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996932148933411
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.ml.model.Event.getOutcome();0.9993747472763062
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.Span.<init>(int, int);0.9990564584732056
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.cmdline.TokenNameFinderToolTest.run();opennlp.tools.cmdline.namefind.TokenNameFinderTool.run(java.lang.String[]);1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.run();opennlp.tools.cmdline.BasicCmdLineTool.<init>();0.9999940991401672
opennlp.tools.cmdline.TokenNameFinderToolTest.run();opennlp.tools.cmdline.CmdLineTool.<init>();0.9999940991401672
opennlp.tools.cmdline.TokenNameFinderToolTest.run();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();0.9999940991401672
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.create(java.lang.String, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.BioCodec.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999291896820068
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.999876081943512
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.TrainingParameters.<init>();0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.equals(java.lang.Object);0.9995811581611633
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.PlainTextByLineStream.reset();0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994159936904907
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.getType();0.9993334412574768
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987266659736633
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.CachedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);1.0
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>();0.999994158744812
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.TrainingParameters.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999882578849792
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.DefaultNameContextGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.9999528527259827
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.<init>();0.9999469518661499
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.BioCodec.<init>();0.9999351501464844
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999351501464844
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.9999351501464844
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999351501464844
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();0.9999351501464844
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998878836631775
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);0.9998819828033447
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);0.999876081943512
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.Cache.<init>(int);0.9998701810836792
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.OutcomePriorFeatureGenerator.<init>();0.9998583793640137
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998524785041809
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.9998465776443481
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997050166130066
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997050166130066
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9996991157531738
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996814131736755
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.TwoPassDataIndexer.<init>();0.9996106028556824
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.9995869994163513
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9995869994163513
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995280504226685
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994632005691528
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.Span.<init>(int, int);0.9990447163581848
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987030625343323
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.POSTaggerFactory.<init>();1.0
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.POSTaggerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.postag.POSTaggerFactory);1.0
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.WordTagSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.BaseToolFactory.<init>();0.9997403621673584
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9997108578681946
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996695518493652
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.<init>();0.9996164441108704
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996164441108704
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995456337928772
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.PlainTextByLineStream.reset();0.9995456337928772
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995279312133789
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.ModelType.<init>();1.0
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.postag.POSModel.<init>(java.io.InputStream);0.9999822974205017
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.9998819231987
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.9998642206192017
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.9998642206192017
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.9997580051422119
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.AbstractEventStream.close();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.BioCodec.<init>();0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.999899685382843
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998642802238464
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997168183326721
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997168183326721
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9997109174728394
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.AbstractEventStream.read();0.9997109174728394
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996932148933411
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.ml.model.Event.getOutcome();0.9993747472763062
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.Span.<init>(int, int);0.9990564584732056
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderFactory.create(java.lang.String, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.BioCodec.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999291896820068
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.999876081943512
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.TrainingParameters.<init>();0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.Span.equals(java.lang.Object);0.9995811581611633
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.PlainTextByLineStream.reset();0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994159936904907
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.Span.getType();0.9993334412574768
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987266659736633
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.TokenNameFinderFactory.create(java.lang.String, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.BioCodec.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999291896820068
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.999876081943512
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.TrainingParameters.<init>();0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.Span.equals(java.lang.Object);0.9995811581611633
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.PlainTextByLineStream.reset();0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994159936904907
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987266659736633
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.create(java.lang.String, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.BioCodec.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999291896820068
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.999876081943512
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.TrainingParameters.<init>();0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.equals(java.lang.Object);0.9995811581611633
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.PlainTextByLineStream.reset();0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994159936904907
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.getType();0.9993334412574768
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987266659736633
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.DefaultNameContextGenerator.<init>();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.AbstractEventStream.close();0.9999586939811707
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.DefaultNameContextGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.9999232888221741
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.<init>();0.9999173879623413
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.BioCodec.<init>();0.9999055862426758
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999055862426758
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.9999055862426758
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999055862426758
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998583197593689
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998229146003723
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999675452709198
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999675452709198
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9996695518493652
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.AbstractEventStream.read();0.9996695518493652
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996518492698669
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993628859519958
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.ml.model.Event.getOutcome();0.999333381652832
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986735582351685
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.AbstractEventStream.close();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.BioCodec.<init>();0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameFinderEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, java.lang.String, opennlp.tools.namefind.NameContextGenerator, opennlp.tools.util.SequenceCodec<java.lang.String>);0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999469518661499
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.999899685382843
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998642802238464
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997168183326721
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997168183326721
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9997109174728394
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.AbstractEventStream.read();0.9997109174728394
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996932148933411
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.ml.model.Event.getOutcome();0.9993747472763062
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.create(java.lang.String, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.BioCodec.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999291896820068
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.999876081943512
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.TrainingParameters.<init>();0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.Span.equals(java.lang.Object);0.9995811581611633
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.PlainTextByLineStream.reset();0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994159936904907
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987266659736633
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderFactory.create(java.lang.String, byte[], java.util.Map<java.lang.String, java.lang.Object>, opennlp.tools.util.SequenceCodec<java.lang.String>);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.999994158744812
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.9999882578849792
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.BioCodec.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.9999587535858154
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999291896820068
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.999876081943512
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.TrainingParameters.<init>();0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996106028556824
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.Span.equals(java.lang.Object);0.9995811581611633
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.PlainTextByLineStream.reset();0.999539852142334
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994159936904907
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987266659736633
opennlp.tools.cmdline.CLITest.testHelpMessageOfTools();opennlp.tools.cmdline.CLI.getToolNames();1.0
opennlp.tools.cmdline.CLITest.testHelpMessageOfTools();opennlp.tools.cmdline.CLI.main(java.lang.String[]);0.999976396560669
opennlp.tools.cmdline.CLITest.testToolParameterMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankFlex.getFlex();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankFlex.getSurface();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getFlex();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getOriginal();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getTokenSample();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getTranslation();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.getSentences();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.tokenize.TokenSample.getText();0.9998642206192017
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9998642206192017
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.util.Span.getEnd();0.998720645904541
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.util.Span.getStart();0.9987030029296875
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.getDivtypes();1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.getTexts();1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.parse(java.io.InputStream);0.9999940991401672
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>();1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int, boolean);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(opennlp.tools.ml.maxent.quasinewton.Function);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9999468326568604
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9999291896820068
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999173283576965
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996872544288635
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996400475502014
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996223449707031
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.util.TrainingParameters.<init>();0.9995928406715393
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995928406715393
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>();1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int, boolean);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(opennlp.tools.ml.maxent.quasinewton.Function);0.9999410510063171
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testGetParagraphs();opennlp.tools.formats.nkjp.NKJPTextDocument.getParagraphs();1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testGetParagraphs();opennlp.tools.formats.nkjp.NKJPTextDocument.parse(java.io.InputStream);0.9999940991401672
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.doccat.DocumentSampleTest.testEquals();opennlp.tools.doccat.DocumentSample.equals(java.lang.Object);1.0
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.getCategory();1.0
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.getText();1.0
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DoccatFactory.<init>();1.0
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentCategorizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.doccat.DocumentSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.doccat.DoccatFactory);1.0
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[]);0.9999881982803345
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9999881982803345
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();0.9999822974205017
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.999976396560669
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998819231987
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.BaseToolFactory.<init>();0.9997049570083618
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.<init>();0.9995810389518738
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995810389518738
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.cmdline.namefind.NameEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.TokenNameFinderEvaluator.<init>(opennlp.tools.namefind.TokenNameFinder, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.9999881982803345
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.TokenNameFinderEvaluator.getFMeasure();0.9999881982803345
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999527931213379
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999232888221741
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.9999114871025085
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9999055862426758
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9999055862426758
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.NameSample.getNames();0.9997167587280273
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.chunker.ChunkerEvaluator.getFMeasure();1.0
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.cmdline.chunker.ChunkEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.chunker.ChunkerEvaluator.<init>(opennlp.tools.chunker.Chunker, opennlp.tools.chunker.ChunkerEvaluationMonitor[]);0.999994158744812
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.chunker.DummyChunker.<init>(opennlp.tools.chunker.DummyChunkSampleStream);0.999994158744812
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.chunker.DummyChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean);0.9999882578849792
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9999646544456482
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.9999292492866516
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9999292492866516
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996165037155151
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994926452636719
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.PlainTextByLineStream.reset();0.9994926452636719
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994749426841736
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.cmdline.lemmatizer.LemmaEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.DummyLemmaSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean);1.0
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.DummyLemmatizer.<init>(opennlp.tools.lemmatizer.DummyLemmaSampleStream);1.0
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.LemmatizerEvaluator.<init>(opennlp.tools.lemmatizer.Lemmatizer, opennlp.tools.lemmatizer.LemmatizerEvaluationMonitor[]);1.0
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.LemmatizerEvaluator.getWordAccuracy();1.0
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Mean.<init>();0.9999704957008362
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9999586939811707
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.9999409914016724
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999114871025085
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999055862426758
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998937845230103
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994866847991943
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.PlainTextByLineStream.reset();0.9994866847991943
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmaSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmatizerFactory.<init>();1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmatizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.lemmatizer.LemmaSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.lemmatizer.LemmatizerFactory);1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.9999409914016724
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9999055862426758
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.9996813535690308
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9995574355125427
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995574355125427
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994866847991943
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.9994866847991943
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.perceptron.PerceptronTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.perceptron.PerceptronTrainer.<init>();0.9999114871025085
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9998937845230103
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9998819231987
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.model.TwoPassDataIndexer.<init>();0.9995810389518738
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9995810389518738
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.util.TrainingParameters.<init>();0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9994984865188599
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994630813598633
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.AbstractTrainer.<init>();0.9994630813598633
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.model.AbstractModel.hashCode();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.model.AbstractModel.equals(java.lang.Object);0.9999881982803345
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9998819231987
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996518492698669
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996046423912048
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9995869398117065
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9995810389518738
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.util.TrainingParameters.<init>();0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.BinaryFileDataReader.<init>(java.io.DataInputStream);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelReader.<init>(java.io.DataInputStream);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelReader.<init>(opennlp.tools.ml.model.DataReader);0.9999881982803345
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.DataOutputStream);0.9999822974205017
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelWriter.close();0.9999822974205017
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelWriter.<init>(opennlp.tools.ml.model.AbstractModel);0.9999822974205017
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelWriter.persist();0.9999822974205017
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9998937845230103
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9998819231987
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModelReader.getModel();0.9998288154602051
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModelReader.<init>(opennlp.tools.ml.model.DataReader);0.9998229146003723
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModelWriter.<init>();0.999805212020874
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModel.getDataStructures();0.9997993111610413
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.AbstractModel.getNumOutcomes();0.9997462034225464
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996518492698669
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996046423912048
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9995869398117065
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9995810389518738
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.util.TrainingParameters.<init>();0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995574355125427
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.999769926071167
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9997227191925049
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9997050166130066
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9996991157531738
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.util.TrainingParameters.<init>();0.9996755123138428
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996755123138428
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9999291896820068
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999173283576965
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996872544288635
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996400475502014
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996223449707031
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.util.TrainingParameters.<init>();0.9995928406715393
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995928406715393
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999881386756897
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9997580051422119
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9997107982635498
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996930956840515
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9996871948242188
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.util.TrainingParameters.<init>();0.9996635913848877
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9996635913848877
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9999291896820068
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999173283576965
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996872544288635
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996400475502014
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996223449707031
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.util.TrainingParameters.<init>();0.9995928406715393
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995928406715393
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractConverterTool.<init>(java.lang.Class<T>);1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractCrossValidatorTool.<init>(java.lang.Class<T>, java.lang.Class<P>);1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractEvaluatorTool.<init>(java.lang.Class<T>, java.lang.Class<P>);1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractTrainerTool.<init>(java.lang.Class<T>, java.lang.Class<P>);1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractTypedParamTool.<init>(java.lang.Class<T>, java.lang.Class<P>);1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.TypedCmdLineTool.<init>(java.lang.Class<T>);1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerCrossValidatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerMETool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.dictionary.DictionaryBuilderTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatCrossValidatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.entitylinker.EntityLinkerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorCrossValidatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.languagemodel.NGramLanguageModelTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerMETool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.CensusDictionaryCreatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderCrossValidatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.BuildModelUpdaterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.CheckModelUpdaterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ModelUpdaterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.TaggerModelReplacerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerCrossValidatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorCrossValidatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.DictionaryDetokenizerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.SimpleTokenizerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerConverterTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerCrossValidatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerMEEvaluatorTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerMETool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerTrainerTool.<init>();1.0
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerTrainerTool.getName();0.9999881982803345
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerTrainerTool.getName();0.9999881982803345
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.BasicCmdLineTool.<init>();0.9999822974205017
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CmdLineTool.<init>();0.9999822974205017
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();0.9999822974205017
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);0.999976396560669
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CmdLineTool.getName();0.999976396560669
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.TokenNameFinderCrossValidator.<init>(java.lang.String, java.lang.String, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.TokenNameFinderCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, int);0.999994158744812
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9998819828033447
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996578097343445
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996165037155151
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9995633959770203
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995633959770203
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994926452636719
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.9994926452636719
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994749426841736
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.chunker.ChunkerModel.<init>(java.io.InputStream);1.0
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.9998760223388672
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.9998760223388672
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.9997698068618774
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.chunker.ChunkerModel.<init>(java.io.InputStream);1.0
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.9998760223388672
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.9998760223388672
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.9997698068618774
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ConllXPOSSampleStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);1.0
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ConllXPOSSampleStream.read();1.0
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999409914016724
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.getTags();0.9998465180397034
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.getSentence();0.9998406171798706
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.FilterObjectStream.close();0.9997993111610413
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996105432510376
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994866847991943
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.PlainTextByLineStream.reset();0.9994866847991943
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getSentenceIdComment();1.0
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getTextComment();0.999976396560669
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getWordLines();0.9999645948410034
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999586939811707
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.close();0.9999586939811707
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.read();0.9999586939811707
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999409914016724
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996105432510376
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994866847991943
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.reset();0.9994866847991943
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluLemmaSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, opennlp.tools.formats.conllu.ConlluTagset);1.0
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluLemmaSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.toString();0.9999881982803345
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTagset.<init>();0.9999822974205017
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.getLemmas();0.9999704957008362
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.9999704957008362
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999586939811707
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999409914016724
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.util.FilterObjectStream.close();0.9997993111610413
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996105432510376
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994866847991943
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.reset();0.9994866847991943
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, opennlp.tools.formats.conllu.ConlluTagset);1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluPOSSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTagset.<init>();0.9999882578849792
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.postag.POSSample.equals(java.lang.Object);0.9999823570251465
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999646544456482
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999469518661499
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.postag.POSSample.parse(java.lang.String);0.999876081943512
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.util.FilterObjectStream.close();0.9998052716255188
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996165037155151
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994926452636719
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.reset();0.9994926452636719
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994749426841736
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluTokenSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>);1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999704957008362
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);0.9999704957008362
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999527931213379
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9999409914016724
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.util.FilterObjectStream.close();0.9998111128807068
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996223449707031
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994984865188599
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.util.PlainTextByLineStream.reset();0.9994984865188599
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.FilterObjectStream.reset();1.0
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.999970555305481
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.ParagraphStream.read();0.999970555305481
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998878836631775
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.FilterObjectStream.close();0.9998288750648499
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994985461235046
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentenceSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, int);1.0
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentenceSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999586939811707
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999409914016724
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.sentdetect.SentenceSample.getDocument();0.9999232888221741
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.sentdetect.SentenceSample.getSentences();0.9999232888221741
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.FilterObjectStream.close();0.9997993111610413
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996105432510376
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.Span.equals(java.lang.Object);0.9995279908180237
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994866847991943
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.reset();0.9994866847991943
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.Span.<init>(int, int);0.9990151524543762
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986735582351685
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTokenSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>);1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999704957008362
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);0.9999704957008362
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999527931213379
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9999409914016724
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.util.FilterObjectStream.close();0.9998111128807068
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996223449707031
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994984865188599
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.reset();0.9994984865188599
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluTokenSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>);1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999704957008362
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);0.9999704957008362
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999527931213379
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9999409914016724
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.util.FilterObjectStream.close();0.9998111128807068
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996223449707031
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994984865188599
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.util.PlainTextByLineStream.reset();0.9994984865188599
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.formats.conllu.ConlluSentence>, opennlp.tools.formats.conllu.ConlluTagset);1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluPOSSampleStream.read();1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.postag.POSSample.equals(java.lang.Object);0.9999823570251465
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluStream.<init>(opennlp.tools.util.InputStreamFactory);0.9999646544456482
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999469518661499
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.postag.POSSample.parse(java.lang.String);0.999876081943512
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.util.FilterObjectStream.close();0.9998052716255188
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996165037155151
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994926452636719
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.util.PlainTextByLineStream.reset();0.9994926452636719
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994749426841736
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.ParagraphStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.ParagraphStream.read();1.0
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9999173283576965
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.FilterObjectStream.close();0.9998583197593689
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995279312133789
opennlp.tools.formats.ad.ADParagraphStreamTest.testSimpleReading();opennlp.tools.formats.ad.ADSentenceStream.Sentence.getRoot();1.0
opennlp.tools.formats.ad.ADParagraphStreamTest.testSimpleReading();opennlp.tools.formats.ad.ADSentenceStream.read();0.999994158744812
opennlp.tools.formats.ad.ADParagraphStreamTest.testLeadingWithContraction();opennlp.tools.formats.ad.ADSentenceStream.read();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean, boolean);1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.close();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.read();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADSentenceStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999881982803345
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADSentenceStream.SentenceParser.<init>();0.9999881982803345
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.getTags();0.9998583197593689
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.getSentence();0.9998524188995361
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996223449707031
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994984865188599
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.util.PlainTextByLineStream.reset();0.9994984865188599
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean, boolean);1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.close();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.read();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADSentenceStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999881982803345
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADSentenceStream.SentenceParser.<init>();0.9999881982803345
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.postag.POSSample.getTags();0.9998583197593689
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.postag.POSSample.getSentence();0.9998524188995361
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996223449707031
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994984865188599
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.util.PlainTextByLineStream.reset();0.9994984865188599
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean, boolean);1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.close();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.read();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADSentenceStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999881982803345
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADSentenceStream.SentenceParser.<init>();0.9999881982803345
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.postag.POSSample.getTags();0.9998583197593689
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.postag.POSSample.getSentence();0.9998524188995361
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996223449707031
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994984865188599
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.util.PlainTextByLineStream.reset();0.9994984865188599
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998465776443481
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getAbbreviationDictionary();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getContextGenerator();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.create(java.lang.String, java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);0.9999823570251465
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.9999587535858154
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getLanguageCode();0.9999587535858154
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.9999587535858154
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.chunker.ChunkSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.chunker.ChunkerFactory);0.999994158744812
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkerFactory.<init>();0.9999764561653137
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.9996991157531738
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996283054351807
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9995751976966858
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995751976966858
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995044469833374
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.9995044469833374
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994867444038391
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.process(org.apache.uima.cas.CAS);1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.typeSystemInit(org.apache.uima.cas.TypeSystem);1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.util.CasUtil.deserializeXmiCAS(org.apache.uima.cas.CAS, java.io.InputStream);0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.createEmptyCAS(org.apache.uima.resource.metadata.TypeSystemDescription);1.0
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.createTypeSystemDescription(java.io.InputStream);1.0
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.<init>(org.apache.uima.cas.CAS, org.apache.uima.cas.Type, org.apache.uima.cas.Type);0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.AnnotationIterator.hasNext();0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.AnnotationIterator.iterator();0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.AnnotationIterator.next();0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.hasNext();0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.iterator();0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.next();0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationIteratorPair.getSubIterator();0.9999940991401672
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.deserializeXmiCAS(org.apache.uima.cas.CAS, java.io.InputStream);0.9999940991401672
opennlp.tools.langdetect.LanguageDetectorCrossValidatorTest.evaluate();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998465776443481
opennlp.tools.postag.POSDictionaryTest.testCaseSensitiveDictionary();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.hashCode();1.0
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.equals(java.lang.Object);0.9999940991401672
opennlp.tools.postag.POSDictionaryTest.testLoadingDictionaryWithoutCaseAttribute();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.postag.POSDictionaryTest.testCaseInsensitiveDictionary();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.put(java.lang.String, java.lang.String[]);1.0
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.equals(java.lang.Object);0.9999940991401672
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.<init>();0.9999586939811707
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.<init>(boolean);0.9999586939811707
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.nicePrint();1.0
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.9998937845230103
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9998583197593689
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getPreds();1.0
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getSentence();1.0
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getTags();1.0
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.equals(java.lang.Object);1.0
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();0.9999881982803345
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getPreds();0.9999291896820068
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getSentence();0.9999291896820068
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getTags();0.9999291896820068
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.util.Span.equals(java.lang.Object);0.9995515942573547
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();1.0
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.9999291896820068
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9998937249183655
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.util.Span.equals(java.lang.Object);0.9995633959770203
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993982911109924
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987089037895203
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getPreds();1.0
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getSentence();1.0
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getTags();1.0
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.9999881982803345
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9999527335166931
opennlp.tools.chunker.ChunkSampleTest.testEquals();opennlp.tools.chunker.ChunkSample.equals(java.lang.Object);1.0
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>);1.0
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ChunkSampleStream.read();1.0
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ParseSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999881982803345
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getPreds();0.9999173879623413
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getSentence();0.9999173879623413
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getTags();0.9999173879623413
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998701214790344
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.FilterObjectStream.close();0.9998111128807068
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSampleStream.read();1.0
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String);0.999994158744812
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String, java.nio.charset.Charset);0.999994158744812
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.getPreds();0.9999233484268188
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.getSentence();0.9999233484268188
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSample.getTags();0.9999233484268188
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.util.FilterObjectStream.close();0.9998170733451843
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995044469833374
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.util.PlainTextByLineStream.reset();0.9995044469833374
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994867444038391
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.chunker.ChunkerEvaluator.getFMeasure();1.0
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.cmdline.chunker.ChunkEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.chunker.ChunkerEvaluator.<init>(opennlp.tools.chunker.Chunker, opennlp.tools.chunker.ChunkerEvaluationMonitor[]);0.999994158744812
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.chunker.DummyChunker.<init>(opennlp.tools.chunker.DummyChunkSampleStream);0.999994158744812
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.chunker.DummyChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean);0.9999882578849792
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9999646544456482
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.9999292492866516
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9999292492866516
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996165037155151
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994926452636719
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.PlainTextByLineStream.reset();0.9994926452636719
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994749426841736
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.<init>();1.0
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.Stats.<init>(opennlp.tools.cmdline.DetailedFMeasureListener);1.0
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.createReport(java.util.Locale);1.0
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.chunker.ChunkerDetailedFMeasureListener.<init>();1.0
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.chunker.ChunkerEvaluator.<init>(opennlp.tools.chunker.Chunker, opennlp.tools.chunker.ChunkerEvaluationMonitor[]);0.9999881982803345
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.chunker.DummyChunker.<init>(opennlp.tools.chunker.DummyChunkSampleStream);0.9999881982803345
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.chunker.DummyChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean);0.9999822974205017
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9999586939811707
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.eval.FMeasure.<init>();0.999899685382843
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998937845230103
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996105432510376
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.formats.ResourceAsStreamFactory.createInputStream();0.9996105432510376
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9994866847991943
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.PlainTextByLineStream.reset();0.9994866847991943
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.DummyChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean);1.0
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.DummyChunkSampleStream.read();1.0
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.Span.spansToStrings(opennlp.tools.util.Span[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();0.9999823570251465
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.ChunkSample.getSentence();0.9999233484268188
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.FilterObjectStream.close();0.9998170733451843
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996283054351807
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995044469833374
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.PlainTextByLineStream.reset();0.9995044469833374
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994867444038391
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.cmdline.CLITest.testMainHelpMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFail();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCr();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCr();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.9999704957008362
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineLf();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.9999704957008362
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCrLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCrLf();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.9999704957008362
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFilter();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.formats.brat.BratDocumentParser.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.tokenize.Tokenizer);1.0
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.formats.brat.BratDocumentParser.parse(opennlp.tools.formats.brat.BratDocument);0.9999822974205017
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.formats.brat.BratDocumentParser.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.tokenize.Tokenizer, java.util.Set<java.lang.String>);0.999976396560669
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.formats.brat.BratDocument.parseDocument(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream, java.io.InputStream);0.9999704957008362
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.9999586939811707
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999527931213379
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.namefind.NameSample.getNames();0.9997049570083618
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.util.Span.getEnd();0.998720645904541
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.util.Span.getStart();0.9987030029296875
opennlp.tools.formats.brat.BratNameSampleStreamTest.readNoOverlap();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.tokenize.SimpleTokenizer.<init>();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.9999587535858154
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.tokenize.AbstractTokenizer.<init>();0.9999174475669861
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.999569296836853
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.util.Span.getEnd();0.9987266063690186
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.util.Span.getStart();0.998708963394165
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.create(java.lang.String, java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);1.0
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerME.train(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, opennlp.tools.tokenize.TokenizerFactory, opennlp.tools.util.TrainingParameters);0.9999822974205017
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999704957008362
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);0.9999704957008362
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996341466903687
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9995810389518738
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995810389518738
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995102882385254
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.9995102882385254
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994925856590271
opennlp.tools.namefind.NameSampleTest.testMissingType();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.getTags();0.9999764561653137
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.FilterObjectStream.reset();1.0
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.9999823570251465
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.CollectionObjectStream.reset();0.9999823570251465
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.WordTagSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.999970555305481
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.WordTagSampleStream.read();0.999970555305481
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.POSSample.getTags();0.999876081943512
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.POSSample.getSentence();0.9998701810836792
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.FilterObjectStream.close();0.9998288750648499
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994985461235046
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.DefaultTokenContextGenerator.<init>();1.0
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.TokSpanEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, boolean);1.0
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.TokSpanEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.tokenize.TokenSample>, boolean, opennlp.tools.tokenize.TokenContextGenerator);1.0
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.lang.Factory.getAlphanumeric(java.lang.String);0.9999645948410034
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.lang.Factory.<init>();0.9999586939811707
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.util.AbstractEventStream.close();0.9999586939811707
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.DefaultTokenContextGenerator.<init>(java.util.Set<java.lang.String>);0.9999468922615051
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999468922615051
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);0.9999468922615051
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998583197593689
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9996695518493652
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.util.AbstractEventStream.read();0.9996695518493652
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.ml.model.Event.getOutcome();0.999333381652832
opennlp.tools.tokenize.SimpleTokenizerTest.testWordDotTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotation.toString();1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.SpanAnnotation.toString();1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotationStream.read();0.9999646544456482
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999587535858154
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String, java.nio.charset.Charset);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9998996257781982
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.namefind.NameSampleDataStream.read();0.9998996257781982
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.util.FilterObjectStream.close();0.9998229146003723
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.999805212020874
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995102882385254
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.util.PlainTextByLineStream.reset();0.9995102882385254
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994925856590271
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(java.lang.CharSequence, int);1.0
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.<init>(java.util.Set<java.lang.String>, char[]);0.9999940991401672
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9996105432510376
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.util.Span.getEnd();0.9987677931785583
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.util.Span.getStart();0.9987501502037048
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.read();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9999822974205017
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.close();0.9999232888221741
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995929002761841
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSampleDataStream.read();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.util.FilterObjectStream.close();0.9999232888221741
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9997344613075256
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.util.Span.equals(java.lang.Object);0.9996519088745117
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9996106028556824
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.util.PlainTextByLineStream.reset();0.9996106028556824
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995929002761841
opennlp.tools.namefind.NameSampleTest.testTypeWithSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.postag.POSTaggerMETest.testBuildNGramDictionary();opennlp.tools.postag.POSTaggerME.buildNGramDictionary(opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, int);1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.RelationAnnotation.toString();1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.SpanAnnotation.toString();0.9999940991401672
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.BratAnnotationStream.read();0.9999586939811707
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999527931213379
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getAddictionalContext();1.0
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getTags();0.9999291300773621
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getSentence();0.9999232292175293
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9996047019958496
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.equals(java.lang.Object);0.9995693564414978
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.getStart();0.9987443089485168
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.cmdline.sentdetect.SentenceEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.sentdetect.SentenceDetectorEvaluator.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.sentdetect.SentenceDetectorEvaluationMonitor[]);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.sentdetect.SentenceDetectorEvaluator.getFMeasure();1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999469518661499
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.getSentence();0.999970555305481
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.sentdetect.lang.Factory.createEndOfSentenceScanner(java.lang.String);1.0
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.sentdetect.lang.Factory.createSentenceContextGenerator(java.lang.String);1.0
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.sentdetect.lang.Factory.<init>();0.9999704957008362
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.sentdetect.SDEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.sentdetect.SentenceSample>, opennlp.tools.sentdetect.SDContextGenerator, opennlp.tools.sentdetect.EndOfSentenceScanner);0.9999645948410034
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.sentdetect.SentenceSample.<init>(java.lang.CharSequence, opennlp.tools.util.Span[]);0.9999232888221741
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998583197593689
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9996695518493652
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.util.AbstractEventStream.read();0.9996695518493652
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.ml.model.Event.getOutcome();0.999333381652832
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.util.Span.<init>(int, int);0.9990151524543762
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.util.Span.getEnd();0.998720645904541
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986735582351685
opennlp.tools.tokenize.SimpleTokenizerTest.testWordNumericTokeniztation();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testEquals();opennlp.tools.postag.POSSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9996047019958496
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.util.Span.equals(java.lang.Object);0.9995693564414978
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.util.Span.getStart();0.9987443089485168
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar2();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSampleStream.read();1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9999173879623413
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9999114871025085
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.999410092830658
opennlp.tools.formats.muc.SgmlParserTest.testParse1();null.<init>(opennlp.tools.formats.muc.SgmlParserTest);1.0
opennlp.tools.formats.muc.SgmlParserTest.testParse1();opennlp.tools.formats.muc.SgmlParser.<init>();1.0
opennlp.tools.formats.muc.SgmlParserTest.testParse1();opennlp.tools.formats.muc.SgmlParser.ContentHandler.<init>();1.0
opennlp.tools.formats.muc.SgmlParserTest.testParse1();opennlp.tools.formats.muc.SgmlParser.parse(java.io.Reader, opennlp.tools.formats.muc.SgmlParser$ContentHandler);1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.DummyFactory.MyContectGenerator.getContext(java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.DummyFactory.getContextGenerator();1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.9999586939811707
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.tokenize.SimpleTokenizer.<init>();1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>(opennlp.tools.tokenize.Tokenizer);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.tokenize.AbstractTokenizer.<init>();0.9999174475669861
opennlp.tools.namefind.NameSampleTest.testNestedNameSpans();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.tokenize.WhitespaceTokenizerTest.testTokenizationOfStringWithoutTokens();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSampleStream.read();1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.getText();0.9999173879623413
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9999173879623413
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9999114871025085
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.FilterObjectStream.close();0.9998524785041809
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.999410092830658
opennlp.tools.postag.POSSampleTest.testParse();opennlp.tools.postag.POSSample.toString();1.0
opennlp.tools.postag.POSSampleTest.testParse();opennlp.tools.postag.POSSample.parse(java.lang.String);0.999876081943512
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.EmptyLinePreprocessorStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.sentdetect.SentenceSample>, opennlp.tools.sentdetect.SentenceDetectorFactory, opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.init(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.999994158744812
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.9997109174728394
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9996401071548462
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9995869994163513
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995869994163513
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995162487030029
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.9995162487030029
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994985461235046
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getAnnotation(java.lang.String);1.0
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getAnnotations();0.9999823570251465
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getId();0.9999823570251465
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getText();0.9999823570251465
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.parseDocument(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream, java.io.InputStream);0.9999764561653137
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999587535858154
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9996047019958496
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.util.Span.equals(java.lang.Object);0.9995693564414978
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.util.Span.getStart();0.9987443089485168
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.equals(java.lang.Object);0.999994158744812
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);0.9998642802238464
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSampleDataStream.read();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.FilterObjectStream.close();0.9999232888221741
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9997344613075256
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.equals(java.lang.Object);0.9996519088745117
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9996106028556824
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.PlainTextByLineStream.reset();0.9996106028556824
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995929002761841
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994868040084839
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.getType();0.99940425157547
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987973570823669
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9996047019958496
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.equals(java.lang.Object);0.9995693564414978
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.getStart();0.9987443089485168
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9996105432510376
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.util.Span.getEnd();0.9987677931785583
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.util.Span.getStart();0.9987501502037048
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.trim(java.lang.CharSequence);1.0
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.9994218945503235
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.<init>(int, int);0.9990800619125366
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987384676933289
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.cmdline.postag.POSEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.postag.POSEvaluator.<init>(opennlp.tools.postag.POSTagger, opennlp.tools.postag.POSTaggerEvaluationMonitor[]);1.0
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.postag.POSEvaluator.getWordAccuracy();1.0
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Mean.<init>();0.9999764561653137
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.9996047019958496
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.equals(java.lang.Object);0.9995693564414978
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.getStart();0.9987443089485168
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSampleTypeFilter.read();1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSample.getNames();0.9997167587280273
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.util.Span.getType();0.9992921352386475
opennlp.tools.util.StringUtilTest.testNoBreakSpace();opennlp.tools.util.StringUtil.isWhitespace(int);1.0
opennlp.tools.util.StringUtilTest.testNoBreakSpace();opennlp.tools.util.StringUtil.isWhitespace(char);0.9993392825126648
opennlp.tools.postag.POSSampleTest.testParseWithError();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSampleEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>);1.0
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.DefaultPOSContextGenerator.<init>(int, opennlp.tools.dictionary.Dictionary);0.9999940991401672
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.DefaultPOSContextGenerator.<init>(opennlp.tools.dictionary.Dictionary);0.9999940991401672
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.AbstractEventStream.close();0.9999586939811707
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSampleEventStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, opennlp.tools.postag.POSContextGenerator);0.9999350905418396
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.postag.POSSample.parse(java.lang.String);0.9998701214790344
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998583197593689
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9996695518493652
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.AbstractEventStream.read();0.9996695518493652
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.ml.model.Event.getOutcome();0.999333381652832
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSampleDataStream.read();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.FilterObjectStream.close();0.9999232888221741
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9997344613075256
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.Span.equals(java.lang.Object);0.9996519088745117
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9996106028556824
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.PlainTextByLineStream.reset();0.9996106028556824
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995929002761841
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994868040084839
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987973570823669
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar1();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.getSentence();0.9998879432678223
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.cmdline.sentdetect.SentenceEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.sentdetect.SentenceDetectorEvaluator.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.sentdetect.SentenceDetectorEvaluationMonitor[]);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.sentdetect.SentenceDetectorEvaluator.getFMeasure();1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999469518661499
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.tokenize.WhitespaceTokenizerTest.testOneToken();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithNewLine();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.tokenize.SimpleTokenizerTest.testWhitespaceTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>(opennlp.tools.tokenize.Tokenizer);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.cmdline.postag.POSEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.postag.POSEvaluator.<init>(opennlp.tools.postag.POSTagger, opennlp.tools.postag.POSTaggerEvaluationMonitor[]);1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.postag.POSEvaluator.getWordAccuracy();1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Mean.<init>();0.9999764561653137
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSampleStream.read();1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.getText();0.9999173879623413
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9999173879623413
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9999114871025085
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.Span.equals(java.lang.Object);0.9995811581611633
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995221495628357
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.999410092830658
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.Span.<init>(int, int);0.9990682601928711
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987266659736633
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.BratDocument.getAnnotation(java.lang.String);1.0
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.SpanAnnotation.getSpans();0.9999823570251465
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.BratDocument.parseDocument(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream, java.io.InputStream);0.9999764561653137
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999587535858154
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.util.Span.getEnd();0.9987266063690186
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.util.Span.getStart();0.998708963394165
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSampleTypeFilter.read();1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSample.getNames();0.9997167587280273
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.util.Span.getType();0.9992921352386475
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(java.lang.CharSequence, int);1.0
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.<init>(java.util.Set<java.lang.String>, char[]);0.9999940991401672
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.getNames();0.9998820424079895
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.util.Span.getType();0.9994573593139648
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.read();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9999822974205017
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.close();0.9999232888221741
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9995929002761841
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.cmdline.namefind.NameEvaluationErrorListener.<init>();1.0
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.DictionaryNameFinder.<init>(opennlp.tools.dictionary.Dictionary);1.0
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.DictionaryNameFinder.<init>(opennlp.tools.dictionary.Dictionary, java.lang.String);1.0
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.TokenNameFinderEvaluator.<init>(opennlp.tools.namefind.TokenNameFinder, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.999976396560669
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.namefind.TokenNameFinderEvaluator.getFMeasure();0.999976396560669
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9999586939811707
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999409914016724
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9999232888221741
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999114871025085
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.<init>();0.999899685382843
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998937845230103
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.FilterObjectStream.close();0.9997993111610413
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSampleTypeFilter.read();1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSample.getNames();0.9997167587280273
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.trim(java.lang.CharSequence);1.0
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.9994218945503235
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.<init>(int, int);0.9990800619125366
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987384676933289
opennlp.tools.tokenize.WhitespaceTokenizerTest.testWhitespaceTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.tokenize.SimpleTokenizerTest.testWordWithOtherTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorME.predictLanguage(java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorFactory.getContextGenerator();0.9999881982803345
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorME.<init>(opennlp.tools.langdetect.LanguageDetectorModel);0.9999881982803345
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.9999704957008362
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.Language.getLang();0.9999409914016724
opennlp.tools.langdetect.LanguageSampleTest.testHash();opennlp.tools.langdetect.LanguageSample.hashCode();1.0
opennlp.tools.langdetect.LanguageSampleTest.testHash();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.9999468922615051
opennlp.tools.langdetect.LanguageSampleTest.testHash();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999232888221741
opennlp.tools.langdetect.LanguageSampleTest.testHash();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.999899685382843
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.AbstractModel.equals(java.lang.Object);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, boolean);0.9999940991401672
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.9999881982803345
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.9999822974205017
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.9999822974205017
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.9999586939811707
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999350905418396
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999114871025085
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998819231987
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994748830795288
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.AbstractTrainer.<init>();0.9994748830795288
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.GradientComputeTask.call();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.NegLLComputeTask.call();1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.GenericModelWriter.close();1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.AbstractModel.equals(java.lang.Object);0.9999881982803345
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.999976396560669
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.9999704957008362
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.9999704957008362
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.maxent.quasinewton.QNModel.eval(java.lang.String[]);0.9999586939811707
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.9999468922615051
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999232888221741
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.999899685382843
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998701214790344
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.GenericModelWriter.<init>(opennlp.tools.ml.model.AbstractModel, java.io.DataOutputStream);0.9998524188995361
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.GenericModelWriter.init(opennlp.tools.ml.model.AbstractModel, java.io.DataOutputStream);0.9998524188995361
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.GenericModelWriter.persist();0.9998524188995361
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.GenericModelReader.<init>(opennlp.tools.ml.model.DataReader);0.9998347163200378
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.AbstractModelReader.getModel();0.9998288154602051
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.AbstractModelReader.<init>(opennlp.tools.ml.model.DataReader);0.9998229146003723
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.AbstractModelWriter.<init>();0.999805212020874
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.BinaryFileDataReader.<init>(java.io.InputStream);0.999805212020874
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994630813598633
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.AbstractTrainer.<init>();0.9994630813598633
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, boolean);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.999994158744812
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.9999882578849792
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.9999882578849792
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNModel.eval(java.lang.String[]);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.9999646544456482
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994808435440063
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.AbstractTrainer.<init>();0.9994808435440063
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(boolean);1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, boolean);0.9999882578849792
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.9999823570251465
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9998997449874878
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9998878836631775
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.model.TwoPassDataIndexer.<init>();0.9995869994163513
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9995869994163513
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.9995633959770203
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9995633959770203
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.util.TrainingParameters.<init>();0.9995633959770203
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995633959770203
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995044469833374
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994690418243408
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.AbstractTrainer.<init>();0.9994690418243408
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9999291896820068
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999173283576965
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996872544288635
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996400475502014
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996223449707031
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.util.TrainingParameters.<init>();0.9995928406715393
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995928406715393
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9999291896820068
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999173283576965
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9996872544288635
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996400475502014
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996223449707031
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.util.TrainingParameters.<init>();0.9995928406715393
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995928406715393
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9999881386756897
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9997580051422119
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9997107982635498
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996930956840515
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.util.TrainingParameters.<init>();0.9996635913848877
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(boolean);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, boolean);0.9999882578849792
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.9999823570251465
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999292492866516
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999056458473206
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.999876081943512
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.AbstractEventTrainer.<init>();0.9994690418243408
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.AbstractTrainer.<init>();0.9994690418243408
opennlp.tools.util.featuregen.CharacterNgramFeatureGeneratorTest.testDefault();opennlp.tools.util.featuregen.CharacterNgramFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.CharacterNgramFeatureGeneratorTest.testDefault();opennlp.tools.util.featuregen.CharacterNgramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.util.featuregen.CharacterNgramFeatureGeneratorTest.testDefault();opennlp.tools.util.featuregen.CharacterNgramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.<init>(opennlp.tools.tokenize.Detokenizer, java.lang.String[]);1.0
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.isMergeToLeft(opennlp.tools.tokenize.Detokenizer$DetokenizationOperation);1.0
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.isMergeToRight(opennlp.tools.tokenize.Detokenizer$DetokenizationOperation);1.0
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.toString();0.9999881982803345
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);0.9999822974205017
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.getText();0.9998642206192017
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9998642206192017
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.util.Span.equals(java.lang.Object);0.9995279908180237
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.util.Span.<init>(int, int);0.9990151524543762
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986735582351685
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[], java.lang.String);1.0
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileMissingCount();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileMissingCount();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.9998878836631775
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.serialize(java.io.OutputStream);1.0
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.<init>(java.io.InputStream);0.9999822974205017
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.init(java.io.InputStream);0.9999822974205017
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.create(java.lang.String, java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getAbbreviationDictionary();0.9999940991401672
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getEndOfSentenceScanner();0.9999940991401672
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getSDContextGenerator();0.9999940991401672
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();0.9999645948410034
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.<init>(java.io.InputStream, int);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.999976396560669
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);0.9999704957008362
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9999527931213379
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.9998583197593689
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileNotANumber();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileNotANumber();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.9998878836631775
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.serialize(java.io.OutputStream);1.0
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.numberOfGrams();0.9999940991401672
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.dictionary.Dictionary.getMinTokenCount();0.9999822974205017
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.dictionary.Dictionary.size();0.999976396560669
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);0.9999704957008362
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.toDictionary(boolean);0.9999645948410034
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.9999291896820068
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.size();0.9998937845230103
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.9998583197593689
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.Dictionary.getMinTokenCount();1.0
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.Dictionary.size();0.999994158744812
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);0.9999882578849792
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.ngram.NGramModel.toDictionary(boolean);0.9999823570251465
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.9999469518661499
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.999876081943512
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.equals(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.serialize(java.io.OutputStream);0.9999881982803345
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.<init>(java.io.InputStream);0.999976396560669
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.9998701214790344
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9997757077217102
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995161890983582
opennlp.tools.postag.POSDictionaryTest.testToString();opennlp.tools.postag.POSDictionary.toString();1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString2();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[], java.lang.String);1.0
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.close();1.0
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.999994158744812
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.CollectionObjectStream.reset();0.999994158744812
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9997109174728394
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.read();0.9997109174728394
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.AbstractEventStream.close();1.0
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.999994158744812
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.CollectionObjectStream.reset();0.999994158744812
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.AbstractEventStream.<init>(opennlp.tools.util.ObjectStream<T>);0.9997109174728394
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.AbstractEventStream.read();0.9997109174728394
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.chunker.ChunkerModel.<init>(java.io.InputStream);1.0
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.9998760223388672
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);0.9998760223388672
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.9997698068618774
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratDocumentStream.<init>(opennlp.tools.formats.brat.AnnotationConfiguration, java.io.File, boolean, java.io.FileFilter);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratDocumentStream.reset();1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratNameSampleStream.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.tokenize.Tokenizer, opennlp.tools.util.ObjectStream<opennlp.tools.formats.brat.BratDocument>, java.util.Set<java.lang.String>);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.SegmenterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratDocumentParser.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.tokenize.Tokenizer, java.util.Set<java.lang.String>);0.999994158744812
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.9999764561653137
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.999970555305481
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994867444038391
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TestSampleStream.read();0.999994158744812
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.getTestSampleStream();0.999994158744812
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.read();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.next();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.9999764561653137
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.999970555305481
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.CollectionObjectStream.reset();0.999970555305481
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.read();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.next();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.9999764561653137
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.999970555305481
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.CollectionObjectStream.reset();0.999970555305481
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.TestSampleStream.read();0.999994158744812
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.getTestSampleStream();0.999994158744812
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.read();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.next();0.9999823570251465
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.9999764561653137
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.999970555305481
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.CollectionObjectStream.reset();0.999970555305481
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ngram.NGramUtilsTest.testGetNGrams();opennlp.tools.ngram.NGramUtils.getNGrams(opennlp.tools.util.StringList, int);1.0
opennlp.tools.ngram.NGramUtilsTest.testGetNGrams();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995043873786926
opennlp.tools.postag.DefaultPOSContextGeneratorTest.dictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.<init>(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGeneratorTest.noDictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.iterator();0.9999940991401672
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.hasNext();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.next();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.util.StringListTest.testCompareToIgnoreCase();opennlp.tools.util.StringList.<init>(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.util.Span.getEnd();0.9987677931785583
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.util.Span.getStart();0.9987501502037048
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.ngram.NGramModel.toDictionary();1.0
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.dictionary.Dictionary.getMinTokenCount();0.9999822974205017
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.dictionary.Dictionary.size();0.999976396560669
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.9999291896820068
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);0.9998937845230103
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.ngram.NGramModel.<init>();0.9998170137405396
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995043873786926
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();null.contains(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999468922615051
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998524785041809
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999114871025085
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();null.hasNext();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();null.next();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998170733451843
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testLookup();null.contains(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999468922615051
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998524785041809
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.util.Span.getEnd();0.9987677931785583
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.util.Span.getStart();0.9987501502037048
opennlp.tools.dictionary.DictionaryTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testLookup();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9997404217720032
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.util.Span.getEnd();0.9987677931785583
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.util.Span.getStart();0.9987501502037048
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookup();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9997404217720032
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.iterator();0.9999940991401672
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.hasNext();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.next();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.dictionary.DictionaryTest.testEquals();opennlp.tools.dictionary.Dictionary.equals(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryTest.testEquals();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9997757077217102
opennlp.tools.dictionary.DictionaryTest.testEquals();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995161890983582
opennlp.tools.dictionary.DictionaryTest.testParseOneEntryPerLine();opennlp.tools.dictionary.Dictionary.parseOneEntryPerLine(java.io.Reader);1.0
opennlp.tools.dictionary.DictionaryTest.testParseOneEntryPerLine();opennlp.tools.dictionary.Dictionary.size();0.999976396560669
opennlp.tools.dictionary.DictionaryTest.testParseOneEntryPerLine();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995043873786926
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.postag.DefaultPOSContextGeneratorTest.multithreading();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseLongerEntry();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseLongerEntry();opennlp.tools.util.Span.length();0.9998642206192017
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.<init>();1.0
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.add(java.lang.String);1.0
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.build();1.0
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.<init>();0.9999882578849792
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.util.TrainingParameters.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999764561653137
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.999799370765686
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getPredCounts();0.9997462630271912
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.9995751976966858
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9995751976966858
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getValues();0.9995516538619995
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.<init>();1.0
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.add(java.lang.String);1.0
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.build();1.0
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.util.TrainingParameters.<init>(java.util.Map<java.lang.String, java.lang.String>);0.9999764561653137
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.999799370765686
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getPredCounts();0.9997462630271912
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.TwoPassDataIndexer.<init>();0.9995988011360168
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.<init>();0.9995751976966858
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.init(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9995751976966858
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getValues();0.9995516538619995
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995162487030029
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.SimpleEventStreamBuilder.<init>();1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.SimpleEventStreamBuilder.add(java.lang.String);1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.SimpleEventStreamBuilder.build();1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999292492866516
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.999799370765686
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getPredCounts();0.9997462630271912
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.<init>();1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.add(java.lang.String);1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.SimpleEventStreamBuilder.build();1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999292492866516
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.999799370765686
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getPredCounts();0.9997462630271912
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>();1.0
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.<init>(int, opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999704957008362
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.getContext(int, java.lang.String[], java.lang.String[], java.lang.Object[]);0.9999704957008362
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);0.9998819231987
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>();1.0
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.<init>(int, opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.9999704957008362
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.getContext(int, java.lang.String[], java.lang.String[], java.lang.Object[]);0.9999704957008362
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);0.9998819231987
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.Cache.<init>(int);0.9998760223388672
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.getSegments();1.0
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.parse(java.io.InputStream);1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testLemmasAsArray();opennlp.tools.lemmatizer.LemmatizerME.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.LanguageSample.toString();1.0
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.9999468922615051
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.Language.getLang();0.9999291896820068
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999232888221741
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.999899685382843
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.LanguageDetectorME.predictLanguages(java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.LanguageDetectorFactory.getContextGenerator();0.999994158744812
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.LanguageDetectorME.<init>(opennlp.tools.langdetect.LanguageDetectorModel);0.999994158744812
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.9999764561653137
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.Language.getLang();0.9999469518661499
opennlp.tools.langdetect.LanguageTest.emptyLanguage();opennlp.tools.langdetect.Language.<init>(java.lang.String);1.0
opennlp.tools.langdetect.LanguageTest.emptyLanguage();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999764561653137
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.getConfidence();1.0
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.getLang();0.999970555305481
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999646544456482
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999410510063171
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.LanguageSample.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.9999646544456482
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999410510063171
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999174475669861
opennlp.tools.langdetect.LanguageTest.testHash();opennlp.tools.langdetect.Language.hashCode();1.0
opennlp.tools.langdetect.LanguageTest.testHash();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999292492866516
opennlp.tools.langdetect.LanguageTest.testHash();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999056458473206
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.Language.equals(java.lang.Object);0.9999882578849792
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.getContext();0.9999882578849792
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.getLanguage();0.9999882578849792
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.9999646544456482
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999410510063171
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999174475669861
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999764561653137
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999528527259827
opennlp.tools.langdetect.LanguageTest.nonEmptyConfidence();opennlp.tools.langdetect.Language.getConfidence();1.0
opennlp.tools.langdetect.LanguageTest.nonEmptyConfidence();opennlp.tools.langdetect.Language.getLang();0.999970555305481
opennlp.tools.langdetect.LanguageTest.nonEmptyConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999410510063171
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.toString();1.0
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999232888221741
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.999899685382843
opennlp.tools.langdetect.LanguageTest.testEquals();opennlp.tools.langdetect.Language.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageTest.testEquals();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999528527259827
opennlp.tools.langdetect.LanguageTest.testEquals();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999292492866516
opennlp.tools.langdetect.LanguageTest.emptyLanguageConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();null.<init>(opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();null.accept(java.io.File);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.<init>(java.io.File, int, int);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.read();1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.reset();1.0
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.Language.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.LanguageSample.getContext();1.0
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.LanguageSample.getLanguage();1.0
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);0.9999764561653137
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9999528527259827
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9999292492866516
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();null.reset();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.defaultParams();0.9999232888221741
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();null.close();0.9998937249183655
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.999805212020874
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.999675452709198
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9996223449707031
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996105432510376
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9996046423912048
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995810389518738
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994513392448425
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994218349456787
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.chunker.ChunkerME.topKSequences(java.lang.String[], java.lang.String[], double);1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.util.Sequence.getProbs();0.9999232888221741
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.util.Sequence.getOutcomes();0.9998583197593689
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.chunker.ChunkerME.chunkAsSpans(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.util.Span.toString();0.9999645948410034
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.util.Span.equals(java.lang.Object);0.9995279908180237
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993628859519958
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986735582351685
opennlp.tools.langdetect.LanguageDetectorMETest.testSupportedLanguages();opennlp.tools.langdetect.LanguageDetectorME.getSupportedLanguages();1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testSupportedLanguages();opennlp.tools.langdetect.LanguageDetectorFactory.getContextGenerator();0.999976396560669
opennlp.tools.langdetect.LanguageDetectorMETest.testSupportedLanguages();opennlp.tools.langdetect.LanguageDetectorME.<init>(opennlp.tools.langdetect.LanguageDetectorModel);0.999976396560669
opennlp.tools.langdetect.LanguageDetectorMETest.testSupportedLanguages();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();0.9999586939811707
opennlp.tools.chunker.ChunkerMETest.testChunkAsArray();opennlp.tools.chunker.ChunkerME.chunk(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbArray();opennlp.tools.chunker.ChunkerME.topKSequences(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbArray();opennlp.tools.util.Sequence.getProbs();0.9999232888221741
opennlp.tools.chunker.ChunkerMETest.testTokenProbArray();opennlp.tools.util.Sequence.getOutcomes();0.9998583197593689
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleList();opennlp.tools.chunker.ChunkSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleList();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9998583197593689
opennlp.tools.cmdline.CLITest.testUnknownFileMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.cmdline.TerminateToolExceptionTest.testCreation();opennlp.tools.cmdline.TerminateToolException.<init>(int);1.0
opennlp.tools.cmdline.TerminateToolExceptionTest.testCreation();opennlp.tools.cmdline.TerminateToolException.getCode();0.9999822974205017
opennlp.tools.cmdline.TerminateToolExceptionTest.testCreation();opennlp.tools.cmdline.TerminateToolException.<init>(int, java.lang.String);0.999976396560669
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.namefind.TokenNameFinderTool.run(java.lang.String[]);1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.BasicCmdLineTool.<init>();0.9999940991401672
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.CmdLineTool.<init>();0.9999940991401672
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();0.9999940991401672
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999292492866516
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999292492866516
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getDimension();0.9999823570251465
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999646544456482
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9999114871025085
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994750022888184
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994691014289856
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994395971298218
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999646544456482
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9999114871025085
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994750022888184
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994691014289856
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994395971298218
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999292492866516
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999292492866516
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999174475669861
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998878836631775
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994572997093201
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994513988494873
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994454979896545
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994159936904907
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999646544456482
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9999114871025085
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994750022888184
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994691014289856
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994395971298218
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String, java.lang.String);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);0.9999764561653137
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999646544456482
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();0.9999528527259827
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.<init>(opennlp.tools.ml.model.DataIndexer);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999410510063171
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9999114871025085
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.AbstractDataIndexer.getNumTimesEventsSeen();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeList();0.9994809031486511
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.AbstractDataIndexer.getContexts();0.9994750022888184
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994691014289856
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994395971298218
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.tokenizer.TokenEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.TokenizerEvaluator.<init>(opennlp.tools.tokenize.Tokenizer, opennlp.tools.tokenize.TokenizerEvaluationMonitor[]);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.TokenizerEvaluator.getFMeasure();1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999469518661499
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.formats.ad.ADTokenSampleStreamTest.testSentences();opennlp.tools.tokenize.TokenSample.getText();1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.DetokenizerEvaluator.<init>(opennlp.tools.tokenize.Detokenizer, opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener[]);1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.DetokenizerEvaluator.getFMeasure();1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999469518661499
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.tokenize.TokenSampleTest.testEquals();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);1.0
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.<init>(java.lang.String, opennlp.tools.util.Span[]);1.0
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.getText();0.999994158744812
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.999994158744812
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.util.Span.equals(java.lang.Object);0.9996578693389893
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.util.Span.<init>(int, int);0.999144971370697
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.util.Span.getEnd();0.998850405216217
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.util.Span.getStart();0.9988327622413635
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9988033175468445
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.DetokenizerEvaluator.<init>(opennlp.tools.tokenize.Detokenizer, opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener[]);1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.DetokenizerEvaluator.getFMeasure();1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999469518661499
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.tokenize.TokenSampleTest.testTokenSampleSerDe();opennlp.tools.tokenize.TokenSample.getText();1.0
opennlp.tools.tokenize.TokenSampleTest.testTokenSampleSerDe();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenSampleTest.testTokenSampleSerDe();opennlp.tools.util.Span.equals(java.lang.Object);0.9996637105941772
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.tokenizer.TokenEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.TokenizerEvaluator.<init>(opennlp.tools.tokenize.Tokenizer, opennlp.tools.tokenize.TokenizerEvaluationMonitor[]);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.TokenizerEvaluator.getFMeasure();1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999469518661499
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999174475669861
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.<init>();0.9999056458473206
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9998997449874878
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9998997449874878
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.startsWith(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.<init>(int, int);0.9990151524543762
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986735582351685
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getAlphaNumOpt();1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getCutoff();1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getEncoding();1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getIterations();1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.9999645948410034
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.9999822974205017
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9999822974205017
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.<init>();0.9999586939811707
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.9999822974205017
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9999822974205017
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.updateScores(java.lang.Object[], java.lang.Object[]);0.9999704957008362
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.<init>();0.9999586939811707
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.cmdline.namefind.NameEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.TokenNameFinderEvaluator.<init>(opennlp.tools.namefind.TokenNameFinder, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.9999881982803345
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.TokenNameFinderEvaluator.getFMeasure();0.9999881982803345
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9999527931213379
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9999232888221741
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9999114871025085
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9999055862426758
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.evaluateSample(T);0.9999055862426758
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.NameSample.getNames();0.9997167587280273
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.mergeInto(opennlp.tools.util.eval.FMeasure);1.0
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.9999350905418396
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9999350905418396
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.updateScores(java.lang.Object[], java.lang.Object[]);0.9999232888221741
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.<init>();0.9999114871025085
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.countTruePositives(java.lang.Object[], java.lang.Object[]);0.9999055862426758
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.toString();0.9999999403953552
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.currentVersion();0.9999645948410034
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.equals(java.lang.Object);0.9999645948410034
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.<init>(int, int, int, boolean);0.9999586939811707
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.parse(java.lang.String);0.9999468922615051
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.equals(java.lang.Object);1.0
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.<init>(int, int, int, boolean);0.9999940991401672
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.parse(java.lang.String);0.9999822974205017
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();null.reset();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();null.close();0.9998937249183655
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9998937249183655
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.999805212020874
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.999675452709198
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9996164441108704
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.util.TrainingParameters.<init>();0.9995810389518738
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995810389518738
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9995220899581909
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.9994513392448425
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994218349456787
opennlp.tools.util.featuregen.StringPatternTest.testContainsHyphen();opennlp.tools.util.featuregen.StringPattern.containsHyphen();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsHyphen();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9997758269309998
opennlp.tools.util.featuregen.FeatureGeneratorUtilTest.test();opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(java.lang.String);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomSentence();1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomVocabulary(int);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.<init>();1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.9999764561653137
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999646544456482
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9999587535858154
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.ngram.NGramModel.<init>();0.9998229742050171
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.languagemodel.NGramLanguageModel.<init>();1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999646544456482
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9999587535858154
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.ngram.NGramModel.<init>();0.9998229742050171
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel, int);0.9999940395355225
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.9999881386756897
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.util.Sequence.getOutcomes();0.9999645352363586
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel, int);0.9999940395355225
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.9999881386756897
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.util.Sequence.getOutcomes();0.9999645352363586
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel, int);0.9999940395355225
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.9999881386756897
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.util.Sequence.getOutcomes();0.9999645352363586
opennlp.tools.util.featuregen.StringPatternTest.testIsAllHiragana();opennlp.tools.util.featuregen.StringPattern.isAllHiragana();0.9999999403953552
opennlp.tools.util.featuregen.StringPatternTest.testIsAllHiragana();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9999173879623413
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllKatakana();opennlp.tools.util.featuregen.StringPattern.isAllKatakana();0.9999999403953552
opennlp.tools.util.featuregen.StringPatternTest.testIsAllKatakana();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9999173879623413
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLetters();opennlp.tools.util.featuregen.StringPattern.isAllLetter();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLetters();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9996932148933411
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsComma();opennlp.tools.util.featuregen.StringPattern.containsComma();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsComma();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9997758269309998
opennlp.tools.util.featuregen.StringPatternTest.testIsAllDigit();opennlp.tools.util.featuregen.StringPattern.isAllDigit();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllDigit();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9996872544288635
opennlp.tools.util.featuregen.StringPatternTest.testContainsLetters();opennlp.tools.util.featuregen.StringPattern.containsLetters();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsLetters();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9997758269309998
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999822378158569
opennlp.tools.util.featuregen.StringPatternTest.testIsAllCapitalLetter();opennlp.tools.util.featuregen.StringPattern.isAllCapitalLetter();0.9999999403953552
opennlp.tools.util.featuregen.StringPatternTest.testIsAllCapitalLetter();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9998819828033447
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testGenWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);1.0
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testGenWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999940991401672
opennlp.tools.util.featuregen.StringPatternTest.testContainsDigit();opennlp.tools.util.featuregen.StringPattern.containsDigit();0.9999999403953552
opennlp.tools.util.featuregen.StringPatternTest.testContainsDigit();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9998819828033447
opennlp.tools.util.featuregen.StringPatternTest.testIsInitialCapitalLetter();opennlp.tools.util.featuregen.StringPattern.isInitialCapitalLetter();0.9999999403953552
opennlp.tools.util.featuregen.StringPatternTest.testIsInitialCapitalLetter();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9998819828033447
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testOnlyLetterTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testOnlyLetterTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsPeriod();opennlp.tools.util.featuregen.StringPattern.containsPeriod();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsPeriod();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9997758269309998
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999822378158569
opennlp.tools.util.featuregen.StringPatternTest.testDigits();opennlp.tools.util.featuregen.StringPattern.digits();0.9999999403953552
opennlp.tools.util.featuregen.StringPatternTest.testDigits();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9998819828033447
opennlp.tools.util.featuregen.FeatureGeneratorUtilTest.testJapanese();opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(java.lang.String);1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999822378158569
opennlp.tools.util.featuregen.StringPatternTest.testContainsSlash();opennlp.tools.util.featuregen.StringPattern.containsSlash();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsSlash();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9997758269309998
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testNoWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);1.0
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testNoWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999940991401672
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testNextOfBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testNextOfBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLowerCaseLetter();opennlp.tools.util.featuregen.StringPattern.isAllLowerCaseLetter();0.9999999403953552
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLowerCaseLetter();opennlp.tools.util.featuregen.StringPattern.recognize(java.lang.String);0.9999173879623413
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999822378158569
opennlp.tools.util.StringUtilTest.testIsEmptyWithNullString();opennlp.tools.util.StringUtil.isEmpty(java.lang.CharSequence);1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.formats.Conll03NameSampleStream.LANGUAGE.<init>();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.formats.Conll03NameSampleStream.read();0.999976396560669
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.999781608581543
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.getSentence();0.9997108578681946
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.getNames();0.9997049570083618
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.formats.EvalitaNameSampleStream.LANGUAGE.<init>();1.0
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.formats.EvalitaNameSampleStream.reset();1.0
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.formats.EvalitaNameSampleStream.read();0.9999940991401672
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.namefind.NameSample.equals(java.lang.Object);0.9999527931213379
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSampleWithGermanAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.read();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.formats.Conll03NameSampleStream.read();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.999805212020874
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.getSentence();0.9997344613075256
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.getNames();0.9997285604476929
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.util.Span.getEnd();0.9987441897392273
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.util.Span.getStart();0.9987265467643738
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSampleWithEnglishAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.read();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.formats.Conll02NameSampleStream.read();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9997934103012085
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.getNames();0.9997167587280273
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.formats.Conll02NameSampleStream.read();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9997934103012085
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.getSentence();0.9997226595878601
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.getNames();0.9997167587280273
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.util.Span.getEnd();0.9987324476242065
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.util.Span.getStart();0.998714804649353
opennlp.tools.formats.Conll02NameSampleStreamTest.testReset();opennlp.tools.formats.Conll02NameSampleStream.LANGUAGE.<init>();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testReset();opennlp.tools.formats.Conll02NameSampleStream.reset();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testReset();opennlp.tools.formats.Conll02NameSampleStream.read();0.9999881982803345
opennlp.tools.formats.Conll02NameSampleStreamTest.testReset();opennlp.tools.namefind.NameSample.equals(java.lang.Object);0.9999527931213379
opennlp.tools.util.StringUtilTest.testIsEmpty();opennlp.tools.util.StringUtil.isEmpty(java.lang.CharSequence);1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testReset();opennlp.tools.formats.Conll03NameSampleStream.reset();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testReset();opennlp.tools.formats.Conll03NameSampleStream.read();0.999976396560669
opennlp.tools.formats.Conll03NameSampleStreamTest.testReset();opennlp.tools.namefind.NameSample.equals(java.lang.Object);0.9999527931213379
opennlp.tools.formats.NameFinderCensus90NameStreamTest.testParsingEnglishSample();opennlp.tools.formats.NameFinderCensus90NameStream.read();1.0
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.formats.EvalitaNameSampleStream.read();1.0
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9997875690460205
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.getSentence();0.9997168183326721
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.getNames();0.9997109174728394
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.util.Span.getEnd();0.9987266063690186
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.util.Span.getStart();0.998708963394165
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);0.9999940991401672
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);0.9999940991401672
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);0.9999940991401672
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);0.9999940991401672
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.LetsmtSentence.getNonTokenizedText();1.0
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.LetsmtSentence.getTokens();1.0
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.getSentences();1.0
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.parse(java.io.InputStream);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleArray();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleArray();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9999645352363586
opennlp.tools.chunker.ChunkSampleTest.testToString();opennlp.tools.chunker.ChunkSample.toString();1.0
opennlp.tools.chunker.ChunkSampleTest.testToString();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.9998997449874878
opennlp.tools.chunker.ChunkSampleTest.testToString();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9998642802238464
opennlp.tools.chunker.ChunkSampleTest.testParameterValidation();opennlp.tools.chunker.ChunkSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testParameterValidation();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);0.9999645352363586
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9998524188995361
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998465180397034
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtBeginOfSentence();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtBeginOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9998524188995361
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtBeginOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998465180397034
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9998524188995361
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998465180397034
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtEndOfSentence();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtEndOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9998524188995361
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtEndOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998465180397034
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testForCorrectFeatures();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testForCorrectFeatures();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9998524188995361
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testForCorrectFeatures();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.9998465180397034
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluTagset.<init>();1.0
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getDeprel();0.9999882578849792
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getDeps();0.9999882578849792
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getFeats();0.9999882578849792
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getHead();0.9999882578849792
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getLemma();0.9999882578849792
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getMisc();0.9999882578849792
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getPosTag(opennlp.tools.formats.conllu.ConlluTagset);0.9999882578849792
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getForm();0.9999823570251465
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.<init>(java.lang.String);0.999970555305481
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getId();0.999970555305481
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionaryInsensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionarySensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testNoLemma();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.toString();1.0
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.count();0.9999881982803345
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.<init>();0.9999704957008362
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.add(double);0.9999704957008362
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.mean();0.9999704957008362
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerTrue();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerTrue();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9998289346694946
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998465776443481
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9999999403953552
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998465776443481
opennlp.tools.util.featuregen.GeneratorFactoryTest.testParameters();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9999999403953552
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9999999403953552
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998465776443481
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithCustomGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithCustomGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998465776443481
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.9999704957008362
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998170137405396
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9999999403953552
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998170137405396
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.9999704957008362
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.9998170137405396
opennlp.tools.langdetect.DefaultLanguageDetectorContextGeneratorTest.extractContext();opennlp.tools.langdetect.DefaultLanguageDetectorContextGenerator.getContext(java.lang.CharSequence);1.0
opennlp.tools.langdetect.DefaultLanguageDetectorContextGeneratorTest.extractContext();opennlp.tools.langdetect.DefaultLanguageDetectorContextGenerator.<init>(int, int, opennlp.tools.util.normalizer.CharSequenceNormalizer[]);0.999994158744812
opennlp.tools.langdetect.DefaultLanguageDetectorContextGeneratorTest.extractContext();opennlp.tools.util.normalizer.AggregateCharSequenceNormalizer.<init>(opennlp.tools.util.normalizer.CharSequenceNormalizer[]);0.999994158744812
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.ngram.NGramUtils.calculateTrigramLinearInterpolationProbability(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>, java.lang.Double, java.lang.Double, java.lang.Double);1.0
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995103478431702
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.ngram.NGramUtils.calculateTrigramLinearInterpolationProbability(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>, java.lang.Double, java.lang.Double, java.lang.Double);1.0
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995103478431702
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.clearAdaptiveData();1.0
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.<init>();0.9999587535858154
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999469518661499
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.updateAdaptiveData(java.lang.String[], java.lang.String[]);0.9999469518661499
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();null.<init>(opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();null.accept(java.io.File);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.<init>(java.io.File, int, int);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.read();1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.reset();1.0
opennlp.tools.util.SequenceTest.testToString();opennlp.tools.util.Sequence.toString();1.0
opennlp.tools.util.SequenceTest.testToString();opennlp.tools.util.Sequence.add(java.lang.String, double);0.9999822974205017
opennlp.tools.util.SequenceTest.testToString();opennlp.tools.util.Sequence.<init>();0.9998465180397034
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.<init>(opennlp.tools.util.ObjectStream<byte[]>);1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.read();1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.util.XmlUtil.createSaxParser();0.999994158744812
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.parser.Parse.getTagNodes();0.9999823570251465
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.parser.Parse.getCoveredText();0.9999764561653137
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998642802238464
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.util.FilterObjectStream.close();0.9998052716255188
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994749426841736
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.getTagNodes();1.0
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.getType();0.9999940991401672
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.isPosTag();0.9999940991401672
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999527931213379
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.PosSampleStream.<init>(opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>);1.0
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.PosSampleStream.read();1.0
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ParseSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9999881982803345
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998701214790344
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.getTags();0.9998583197593689
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.getSentence();0.9998524188995361
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.FilterObjectStream.close();0.9998111128807068
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994807839393616
opennlp.tools.dictionary.DictionaryTest.testToString();opennlp.tools.dictionary.Dictionary.toString();1.0
opennlp.tools.dictionary.DictionaryTest.testToString();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9997698664665222
opennlp.tools.dictionary.DictionaryTest.testToString();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995103478431702
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.uima.dictionary.DictionaryResourceImpl.getDictionary();1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.tools.dictionary.Dictionary.toString();0.9999940991401672
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();null.size();0.9999527931213379
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.tools.dictionary.Dictionary.asStringSet();0.9998583197593689
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.convert.FileToStringSampleStream.<init>(opennlp.tools.util.ObjectStream<java.io.File>, java.nio.charset.Charset);1.0
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.convert.FileToStringSampleStream.read();1.0
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.9999645948410034
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.9999645948410034
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.util.FilterObjectStream.close();0.9997993111610413
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheHits();1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheMisses();1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.9999764561653137
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9998524785041809
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.Cache.<init>(int);0.9998465776443481
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.9998229742050171
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheHits();1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheMisses();1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.9999764561653137
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9998524785041809
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.Cache.<init>(int);0.9998465776443481
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator[]);0.9998229742050171
opennlp.tools.parser.ParseSampleStreamTest.testReadTestStream();opennlp.tools.parser.ParseSampleStream.read();1.0
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String);1.0
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String, java.nio.charset.Charset);1.0
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.close();0.9998819231987
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995102882385254
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.read();0.9995102882385254
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.reset();0.9995102882385254
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String);1.0
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String, java.nio.charset.Charset);1.0
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.close();0.9998819231987
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9995102882385254
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.read();0.9995102882385254
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.reset();0.9995102882385254
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.getHelp();1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.run(java.lang.String[]);0.999994158744812
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.BasicCmdLineTool.<init>();0.9999882578849792
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.CmdLineTool.<init>();0.9999882578849792
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();0.9999882578849792
opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizerTest.normalizeSpace();opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizerTest.normalizeChar();opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.getTags();0.9999764561653137
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.getSentence();0.999970555305481
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.cutoff(int, int);1.0
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);0.9999173879623413
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.size();0.9999173879623413
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.<init>();0.9998406171798706
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995279908180237
opennlp.tools.ngram.NGramModelTest.testAdd1();opennlp.tools.ngram.NGramModel.size();1.0
opennlp.tools.ngram.NGramModelTest.testAdd1();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.9999468326568604
opennlp.tools.ngram.NGramModelTest.testAdd1();opennlp.tools.ngram.NGramModel.<init>();0.9999232292175293
opennlp.tools.ngram.NGramModelTest.testAdd1();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.9999173283576965
opennlp.tools.ngram.NGramModelTest.testAdd1();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9996105432510376
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.dictionary.Dictionary.getMinTokenCount();1.0
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.dictionary.Dictionary.size();0.999994158744812
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.ngram.NGramModel.toDictionary(boolean);0.9999823570251465
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.dictionary.Dictionary.getMaxTokenCount();0.9999469518661499
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);0.9999115467071533
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.ngram.NGramModel.<init>();0.9998347759246826
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995221495628357
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.9999940991401672
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999822974205017
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.999976396560669
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.ngram.NGramModel.<init>();0.9998406171798706
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999882578849792
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9999823570251465
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.ngram.NGramModel.<init>();0.9998465776443481
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.languagemodel.LanguageModelTestUtils.getPerplexity(opennlp.tools.languagemodel.LanguageModel, java.util.Collection<java.lang.String[]>, int);1.0
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomVocabulary(int);0.9999940991401672
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999586939811707
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);0.9998937845230103
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.ngram.NGramModel.<init>();0.9998170137405396
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995043873786926
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.9999940991401672
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999822974205017
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.999976396560669
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.ngram.NGramModel.<init>();0.9998406171798706
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.cutoff(int, int);1.0
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);0.9999173879623413
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.size();0.9999173879623413
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.<init>();0.9998406171798706
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995279908180237
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.9999940991401672
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);0.9999881982803345
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999822974205017
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.999976396560669
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.ngram.NGramModel.<init>();0.9998406171798706
opennlp.tools.ngram.NGramModelTest.testZeroGetCount();opennlp.tools.ngram.NGramModel.size();1.0
opennlp.tools.ngram.NGramModelTest.testZeroGetCount();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.9999468326568604
opennlp.tools.ngram.NGramModelTest.testZeroGetCount();opennlp.tools.ngram.NGramModel.<init>();0.9999232292175293
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.9999940991401672
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9999822974205017
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.999976396560669
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.ngram.NGramModel.<init>();0.9998406171798706
opennlp.tools.ngram.NGramModelTest.testNumberOfGrams();opennlp.tools.ngram.NGramModel.numberOfGrams();1.0
opennlp.tools.ngram.NGramModelTest.testNumberOfGrams();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);0.9998997449874878
opennlp.tools.ngram.NGramModelTest.testNumberOfGrams();opennlp.tools.ngram.NGramModel.<init>();0.9998229742050171
opennlp.tools.ngram.NGramModelTest.testNumberOfGrams();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995103478431702
opennlp.tools.ngram.NGramModelTest.testAdd();opennlp.tools.ngram.NGramModel.size();1.0
opennlp.tools.ngram.NGramModelTest.testAdd();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.9999468326568604
opennlp.tools.ngram.NGramModelTest.testAdd();opennlp.tools.ngram.NGramModel.<init>();0.9999232292175293
opennlp.tools.ngram.NGramModelTest.testAdd();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.9999173283576965
opennlp.tools.ngram.NGramModelTest.testAdd();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9996105432510376
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);1.0
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.ngram.NGramModel.size();1.0
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.9999468326568604
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.ngram.NGramModel.<init>();0.9999232292175293
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9996105432510376
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);1.0
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.ngram.NGramModel.size();1.0
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.9999468326568604
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.ngram.NGramModel.<init>();0.9999232292175293
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9996105432510376
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.size();1.0
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);0.9999468326568604
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.<init>();0.9999232292175293
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.9999173283576965
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9996105432510376
opennlp.tools.namefind.BilouCodecTest.testCreateSequenceValidator();opennlp.tools.namefind.BilouCodec.createSequenceValidator();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.eval.CrossValidationPartitioner.toString();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(java.util.Collection<E>, int);0.9999822974205017
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.eval.CrossValidationPartitioner.<init>(opennlp.tools.util.ObjectStream<E>, int);0.9999586939811707
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.CollectionObjectStream.<init>(java.util.Collection<E>);0.9999527931213379
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.CollectionObjectStream.reset();0.9999527931213379
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.<init>(opennlp.tools.util.ObjectStream<byte[]>);1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.read();1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.XmlUtil.createSaxParser();0.999994158744812
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998642802238464
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.FilterObjectStream.close();0.9998052716255188
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9994749426841736
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);1.0
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.close();1.0
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);1.0
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.9999528527259827
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999292492866516
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.999899685382843
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9994277954101562
opennlp.tools.util.ObjectStreamUtilsTest.buildStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);1.0
opennlp.tools.util.ObjectStreamUtilsTest.buildStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(java.util.Collection<T>);0.999793529510498
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.concatenateObjectStream(java.util.Collection<opennlp.tools.util.ObjectStream<T>>);1.0
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.concatenateObjectStream(opennlp.tools.util.ObjectStream<T>[]);1.0
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998583197593689
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.formats.muc.DocumentSplitterStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.formats.muc.DocumentSplitterStream.read();1.0
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9998583197593689
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.FilterObjectStream.close();0.9997993111610413
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.999468982219696
opennlp.tools.namefind.BilouCodecTest.testDecodeOtherFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeOtherFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodeOtherFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodeOtherFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BilouCodecTest.testDecodeEmpty();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletContinuationFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletContinuationFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletContinuationFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletContinuationFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BilouCodecTest.testDecodeSingletonFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeSingletonFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodeSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodeSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BilouCodecTest.testDecodeMultiClass();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeMultiClass();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodeMultiClass();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodeMultiClass();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BilouCodecTest.testDecodePairFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodePairFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9995751976966858
opennlp.tools.namefind.BilouCodecTest.testDecodePairFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994100332260132
opennlp.tools.namefind.BilouCodecTest.testDecodePairFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987207055091858
opennlp.tools.namefind.BioCodecTest.testDecodeOtherFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeOtherFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9996283054351807
opennlp.tools.namefind.BioCodecTest.testDecodeOtherFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994632005691528
opennlp.tools.namefind.BioCodecTest.testDecodeOtherFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987738132476807
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.equals(java.lang.Object);0.9999999403953552
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.<init>(int, int);0.9994868636131287
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9991450905799866
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.clone();1.0
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.equals(java.lang.Object);0.9999764561653137
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999351501464844
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.<init>(java.lang.CharSequence, opennlp.tools.util.Span[]);1.0
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.getDocument();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.util.Span.equals(java.lang.Object);0.9996047019958496
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.util.Span.<init>(int, int);0.9990918636322021
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.util.Span.getEnd();0.9987972974777222
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987502098083496
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.getText();1.0
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999351501464844
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.namefind.RegexNameFinder.<init>(java.util.Map<java.lang.String, java.util.regex.Pattern[]>);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.9999704957008362
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.util.Span.getEnd();0.9987324476242065
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.util.Span.getStart();0.998714804649353
opennlp.tools.namefind.BioCodecTest.testDecodeSingletonFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeSingletonFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9996283054351807
opennlp.tools.namefind.BioCodecTest.testDecodeSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994632005691528
opennlp.tools.namefind.BioCodecTest.testDecodeSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987738132476807
opennlp.tools.parser.ParseTest.testToHashCode();opennlp.tools.parser.Parse.hashCode();1.0
opennlp.tools.parser.ParseTest.testToHashCode();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999351501464844
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.9997344613075256
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.NameSample.getNames();0.9997285604476929
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999675452709198
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993864893913269
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986971020698547
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.<init>(int, int);0.9992157220840454
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9988740682601929
opennlp.tools.parser.ParseTest.testShow();opennlp.tools.parser.Parse.show(java.lang.StringBuffer);1.0
opennlp.tools.parser.ParseTest.testShow();opennlp.tools.parser.Parse.equals(java.lang.Object);0.9999764561653137
opennlp.tools.parser.ParseTest.testShow();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999351501464844
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.toString();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.sentdetect.SentenceSample.<init>(java.lang.CharSequence, opennlp.tools.util.Span[]);0.9999586939811707
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.<init>(int, int);0.999050498008728
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.getEnd();0.9987559914588928
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987089037895203
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getAdditionalContext();1.0
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getSentence();0.9998465776443481
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getNames();0.9998406767845154
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.util.Span.equals(java.lang.Object);0.9996637105941772
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999775767326355
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994868040084839
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987973570823669
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.util.Span.equals(java.lang.Object);0.9996283054351807
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994632005691528
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987738132476807
opennlp.tools.chunker.ChunkSampleTest.testPhraseAsSpan();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testPhraseAsSpan();opennlp.tools.util.Span.equals(java.lang.Object);0.9995929002761841
opennlp.tools.chunker.ChunkSampleTest.testPhraseAsSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994277954101562
opennlp.tools.chunker.ChunkSampleTest.testPhraseAsSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987384676933289
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.<init>(int, int);0.9992157220840454
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9988740682601929
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.toString();1.0
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993982911109924
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.<init>(int, int);0.999050498008728
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987089037895203
opennlp.tools.namefind.NameSampleTest.testNoTypesToString();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.<init>(int, int);0.9992510676383972
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.<init>(int, int);0.9992510676383972
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.<init>(int, int);0.9992157220840454
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9988740682601929
opennlp.tools.sentdetect.SentenceSampleTest.testEquals();opennlp.tools.sentdetect.SentenceSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.NameFinderMETest.testDropOverlappingSpans();opennlp.tools.namefind.NameFinderME.dropOverlappingSpans(opennlp.tools.util.Span[]);1.0
opennlp.tools.namefind.NameFinderMETest.testDropOverlappingSpans();opennlp.tools.util.Span.equals(java.lang.Object);0.9995339512825012
opennlp.tools.namefind.NameFinderMETest.testDropOverlappingSpans();opennlp.tools.util.Span.<init>(int, int);0.9990211129188538
opennlp.tools.namefind.NameFinderMETest.testDropOverlappingSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.998679518699646
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9995988607406616
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.namefind.BioCodecTest.testDecodeMultiClass();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeMultiClass();opennlp.tools.util.Span.equals(java.lang.Object);0.9996283054351807
opennlp.tools.namefind.BioCodecTest.testDecodeMultiClass();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994632005691528
opennlp.tools.namefind.BioCodecTest.testDecodeMultiClass();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987738132476807
opennlp.tools.util.eval.FMeasureTest.testPrecision();opennlp.tools.util.eval.FMeasure.precision(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.sentdetect.SentenceSample.getDocument();1.0
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.util.Span.equals(java.lang.Object);0.9996047019958496
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.util.Span.<init>(int, int);0.9990918636322021
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987502098083496
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.sentdetect.SentenceSample.getDocument();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.util.Span.equals(java.lang.Object);0.9996047019958496
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.<init>(int, int);0.9992510676383972
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.util.Span.equals(java.lang.Object);0.9998230338096619
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9996578693389893
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989683032035828
opennlp.tools.namefind.BioCodecTest.testDecodePairFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodePairFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9996283054351807
opennlp.tools.namefind.BioCodecTest.testDecodePairFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994632005691528
opennlp.tools.namefind.BioCodecTest.testDecodePairFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987738132476807
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.toString();1.0
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.9997993111610413
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997108578681946
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997108578681946
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996872544288635
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993982911109924
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.getEnd();0.9987559914588928
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.getStart();0.9987383484840393
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987089037895203
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9995988607406616
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.parser.ParseTest.testEquals();opennlp.tools.parser.Parse.equals(java.lang.Object);1.0
opennlp.tools.parser.ParseTest.testEquals();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999587535858154
opennlp.tools.util.eval.FMeasureTest.testRecall();opennlp.tools.util.eval.FMeasure.recall(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.namefind.RegexNameFinder.<init>(java.util.Map<java.lang.String, java.util.regex.Pattern[]>);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.9999704957008362
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.util.Span.getType();0.9992921352386475
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.util.Span.getEnd();0.9987324476242065
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.util.Span.getStart();0.998714804649353
opennlp.tools.formats.ad.ADNameSampleStreamTest.testNames();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testNames();opennlp.tools.util.Span.equals(java.lang.Object);0.9998230338096619
opennlp.tools.formats.ad.ADNameSampleStreamTest.testNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9996578693389893
opennlp.tools.formats.ad.ADNameSampleStreamTest.testNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989683032035828
opennlp.tools.namefind.BioCodecTest.testDecodeTripletFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeTripletFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9996283054351807
opennlp.tools.namefind.BioCodecTest.testDecodeTripletFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994632005691528
opennlp.tools.namefind.BioCodecTest.testDecodeTripletFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987738132476807
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.<init>(int, int);0.9992157220840454
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9988740682601929
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999775767326355
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994868040084839
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987973570823669
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.9997875094413757
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.NameSample.getSentence();0.9997344613075256
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.NameSample.getNames();0.9997285604476929
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999675452709198
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993864893913269
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.util.Span.getEnd();0.9987441897392273
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.util.Span.getStart();0.9987265467643738
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986971020698547
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.9998878836631775
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999775767326355
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994868040084839
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.util.Span.getEnd();0.9988444447517395
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.util.Span.getStart();0.998826801776886
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987973570823669
opennlp.tools.parser.ParseTest.testToString();opennlp.tools.parser.Parse.toString();1.0
opennlp.tools.parser.ParseTest.testToString();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999291896820068
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.util.Span.equals(java.lang.Object);0.9996283054351807
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994632005691528
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987738132476807
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9995988607406616
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997168183326721
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997168183326721
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996932148933411
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.util.Span.<init>(int, int);0.9990564584732056
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9995988607406616
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.<init>(int, int);0.9992510676383972
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.show(java.lang.StringBuffer);1.0
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.equals(java.lang.Object);0.9999764561653137
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.parseParse(java.lang.String);0.9999351501464844
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999775767326355
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994868040084839
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987973570823669
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.9998052716255188
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997168183326721
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997168183326721
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996932148933411
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.getEnd();0.9987619519233704
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.getStart();0.9987443089485168
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9995988607406616
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.<init>(int, int);0.9992510676383972
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9989094138145447
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.9998052716255188
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.9997168183326721
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9997168183326721
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.9996932148933411
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.99940425157547
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.util.Span.getEnd();0.9987619519233704
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.util.Span.getStart();0.9987443089485168
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987148642539978
opennlp.tools.namefind.NameSampleTest.testEquals();opennlp.tools.namefind.NameSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.9997344613075256
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.getNames();0.9997285604476929
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999675452709198
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993864893913269
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986971020698547
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.9998878836631775
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999775767326355
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9994868040084839
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.util.Span.getEnd();0.9988444447517395
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.util.Span.getStart();0.998826801776886
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9987973570823669
opennlp.tools.util.SpanTest.testEquals();opennlp.tools.util.Span.equals(java.lang.Object);0.9999999403953552
opennlp.tools.util.SpanTest.testEquals();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9998347759246826
opennlp.tools.util.SpanTest.testEquals();opennlp.tools.util.Span.<init>(int, int);0.9994868636131287
opennlp.tools.util.SpanTest.testEquals();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9991450905799866
opennlp.tools.util.SpanTest.testGetStart();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testGetStart();opennlp.tools.util.Span.getStart();0.9996876120567322
opennlp.tools.util.SpanTest.testGetStart();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9996581077575684
opennlp.tools.util.eval.FMeasureTest.testCountTruePositives();opennlp.tools.util.eval.FMeasure.countTruePositives(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.util.SpanTest.testCrosses();opennlp.tools.util.Span.crosses(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCrosses();opennlp.tools.util.Span.<init>(int, int);0.9990151524543762
opennlp.tools.util.SpanTest.testCrosses();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986735582351685
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.intersects(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.<init>(int, int);0.9990211129188538
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.998679518699646
opennlp.tools.util.TrainingParametersTest.testGetParameters();opennlp.tools.util.TrainingParameters.getParameters(java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetParameters();opennlp.tools.util.TrainingParameters.getSettings();0.9999940991401672
opennlp.tools.ngram.NGramGeneratorTest.emptyTest();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateLargerWindowThanListTest();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest1();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest3();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest4();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest2();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndNotSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterOther();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueCannotBeFirstOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testOtherIsAlwaysAValidOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndNotSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testStartIsAlwaysAValidOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithHierarchy();opennlp.tools.util.BaseToolFactory.create(java.lang.String, opennlp.tools.util.model.ArtifactProvider);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithInvalidName();opennlp.tools.util.BaseToolFactory.create(java.lang.String, opennlp.tools.util.model.ArtifactProvider);1.0
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeInsensitive();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(java.nio.file.Path);1.0
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(morfologik.stemming.Dictionary);1.0
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeMultiLemma();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.util.List<java.lang.String>, java.util.List<java.lang.String>);1.0
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.<init>(opennlp.tools.util.Sequence);1.0
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.add(java.lang.String, double);0.9999822974205017
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.getProbs();0.9999232888221741
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.compareTo(opennlp.tools.util.Sequence);0.9998642206192017
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.getOutcomes();0.9998583197593689
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.<init>();0.9998465180397034
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.add(java.lang.String, double);1.0
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.getProbs();0.9999410510063171
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.getOutcomes();0.999876081943512
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.<init>();0.9998642802238464
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithInvalidName2();opennlp.tools.postag.POSTaggerFactory.create(java.lang.String, opennlp.tools.dictionary.Dictionary, opennlp.tools.postag.TagDictionary);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithHierarchy2();opennlp.tools.postag.POSTaggerFactory.create(java.lang.String, opennlp.tools.dictionary.Dictionary, opennlp.tools.postag.TagDictionary);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.SpanTest.testGetEnd();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testGetEnd();opennlp.tools.util.Span.getEnd();0.9997052550315857
opennlp.tools.util.SpanTest.testGetEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9996581077575684
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.NameSample.getSentence();0.9997344613075256
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.NameSample.getNames();0.9997285604476929
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999675452709198
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.9993864893913269
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9986971020698547
opennlp.tools.lemmatizer.LemmaSampleTest.testEquals();opennlp.tools.lemmatizer.LemmaSample.equals(java.lang.Object);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getTags();1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getLemmas();0.9999940991401672
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.9999940991401672
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getTags();1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getLemmas();0.9999940991401672
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.9999940991401672
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.9999881982803345
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);0.9999822974205017
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testUseAllTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testUseAllTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.999994158744812
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testUseAllTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.999994158744812
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.999994158744812
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.999994158744812
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.999994158744812
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.999994158744812
opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.getToken(int);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.size();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.toString();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9997404217720032
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();null.contains(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999468922615051
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998524785041809
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.iterator();0.9999940991401672
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.hasNext();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.next();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999114871025085
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();null.hasNext();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();null.next();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998170733451843
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999114871025085
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();null.hasNext();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();null.next();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998170733451843
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.dictionary.DictionaryTest.testHashCode();opennlp.tools.dictionary.Dictionary.hashCode();1.0
opennlp.tools.dictionary.DictionaryTest.testHashCode();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9997639060020447
opennlp.tools.dictionary.DictionaryTest.testHashCode();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995043873786926
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.iterator();0.9999940991401672
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.hasNext();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.next();0.9998760223388672
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999114871025085
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();null.hasNext();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();null.next();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998170733451843
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999114871025085
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();null.hasNext();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();null.next();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998170733451843
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();null.contains(java.lang.Object);0.9999586939811707
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.asStringSet();0.999905526638031
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9997404217720032
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999114871025085
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();null.hasNext();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();null.next();0.9998819828033447
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998170733451843
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testLookup();null.contains(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.asStringSet();0.9999468922615051
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9998524785041809
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.algorithm(java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.algorithm();0.9999940991401672
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.algorithm();1.0
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getSettings();0.9999882578849792
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.defaultParams();0.9999056458473206
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.999539852142334
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.9993511438369751
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.$Proxy10.getEncoding();1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.BooleanArgumentFactory.<init>();1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.CharsetArgumentFactory.<init>();1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.FileArgumentFactory.<init>();1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.IntegerArgumentFactory.<init>();1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.StringArgumentFactory.<init>();1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.999970555305481
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);0.999970555305481
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.putIfAbsent(java.lang.String, double);1.0
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);0.9999645948410034
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getDoubleParameter(java.lang.String, double);0.9996046423912048
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getDoubleParameter(java.lang.String, java.lang.String, double);0.9996046423912048
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9995810389518738
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9995574355125427
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String);0.9995338916778564
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getStringParameter(java.lang.String, java.lang.String, java.lang.String);0.9995338916778564
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getBooleanParameter(java.lang.String, boolean);0.9993687868118286
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getBooleanParameter(java.lang.String, java.lang.String, boolean);0.9993687868118286
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, int);0.9993451833724976
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.getIntParameter(java.lang.String, java.lang.String, int);0.9993451833724976
opennlp.tools.ngram.NGramModelTest.testInvalidFormat();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.ngram.NGramModelTest.testInvalidFormat();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.9998878836631775
opennlp.tools.util.model.ByteArraySerializerTest.testSerialization();opennlp.tools.util.model.ByteArraySerializer.create(java.io.InputStream);1.0
opennlp.tools.util.model.ByteArraySerializerTest.testSerialization();opennlp.tools.util.model.ByteArraySerializer.serialize(byte[], java.io.OutputStream);1.0
opennlp.tools.util.model.ByteArraySerializerTest.testSerialization();opennlp.tools.util.model.ByteArraySerializer.<init>();0.9997816681861877
opennlp.tools.ml.TrainerFactoryTest.testSequenceTrainerValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testSequenceTrainerValid();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.99966961145401
opennlp.tools.ml.TrainerFactoryTest.testInvalidTrainer();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testInvalidTrainer();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.99966961145401
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.$Proxy10.getEncoding();1.0
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.999970555305481
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);0.999970555305481
opennlp.tools.ml.ArrayMathTest.testL1Norm();opennlp.tools.ml.ArrayMath.l1norm(double[]);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizer();opennlp.tools.tokenize.DetokenizationDictionary.<init>(java.lang.String[], opennlp.tools.tokenize.DetokenizationDictionary$Operation[]);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.<init>(opennlp.tools.tokenize.DetokenizationDictionary);0.9999822974205017
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);0.9999822974205017
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSimpleDict();opennlp.tools.tokenize.DetokenizationDictionary.getOperation(java.lang.String);1.0
opennlp.tools.cmdline.ArgumentParserTest.testZeroMethods();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsUsage();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testInvalidReturnType();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testInvalidMethodName();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.ngram.NGramUtilsTest.testNgramMLProbability();opennlp.tools.ngram.NGramUtils.calculateNgramMLProbability(opennlp.tools.util.StringList, java.lang.Iterable<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testNgramMLProbability();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995279908180237
opennlp.tools.ngram.NGramUtilsTest.testTrigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateTrigramMLProbability(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testTrigramMLProbability();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995161890983582
opennlp.tools.ngram.NGramUtilsTest.testBigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateBigramMLProbability(java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testBigramMLProbability();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995161890983582
opennlp.tools.util.SequenceTest.testCompareTo();opennlp.tools.util.Sequence.add(java.lang.String, double);1.0
opennlp.tools.util.SequenceTest.testCompareTo();opennlp.tools.util.Sequence.compareTo(opennlp.tools.util.Sequence);0.9998819828033447
opennlp.tools.util.SequenceTest.testCompareTo();opennlp.tools.util.Sequence.<init>();0.9998642802238464
opennlp.tools.ml.TrainerFactoryTest.testEventTrainerValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testEventTrainerValid();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.99966961145401
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerFalse();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerFalse();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.9998289346694946
opennlp.tools.ml.TrainerFactoryTest.testBuiltInValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.<init>(java.io.InputStream);1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.<init>(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.model.RealValueFileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.reset();1.0
opennlp.tools.ml.model.RealValueFileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.close();0.9999764561653137
opennlp.tools.ml.model.RealValueFileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999056458473206
opennlp.tools.ml.model.FileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.reset();1.0
opennlp.tools.ml.model.FileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.close();0.9999764561653137
opennlp.tools.ml.model.FileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999056458473206
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.read();1.0
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.close();0.9999822974205017
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999114871025085
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.Event.toString();0.9994866847991943
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.read();1.0
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.close();0.9999822974205017
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.9999114871025085
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.Event.toString();0.9994866847991943
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.<init>();1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9999704957008362
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999586939811707
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.<init>();1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9999704957008362
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999586939811707
opennlp.tools.util.featuregen.InSpanGeneratorTest.test();opennlp.tools.util.featuregen.InSpanGenerator.<init>(java.lang.String, opennlp.tools.namefind.TokenNameFinder);1.0
opennlp.tools.util.featuregen.InSpanGeneratorTest.test();opennlp.tools.util.featuregen.InSpanGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.lemmatizer.DictionaryLemmatizerTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testParameterValidation();opennlp.tools.lemmatizer.LemmaSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testParameterValidation();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);0.9999940991401672
opennlp.tools.lemmatizer.LemmaSampleTest.testToString();opennlp.tools.lemmatizer.LemmaSample.toString();1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testToString();opennlp.tools.lemmatizer.LemmaSample.<init>(java.lang.String[], java.lang.String[], java.lang.String[]);0.999976396560669
opennlp.tools.lemmatizer.LemmaSampleTest.testToString();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);0.9999704957008362
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan2();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan1();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan3();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.iterator();1.0
opennlp.tools.util.StringListTest.testIterator();null.hasNext();0.9998996257781982
opennlp.tools.util.StringListTest.testIterator();null.next();0.9998996257781982
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.999575138092041
opennlp.tools.util.StringUtilTest.testToLowerCase();opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.testLowerCase();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.testLowerCase();opennlp.tools.util.featuregen.TokenFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999882578849792
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.util.normalizer.NumberCharSequenceNormalizerTest.normalize();opennlp.tools.util.normalizer.NumberCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testBeginFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.ml.BeamSearch.<init>(int, opennlp.tools.ml.model.MaxentModel, int);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);0.9999940991401672
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.util.Sequence.getOutcomes();0.9999704957008362
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.equals(java.lang.Object);1.0
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.<init>(java.io.Reader);0.9999881982803345
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.readHeadRules(java.io.BufferedReader);0.9999881982803345
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.serialize(java.io.Writer);0.9999881982803345
opennlp.tools.namefind.BioCodecTest.testCreateSequenceValidator();opennlp.tools.namefind.BioCodec.createSequenceValidator();1.0
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);1.0
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.ngram.NGramModel.<init>();0.9999232292175293
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);0.9999173283576965
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9996105432510376
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.ngram.NGramModel.<init>();0.9999999403953552
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.9999940395355225
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);0.9999940395355225
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9996872544288635
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.ngram.NGramModel.remove(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.ngram.NGramModel.size();0.9998937845230103
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.ngram.NGramModel.<init>();0.9998170137405396
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);0.9998111128807068
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9995043873786926
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.getSentence();0.9998347759246826
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.getNames();0.9998288750648499
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999799370765686
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999775767326355
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.getSentence();0.9997344613075256
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.getNames();0.9997285604476929
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.<init>(java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999699056148529
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.NameSample.<init>(java.lang.String, java.lang.String[], opennlp.tools.util.Span[], java.lang.String[][], boolean);0.999675452709198
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.close();1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.close();1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.formats.DirectorySampleStreamTest.invalidDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.invalidDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.reset();1.0
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();0.9999704957008362
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();0.9999704957008362
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.9999645948410034
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.9999645948410034
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();1.0
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.999994158744812
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.sentdetect.DefaultEndOfSentenceScannerTest.testScanning();opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.getPositions(java.lang.String);1.0
opennlp.tools.sentdetect.DefaultEndOfSentenceScannerTest.testScanning();opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.<init>(char[]);0.999994158744812
opennlp.tools.ml.ArrayMathTest.testInvL2Norm();opennlp.tools.ml.ArrayMath.invL2norm(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testL2Norm();opennlp.tools.ml.ArrayMath.l2norm(double[]);1.0
opennlp.tools.util.normalizer.UrlCharSequenceNormalizerTest.normalizeUrl();opennlp.tools.util.normalizer.UrlCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.UrlCharSequenceNormalizerTest.normalizeEmail();opennlp.tools.util.normalizer.UrlCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testNext();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testNext();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.normalizer.EmojiCharSequenceNormalizerTest.normalizeEmoji();opennlp.tools.util.normalizer.EmojiCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.StringListTest.testGetToken();opennlp.tools.util.StringList.<init>(java.lang.String[]);1.0
opennlp.tools.util.StringListTest.testIntern();opennlp.tools.util.StringList.<init>(java.lang.String[]);1.0
opennlp.tools.util.StringListTest.testHashCode();opennlp.tools.util.StringList.hashCode();1.0
opennlp.tools.util.StringListTest.testHashCode();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9997050166130066
opennlp.tools.util.StringListTest.testEquals();opennlp.tools.util.StringList.equals(java.lang.Object);0.9999999403953552
opennlp.tools.util.StringListTest.testEquals();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9997226595878601
opennlp.tools.util.StringListTest.testToString();opennlp.tools.util.StringList.<init>(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindMatchingPatternWithoutMatchingTokenBounds();opennlp.tools.namefind.RegexNameFinder.<init>(java.util.Map<java.lang.String, java.util.regex.Pattern[]>);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindMatchingPatternWithoutMatchingTokenBounds();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.9999704957008362
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.test();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.test();opennlp.tools.util.featuregen.TokenFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999882578849792
opennlp.tools.util.SpanTest.testEqualsWithNull();opennlp.tools.util.Span.equals(java.lang.Object);0.9999999403953552
opennlp.tools.util.SpanTest.testEqualsWithNull();opennlp.tools.util.Span.<init>(int, int);0.9994868636131287
opennlp.tools.util.SpanTest.testEqualsWithNull();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9991450905799866
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.clearAdaptiveData();1.0
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.updateAdaptiveData(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.util.VersionTest.testParseInvalidVersion2();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.util.VersionTest.testParseInvalidVersion();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeEmpty();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testUnigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testUnigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999882578849792
opennlp.tools.doccat.NGramFeatureGeneratorTest.test12gram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.test12gram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999882578849792
opennlp.tools.doccat.NGramFeatureGeneratorTest.test13gram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.test13gram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999882578849792
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize1();opennlp.tools.util.InvalidFormatException.<init>(java.lang.String);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize1();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999882578849792
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize2();opennlp.tools.util.InvalidFormatException.<init>(java.lang.String);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize2();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999882578849792
opennlp.tools.doccat.NGramFeatureGeneratorTest.testBigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testBigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999882578849792
opennlp.tools.doccat.NGramFeatureGeneratorTest.testTrigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testTrigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9999882578849792
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.toString();0.9999999403953552
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getContext();0.999899685382843
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getValues();0.999899685382843
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getOutcome();0.9998583793640137
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9998289346694946
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.toString();0.9999999403953552
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);0.9999232888221741
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.getContext();0.999899685382843
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.getValues();0.999899685382843
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.getOutcome();0.9998583793640137
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9998289346694946
opennlp.tools.ml.model.EventTest.testNullOutcome();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);1.0
opennlp.tools.ml.model.EventTest.testNullOutcome();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9999056458473206
opennlp.tools.ml.model.EventTest.testNullContext();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);1.0
opennlp.tools.ml.model.EventTest.testNullContext();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9999056458473206
opennlp.tools.util.SpanTest.testContainsInt();opennlp.tools.util.Span.contains(int);1.0
opennlp.tools.util.SpanTest.testContainsInt();opennlp.tools.util.Span.<init>(int, int);0.9990211129188538
opennlp.tools.util.SpanTest.testContainsInt();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.998679518699646
opennlp.tools.util.SpanTest.testLength();opennlp.tools.util.Span.length();0.9999999403953552
opennlp.tools.util.SpanTest.testLength();opennlp.tools.util.Span.<init>(int, int);0.9991979598999023
opennlp.tools.util.SpanTest.testLength();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9988563060760498
opennlp.tools.util.SpanTest.testStartLargerThanEnd();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testStartLargerThanEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9996581077575684
opennlp.tools.util.SpanTest.testTooSmallEnd();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testTooSmallEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9996581077575684
opennlp.tools.util.SpanTest.testTooSmallStart();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testTooSmallStart();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9996581077575684
opennlp.tools.formats.ad.ADNameSampleStreamTest.testCheckMergedContractions();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testSize();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testSmallSentence();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.ml.ArrayMathTest.testToIntArray();opennlp.tools.ml.ArrayMath.toIntArray(java.util.List<java.lang.Integer>);1.0
opennlp.tools.ml.ArrayMathTest.testInnerProduct();opennlp.tools.ml.ArrayMath.innerProduct(double[], double[]);1.0
opennlp.tools.ml.ArrayMathTest.testInnerProductDoubleNaN();opennlp.tools.ml.ArrayMath.innerProduct(double[], double[]);1.0
opennlp.tools.lemmatizer.DictionaryLemmatizerMultiTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.lemmatize(java.util.List<java.lang.String>, java.util.List<java.lang.String>);1.0
opennlp.tools.ml.ArrayMathTest.testToDoubleArray();opennlp.tools.ml.ArrayMath.toDoubleArray(java.util.List<java.lang.Double>);1.0
opennlp.tools.langdetect.LanguageSampleTest.testNullLang();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.noFeaturesTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.createFeaturesSuccessiveTokensTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.createFeaturesTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest1();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest3();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest2();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest4();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ml.ArrayMathTest.testLogSumOfExps();opennlp.tools.ml.ArrayMath.logSumOfExps(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testMax();opennlp.tools.ml.ArrayMath.max(double[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartContinue();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartContinueOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleStart();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityContinueOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityMultiClass();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityRepeated();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityBadTag();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleContinue();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityEmpty();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.util.ext.ExtensionLoaderTest.testLoadingStringGenerator();opennlp.tools.util.ext.ExtensionLoader.instantiateExtension(java.lang.Class<T>, java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByStart();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByStart();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testBeginFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByOutside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByInside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOutsideFollowedByOutside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetSettings();opennlp.tools.util.TrainingParameters.getSettings();1.0
opennlp.tools.util.TrainingParametersTest.testGetSettings();opennlp.tools.util.TrainingParameters.getSettings(java.lang.String);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeHashtag();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeRT();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeLaugh();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeUser();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeFace();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.StringUtilTest.testToUpperCase();opennlp.tools.util.StringUtil.toUpperCase(java.lang.CharSequence);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityEmpty();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityUnitOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesStart();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityWrongClass();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityBadTag();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesContinue();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityMultiClass();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinue();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.ml.ArrayMathTest.testArgmaxException2();opennlp.tools.ml.ArrayMath.argmax(double[]);0.9999999403953552
opennlp.tools.ml.ArrayMathTest.testArgmaxException1();opennlp.tools.ml.ArrayMath.argmax(double[]);0.9999999403953552
opennlp.tools.ml.ArrayMathTest.testArgmax();opennlp.tools.ml.ArrayMath.argmax(double[]);0.9999999403953552
