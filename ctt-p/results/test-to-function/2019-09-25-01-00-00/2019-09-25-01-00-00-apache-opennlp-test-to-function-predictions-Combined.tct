test-class;tested-class;score
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testCorrectFactory();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.8958739042282104
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testPlainTextModel();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.8322272300720215
opennlp.tools.doccat.DocumentCategorizerNBTest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.doccat.DocumentSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.doccat.DoccatFactory);1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtil();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes1();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9999999403953552
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachDataUsingTrainUtilWithCutoff5();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.8007667660713196
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes3();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);0.9491230845451355
opennlp.tools.ml.naivebayes.NaiveBayesPrepAttachTest.testNaiveBayesOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9233628511428833
opennlp.tools.langdetect.LanguageDetectorMETest.testLoadFromSerialized();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);1.0
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.util.eval.Evaluator.evaluateSample(T);1.0
opennlp.tools.langdetect.LanguageDetectorEvaluatorTest.processSample();opennlp.tools.langdetect.LanguageDetectorEvaluator.processSample(opennlp.tools.langdetect.LanguageSample);0.8857420682907104
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactory();opennlp.tools.langdetect.LanguageDetectorModel.getFactory();1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes4();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();1.0
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testTextModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.811491072177887
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.trainModel(opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.944165050983429
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.naivebayes.NaiveBayesTrainer.<init>();0.8421052098274231
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesSerializedCorrectnessTest.testNaiveBayes2();opennlp.tools.ml.AbstractTrainer.<init>();0.8022746443748474
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelWriter.persist();0.9999999403953552
opennlp.tools.ml.naivebayes.NaiveBayesModelReadWriteTest.testBinaryModelPersistence();opennlp.tools.ml.naivebayes.NaiveBayesModelReader.constructModel();0.8435040712356567
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.serialize(java.io.File);1.0
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.9574268460273743
opennlp.tools.namefind.TokenNameFinderModelTest.testNERWithPOSModel();opennlp.tools.ml.model.Context.getOutcomes();0.8124950528144836
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getSequenceValidator();0.9999999403953552
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getTagDictionary();0.9825953245162964
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator();0.9647610783576965
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.postag.POSModel.getFactory();0.903141438961029
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithDefaultFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8623570799827576
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.chunking.Parser.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>, opennlp.tools.parser.HeadRules, opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8916926980018616
opennlp.tools.parser.chunking.ParserTest.testChunkingParserTraining();opennlp.tools.parser.ParserTestUtil.openTestTrainingData();0.8080963492393494
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.POSTaggerNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.POSTaggerNameFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.postag.POSTaggerFactory.getPOSContextGenerator(int);0.8571407198905945
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.AbstractBottomUpParser.parse(opennlp.tools.parser.Parse);1.0
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.treeinsert.Parser.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.parser.Parse>, opennlp.tools.parser.HeadRules, int, int);1.0
opennlp.tools.parser.treeinsert.ParserTest.testTreeInsertParserTraining();opennlp.tools.parser.ParserTestUtil.openTestTrainingData();0.8867327570915222
opennlp.tools.postag.POSTaggerMETest.testPOSTagger();opennlp.tools.postag.POSTaggerME.tag(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeEmpty();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.run();opennlp.tools.cmdline.namefind.TokenNameFinderTool.run(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.getType();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.8375806212425232
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndexWithNewline();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.namefind.TokenNameFinderCrossValidator.getFMeasure();1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNullResources();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.9441532492637634
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.POSTaggerFactory.<init>();1.0
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.postag.WordTagSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.BaseToolFactory.<init>();0.9665646553039551
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9624568223953247
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.<init>();0.9598317742347717
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9567766785621643
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9560778737068176
opennlp.tools.postag.POSTaggerMETest.insufficientTestData();opennlp.tools.util.PlainTextByLineStream.reset();0.8867767453193665
opennlp.tools.postag.POSModelTest.testPOSModelSerializationPerceptron();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);1.0
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.util.model.BaseModel.serialize(java.io.OutputStream);0.9999999403953552
opennlp.tools.postag.POSModelTest.testPOSModelSerializationMaxent();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.9643131494522095
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesWithType();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithMultipleTypes();opennlp.tools.util.Span.getType();0.8164926171302795
opennlp.tools.namefind.NameFinderMETest.testNameFinder();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikPOSTaggerFactory.getTagDictionary();1.0
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSModel.getFactory();0.860425591468811
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikPOSTaggerFactory.setTagDictionary(opennlp.tools.postag.TagDictionary);0.818381667137146
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);0.8178661465644836
opennlp.morfologik.tagdict.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8074094653129578
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);1.0
opennlp.tools.namefind.NameFinderMETest.testNameFinderWithTypes();opennlp.tools.util.Span.getType();0.8492726683616638
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesForSingleTypeSentence();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.namefind.TokenNameFinderCrossValidator.getFMeasure();0.9688130617141724
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.namefind.TokenNameFinderCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, int);0.8505759239196777
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithNameEvaluationErrorListener();opennlp.tools.ml.maxent.GISModel.eval(int[], double[], opennlp.tools.ml.model.EvalParameters);0.8154553771018982
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.namefind.NameFinderEventStreamTest.testOutcomesTypeCantOverride();opennlp.tools.util.AbstractEventStream.read();0.8417599201202393
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.util.Span.getType();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithEntitiesWithTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.816767156124115
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.createContextGenerator();1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();0.9666983485221863
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderFactory.createSequenceCodec();0.9412408471107483
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.931537926197052
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.TokenNameFinderModel.getFactory();0.8986016511917114
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.DefaultNameContextGenerator.addFeatureGenerator(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.8958725333213806
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.8541878461837769
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.BioCodec.createSequenceValidator();0.8120617866516113
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNamesTypeOverride();opennlp.tools.namefind.NameFinderME.train(java.lang.String, java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory);0.8051738739013672
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);1.0
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.<init>(opennlp.tools.namefind.TokenNameFinderModel);0.8761483430862427
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.8743605613708496
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.BioCodec.<init>();0.8661940693855286
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.8661940693855286
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.featuregen.AdditionalContextFeatureGenerator.<init>();0.8661940693855286
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8613554835319519
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.8549172282218933
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.TrainingParameters.<init>();0.8380590081214905
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8352980613708496
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.83466637134552
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.8312637805938721
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.NameFinderME.find(java.lang.String[]);0.815304696559906
opennlp.tools.namefind.NameFinderMETest.testOnlyWithNames();opennlp.tools.namefind.TokenNameFinderModel.getNameFinderSequenceModel();0.8143686056137085
opennlp.tools.cmdline.CLITest.testHelpMessageOfTools();opennlp.tools.cmdline.CLI.getToolNames();1.0
opennlp.tools.cmdline.CLITest.testToolParameterMessage();opennlp.tools.cmdline.TerminateToolException.getMessage();1.0
opennlp.tools.cmdline.CLITest.testToolParameterMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);0.9909277558326721
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testSentenceDetector();opennlp.tools.sentdetect.SentenceDetectorME.sentPosDetect(java.lang.String);0.9558528661727905
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getOriginal();1.0
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.parse(java.io.InputStream);0.9888406991958618
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.getSentences();0.9411033987998962
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getTranslation();0.9391550421714783
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankFlex.getFlex();0.926490068435669
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getFlex();0.926490068435669
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankSentence.getTokenSample();0.8651137351989746
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocument.IrishSentenceBankFlex.getSurface();0.859268307685852
opennlp.tools.formats.irishsentencebank.IrishSentenceBankDocumentTest.testParsingSimpleDoc();opennlp.tools.util.Span.getEnd();0.8084293007850647
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.TokenizerModel.getFactory();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getAbbreviationDictionary();0.813568115234375
opennlp.tools.tokenize.TokenizerFactoryTest.testNullDict();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.isUseAlphaNumericOptmization();0.9396290183067322
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.getContextGenerator();0.8783307075500488
opennlp.tools.tokenize.TokenizerFactoryTest.testCustomPatternAndAlphaOpt();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.8602638840675354
opennlp.tools.tokenize.TokenizerFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerModelTest.testSentenceModel();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.getDivtypes();0.9638259410858154
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPTextDocument.getTexts();0.8194360136985779
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.8966797590255737
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);0.9705759882926941
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.8298424482345581
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9634979367256165
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.8799999952316284
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9634979367256165
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.8799999952316284
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsAtMinimum2();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.8966797590255737
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9634979367256165
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection3();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.8799999952316284
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();0.9634979367256165
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchFailsWithWrongDirection4();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.8799999952316284
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>();1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int, boolean);0.9620879888534546
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(opennlp.tools.ml.maxent.quasinewton.Function);0.9020880460739136
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testRosenbrockFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.computeDirection(double[]);0.8810439109802246
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getStepSize();1.0
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.doLineSearch(opennlp.tools.ml.maxent.quasinewton.Function, double[], opennlp.tools.ml.maxent.quasinewton.LineSearch$LineSearchResult, double);0.9705759882926941
opennlp.tools.ml.maxent.quasinewton.LineSearchTest.testLineSearchDeterminesSaneStepLength1();opennlp.tools.ml.maxent.quasinewton.LineSearch.LineSearchResult.getInitialObject(double, double[], double[]);0.8298424482345581
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9396172165870667
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL2Params();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.8177275061607361
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>();1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int);1.0
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.<init>(double, double, int, int, int, boolean);0.9667438864707947
opennlp.tools.ml.maxent.quasinewton.QNMinimizerTest.testQuadraticFunction();opennlp.tools.ml.maxent.quasinewton.QNMinimizer.minimize(opennlp.tools.ml.maxent.quasinewton.Function);0.9141122698783875
opennlp.tools.formats.nkjp.NKJPTextDocumentTest.testGetParagraphs();opennlp.tools.formats.nkjp.NKJPTextDocument.getParagraphs();1.0
opennlp.tools.doccat.DoccatFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.doccat.DocumentSampleTest.testEquals();opennlp.tools.doccat.DocumentSample.equals(java.lang.Object);1.0
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.doccat.DoccatFactoryTest.testCustom();opennlp.tools.doccat.DoccatModel.getFactory();0.8478400707244873
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.getCategory();1.0
opennlp.tools.doccat.DocumentSampleTest.testDocumentSampleSerDe();opennlp.tools.doccat.DocumentSample.getText();0.8571429252624512
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DoccatFactory.<init>();1.0
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[]);0.9934143424034119
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.DocumentSample.<init>(java.lang.String, java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9934143424034119
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();0.9908004403114319
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.9884946942329407
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.BaseToolFactory.<init>();0.9530233144760132
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.TrainingParameters.<init>();0.9466705322265625
opennlp.tools.doccat.DocumentCategorizerMETest.insufficientTestData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8471710681915283
opennlp.tools.doccat.DocumentCategorizerMETest.testSimpleTraining();opennlp.tools.doccat.DocumentCategorizerME.train(java.lang.String, opennlp.tools.util.ObjectStream<opennlp.tools.doccat.DocumentSample>, opennlp.tools.util.TrainingParameters, opennlp.tools.doccat.DoccatFactory);1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testNegative();opennlp.tools.namefind.TokenNameFinderEvaluator.getFMeasure();0.8260970115661621
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9999999403953552
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getRecallScore();0.8518133163452148
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);1.0
opennlp.tools.lemmatizer.LemmatizerEvaluatorTest.testEvaluator();opennlp.tools.lemmatizer.LemmatizerEvaluator.getWordAccuracy();0.8089001774787903
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmaSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.lemmatizer.LemmatizerFactory.<init>();1.0
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.MockInputStreamFactory.<init>(java.io.File);0.9601561427116394
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.lang.String);0.9529178142547607
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.9333694577217102
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9279726147651672
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9255231022834778
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9249627590179443
opennlp.tools.lemmatizer.LemmatizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.8555232286453247
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.975490927696228
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachData();opennlp.tools.ml.perceptron.PerceptronTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer, int);0.87626713514328
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelEquals();opennlp.tools.ml.model.AbstractModel.equals(java.lang.Object);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9031574726104736
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.PerceptronModelWriter.persist();0.8926122784614563
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.8610880970954895
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.model.BinaryFileDataReader.<init>(java.io.DataInputStream);0.8118990659713745
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.perceptron.BinaryPerceptronModelReader.<init>(java.io.DataInputStream);0.8118990659713745
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testModelSerialization();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.8112108707427979
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9847074151039124
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.util.TrainingParameters.put(java.lang.String, java.lang.String);0.92453932762146
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9196967482566833
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9182600378990173
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.verifyReportMap();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9041953086853027
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9942723512649536
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.9376769065856934
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithTolerance();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8472769260406494
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.993636429309845
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.919356107711792
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithSkippedAveraging();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8402915596961975
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9983627200126648
opennlp.tools.ml.perceptron.PerceptronPrepAttachTest.testPerceptronOnPrepAttachDataWithStepSizeDecrease();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.8424249887466431
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerTrainerTool.getName();0.9999999403953552
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerTrainerTool.getName();0.9999999403953552
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CmdLineTool.getName();0.9900515079498291
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);0.9063308238983154
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.TerminateToolException.getMessage();0.8800919651985168
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractConverterTool.<init>(java.lang.Class<T>);0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractCrossValidatorTool.<init>(java.lang.Class<T>, java.lang.Class<P>);0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractEvaluatorTool.<init>(java.lang.Class<T>, java.lang.Class<P>);0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractTrainerTool.<init>(java.lang.Class<T>, java.lang.Class<P>);0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.AbstractTypedParamTool.<init>(java.lang.Class<T>, java.lang.Class<P>);0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.TypedCmdLineTool.<init>(java.lang.Class<T>);0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerCrossValidatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerMETool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.chunker.ChunkerTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.dictionary.DictionaryBuilderTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatCrossValidatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.doccat.DoccatTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.entitylinker.EntityLinkerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorCrossValidatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.langdetect.LanguageDetectorTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.languagemodel.NGramLanguageModelTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerMETool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.lemmatizer.LemmatizerTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.CensusDictionaryCreatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderCrossValidatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.BuildModelUpdaterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.CheckModelUpdaterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ModelUpdaterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.ParserTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.parser.TaggerModelReplacerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerCrossValidatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.postag.POSTaggerTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorCrossValidatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.sentdetect.SentenceDetectorTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.DictionaryDetokenizerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.SimpleTokenizerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerConverterTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerCrossValidatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerMEEvaluatorTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerMETool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.tokenizer.TokenizerTrainerTool.<init>();0.8595325946807861
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.BasicCmdLineTool.<init>();0.8325374722480774
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.CmdLineTool.<init>();0.8325374722480774
opennlp.tools.cmdline.CLITest.testUnknownToolMessage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();0.8325374722480774
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.TokenNameFinderCrossValidator.<init>(java.lang.String, java.lang.String, opennlp.tools.util.TrainingParameters, opennlp.tools.namefind.TokenNameFinderFactory, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);1.0
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.eval.FMeasure.<init>();0.9612528085708618
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9577111601829529
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.938028872013092
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9357966184616089
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9331984519958496
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9326041340827942
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.813198447227478
opennlp.tools.namefind.TokenNameFinderCrossValidatorTest.testWithInsufficientData();opennlp.tools.namefind.TokenNameFinderCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>, int);0.8053520917892456
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.ChunkerModel.getFactory();1.0
opennlp.tools.chunker.ChunkerFactoryTest.testDummyFactory();opennlp.tools.chunker.DummyChunkerFactory.getSequenceValidator();0.8098985552787781
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);1.0
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.chunker.ChunkerModel.<init>(java.io.InputStream);0.8911667466163635
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, java.io.InputStream);0.8628974556922913
opennlp.tools.chunker.ChunkerModelTest.testInvalidFactorySignature();opennlp.tools.util.model.BaseModel.<init>(java.lang.String, boolean);0.8527613282203674
opennlp.tools.chunker.ChunkerModelTest.test180CustomFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);1.0
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.formats.ConllXPOSSampleStream.read();1.0
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.getTags();0.9884630441665649
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.util.PlainTextByLineStream.reset();0.83115154504776
opennlp.tools.formats.ConllXPOSSampleStreamTest.testParsingSample();opennlp.tools.postag.POSSample.getSentence();0.8085727095603943
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getWordLines();1.0
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getSentenceIdComment();0.9736780524253845
opennlp.tools.formats.conllu.ConlluStreamTest.testParseTwoSentences();opennlp.tools.formats.conllu.ConlluSentence.getTextComment();0.871688187122345
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.getLemmas();1.0
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluLemmaSampleStream.read();0.944180428981781
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.9370546936988831
opennlp.tools.formats.conllu.ConlluLemmaSampleStreamTest.testParseSpanishS300();opennlp.tools.util.PlainTextByLineStream.reset();0.8360936045646667
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluPOSSampleStream.read();0.8557156324386597
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9999999403953552
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();0.8438568115234375
opennlp.tools.util.ParagraphStreamTest.testReset();opennlp.tools.util.FilterObjectStream.reset();1.0
opennlp.tools.formats.conllu.ConlluSentenceSampleStreamTest.testParseTwoSentences();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9999999403953552
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseSpanishS300();opennlp.tools.formats.conllu.ConlluTokenSampleStream.read();0.8438568115234375
opennlp.tools.formats.conllu.ConlluTokenSampleStreamTest.testParseTwoSentences();opennlp.tools.tokenize.TokenSample.parse(java.lang.String, java.lang.String);0.9999999403953552
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.formats.conllu.ConlluPOSSampleStreamTest.testParseContraction();opennlp.tools.formats.conllu.ConlluPOSSampleStream.read();0.8557156324386597
opennlp.tools.util.ParagraphStreamTest.testSimpleReading();opennlp.tools.util.ParagraphStream.read();1.0
opennlp.tools.formats.ad.ADParagraphStreamTest.testSimpleReading();opennlp.tools.formats.ad.ADSentenceStream.read();1.0
opennlp.tools.formats.ad.ADParagraphStreamTest.testLeadingWithContraction();opennlp.tools.formats.ad.ADSentenceStream.read();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.getTags();0.9999999403953552
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.close();0.9068933725357056
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.util.PlainTextByLineStream.reset();0.850792407989502
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.postag.POSSample.getSentence();0.8313655257225037
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADPOSSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, boolean, boolean);0.8162040114402771
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADSentenceStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8077337741851807
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testIncludeFeats();opennlp.tools.formats.ad.ADSentenceStream.SentenceParser.<init>();0.8077337741851807
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.formats.ad.ADPOSSampleStream.close();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testSimple();opennlp.tools.postag.POSSample.getSentence();0.9753988981246948
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.formats.ad.ADPOSSampleStream.read();1.0
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.postag.POSSample.getSentence();0.993888795375824
opennlp.tools.formats.ad.ADPOSSampleStreamTest.testExpandME();opennlp.tools.postag.POSSample.getTags();0.8755919337272644
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8552694320678711
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.create(java.lang.String, java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);1.0
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getAbbreviationDictionary();0.9087889790534973
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.DummyTokenizerFactory.getContextGenerator();0.8847352266311646
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getAlphaNumericPattern();0.8333980441093445
opennlp.tools.tokenize.TokenizerFactoryTest.testCreateDummyFactory();opennlp.tools.tokenize.TokenizerFactory.getLanguageCode();0.8274949193000793
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerModel.getFactory();1.0
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.9617517590522766
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerFactory.getSequenceValidator();0.868201732635498
opennlp.tools.chunker.ChunkerFactoryTest.testDefaultFactory();opennlp.tools.chunker.ChunkerFactory.getContextGenerator();0.8210411667823792
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.chunker.ChunkerFactory.<init>();0.986983060836792
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.9507358074188232
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9470166563987732
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.9446397423744202
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.9418735504150391
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.941240668296814
opennlp.tools.chunker.ChunkerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.8718735575675964
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.typeSystemInit(org.apache.uima.cas.TypeSystem);1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.namefind.AbstractNameFinder.process(org.apache.uima.cas.CAS);0.9272726774215698
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryNameFinder();opennlp.uima.util.CasUtil.deserializeXmiCAS(org.apache.uima.cas.CAS, java.io.InputStream);0.8762003183364868
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.hasNext();1.0
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.createEmptyCAS(org.apache.uima.resource.metadata.TypeSystemDescription);0.9550511240959167
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.AnnotationIterator.next();0.8806185126304626
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.next();0.8806185126304626
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.deserializeXmiCAS(org.apache.uima.cas.CAS, java.io.InputStream);0.8482196927070618
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.CasUtil.createTypeSystemDescription(java.io.InputStream);0.8356698155403137
opennlp.uima.util.AnnotationComboIteratorTest.OPENNLP_676();opennlp.uima.util.AnnotationComboIterator.<init>(org.apache.uima.cas.CAS, org.apache.uima.cas.Type, org.apache.uima.cas.Type);0.8109794855117798
opennlp.tools.langdetect.LanguageDetectorCrossValidatorTest.evaluate();opennlp.tools.langdetect.LanguageDetectorCrossValidator.evaluate(opennlp.tools.util.ObjectStream<opennlp.tools.langdetect.LanguageSample>, int);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.postag.POSDictionaryTest.testCaseSensitiveDictionary();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSDictionaryTest.testEqualsAndHashCode();opennlp.tools.postag.POSDictionary.hashCode();1.0
opennlp.tools.postag.POSDictionaryTest.testLoadingDictionaryWithoutCaseAttribute();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.DummyPOSTaggerFactory.getTagDictionary();1.0
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.DummyPOSTaggerFactory.getPOSContextGenerator();0.9283277988433838
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.DummyPOSTaggerFactory.getSequenceValidator();0.8698197603225708
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.postag.POSModel.getFactory();0.860425591468811
opennlp.tools.postag.POSTaggerFactoryTest.testPOSTaggerWithCustomFactory();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8074094653129578
opennlp.tools.postag.POSDictionaryTest.testCaseInsensitiveDictionary();opennlp.tools.postag.POSDictionary.getTags(java.lang.String);1.0
opennlp.tools.postag.POSDictionaryTest.testSerialization();opennlp.tools.postag.POSDictionary.equals(java.lang.Object);1.0
opennlp.tools.chunker.ChunkSampleTest.testNicePrint();opennlp.tools.chunker.ChunkSample.nicePrint();1.0
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getTags();1.0
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getPreds();0.9375
opennlp.tools.formats.ad.ADChunkSampleStreamTest.testChunks();opennlp.tools.chunker.ChunkSample.getSentence();0.8181818723678589
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();1.0
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getSentence();0.9987367391586304
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.equals(java.lang.Object);0.9632508754730225
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getPreds();0.9606143832206726
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.util.Span.equals(java.lang.Object);0.9099494814872742
opennlp.tools.chunker.ChunkSampleTest.testChunkSampleSerDe();opennlp.tools.chunker.ChunkSample.getTags();0.8425805568695068
opennlp.tools.chunker.ChunkSampleTest.testAsSpan();opennlp.tools.chunker.ChunkSample.getPhrasesAsSpanList();1.0
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getSentence();1.0
opennlp.tools.chunker.ChunkSampleTest.testRetrievingContent();opennlp.tools.chunker.ChunkSample.getPreds();0.8095238208770752
opennlp.tools.chunker.ChunkSampleTest.testEquals();opennlp.tools.chunker.ChunkSample.equals(java.lang.Object);1.0
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getPreds();1.0
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getSentence();0.9236104488372803
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.ChunkSampleStream.read();0.8704290390014648
opennlp.tools.parser.ChunkSampleStreamTest.testConvertParseToPosSample();opennlp.tools.chunker.ChunkSample.getTags();0.8541210293769836
opennlp.tools.chunker.ChunkSampleStreamTest.testReadingEvents();opennlp.tools.chunker.ChunkSampleStream.read();1.0
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);0.9999999403953552
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.FMeasure.getRecallScore();0.8983590602874756
opennlp.tools.chunker.ChunkerEvaluatorTest.testEvaluatorNoError();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.8692871332168579
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);1.0
opennlp.tools.chunker.ChunkerDetailedFMeasureListenerTest.testEvaluator();opennlp.tools.cmdline.DetailedFMeasureListener.createReport(java.util.Locale);0.8976818323135376
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.Span.spansToStrings(opennlp.tools.util.Span[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.util.PlainTextByLineStream.reset();0.9624985456466675
opennlp.tools.chunker.ChunkSampleTest.testRegions();opennlp.tools.chunker.DummyChunkSampleStream.read();0.9197080135345459
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.8822891116142273
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9521558284759521
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.921680212020874
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachData2Threads();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8006964325904846
opennlp.tools.cmdline.CLITest.testMainHelpMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFail();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCr();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCr();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.8079913258552551
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineLf();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.9689724445343018
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCrLf();opennlp.tools.sentdetect.NewlineSentenceDetector.sentDetect(java.lang.String);1.0
opennlp.tools.sentdetect.NewlineSentenceDetectorTest.testNewlineCrLf();opennlp.tools.sentdetect.NewlineSentenceDetector.<init>();0.848732054233551
opennlp.tools.formats.brat.BratNameSampleStreamTest.readOverlapFilter();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.formats.brat.BratDocumentParserTest.testParse();opennlp.tools.formats.brat.BratDocumentParser.parse(opennlp.tools.formats.brat.BratDocument);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.readNoOverlap();opennlp.tools.formats.brat.SegmenterObjectStream.read();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.util.Span.getEnd();0.9999999403953552
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceEnd();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.8267096877098083
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenizerFactory.create(java.lang.String, java.lang.String, opennlp.tools.dictionary.Dictionary, boolean, java.util.regex.Pattern);1.0
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9367034435272217
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.tokenize.TokenSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>, java.lang.String);0.9367034435272217
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.9001644253730774
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.8977370858192444
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8949119448661804
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8942656517028809
opennlp.tools.tokenize.TokenizerMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.reset();0.8249119520187378
opennlp.tools.namefind.NameSampleTest.testMissingType();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyTag();opennlp.tools.postag.POSSample.getTags();0.9160425662994385
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.WordTagSampleStream.read();1.0
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.postag.POSSample.getSentence();0.9861997961997986
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.FilterObjectStream.reset();0.9296574592590332
opennlp.tools.postag.WordTagSampleStreamTest.testParseSimpleSample();opennlp.tools.util.CollectionObjectStream.reset();0.9222979545593262
opennlp.tools.tokenize.TokSpanEventStreamTest.testEventOutcomes();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.tokenize.SimpleTokenizerTest.testWordDotTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.BratAnnotation.toString();0.9245173335075378
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingEntities();opennlp.tools.formats.brat.SpanAnnotation.toString();0.9245173335075378
opennlp.tools.namefind.NameSampleDataStreamTest.testClearAdaptiveData();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();1.0
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContext();opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(java.lang.CharSequence, int);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.util.Span.getEnd();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.util.Span.getStart();0.9821911454200745
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.8478262424468994
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameAtSentenceStart();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.8406392335891724
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceModel.getFactory();1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceModel.getEosCharacters();0.8332956433296204
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getAbbreviationDictionary();0.8113983869552612
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();0.804835855960846
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testNullDict();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9724701642990112
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9650835990905762
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.read();0.9329268932342529
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithoutNameTypes();opennlp.tools.util.FilterObjectStream.close();0.8455247282981873
opennlp.tools.namefind.NameSampleTest.testTypeWithSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.postag.POSTaggerMETest.testBuildNGramDictionary();opennlp.tools.postag.POSTaggerME.buildNGramDictionary(opennlp.tools.util.ObjectStream<opennlp.tools.postag.POSSample>, int);1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.RelationAnnotation.toString();1.0
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.SpanAnnotation.toString();0.9876621961593628
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.BratAnnotationStream.read();0.92726731300354
opennlp.tools.formats.brat.BratAnnotationStreamTest.testParsingRelations();opennlp.tools.formats.brat.AnnotationConfiguration.<init>(java.util.Map<java.lang.String, java.lang.String>);0.8537412881851196
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getSentence();0.9999999403953552
opennlp.tools.postag.POSSampleTest.testPOSSampleSerDe();opennlp.tools.postag.POSSample.getTags();0.8246811628341675
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.equals(java.lang.Object);0.928565263748169
opennlp.tools.namefind.RegexNameFinderFactoryTest.testPhoneNumber();opennlp.tools.util.Span.getStart();0.8200271129608154
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.cmdline.sentdetect.SentenceEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.sentdetect.SentenceDetectorEvaluator.<init>(opennlp.tools.sentdetect.SentenceDetector, opennlp.tools.sentdetect.SentenceDetectorEvaluationMonitor[]);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9633313417434692
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9612528085708618
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9602987170219421
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.8972142934799194
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmtpyToken();opennlp.tools.postag.POSSample.getSentence();0.8720709085464478
opennlp.tools.sentdetect.SDEventStreamTest.testEventOutcomes();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.tokenize.SimpleTokenizerTest.testWordNumericTokeniztation();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testEquals();opennlp.tools.postag.POSSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testEmail();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar2();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceSeparatedTokens();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9970502257347107
opennlp.tools.formats.muc.SgmlParserTest.testParse1();opennlp.tools.formats.muc.SgmlParser.parse(java.io.Reader, opennlp.tools.formats.muc.SgmlParser$ContentHandler);1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.DummyFactory.getContextGenerator();1.0
opennlp.tools.langdetect.LanguageDetectorFactoryTest.testDummyFactoryContextGenerator();opennlp.tools.langdetect.DummyFactory.MyContectGenerator.getContext(java.lang.CharSequence);0.9670588374137878
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.tokenize.SimpleTokenizer.<init>();1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.<init>(opennlp.tools.tokenize.Tokenizer);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSingleToken();opennlp.tools.tokenize.AbstractTokenizer.<init>();0.9633313417434692
opennlp.tools.namefind.NameSampleTest.testNestedNameSpans();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.tokenize.WhitespaceTokenizerTest.testTokenizationOfStringWithoutTokens();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.9999999403953552
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.9621337652206421
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingWhitespaceAndSeparatedString();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8307879567146301
opennlp.tools.postag.POSSampleTest.testParse();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.tokenize.TokenizerMETest.testTokenizer();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.init(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);1.0
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.EmptyLinePreprocessorStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8859997391700745
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceDetectorFactory.<init>(java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);0.8859997391700745
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.sentdetect.SentenceSampleStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.8859997391700745
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.BaseToolFactory.<init>();0.8425731658935547
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.formats.ResourceAsStreamFactory.<init>(java.lang.Class<?>, java.lang.String);0.8386958241462708
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.TrainingParameters.<init>();0.8362180590629578
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8333341479301453
opennlp.tools.sentdetect.SentenceDetectorMETest.testInsufficientData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8326743841171265
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getAnnotations();1.0
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getText();0.9787655472755432
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getId();0.8434721231460571
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.getAnnotation(java.lang.String);0.8424922227859497
opennlp.tools.formats.brat.BratDocumentTest.testDocumentWithEntitiesParsing();opennlp.tools.formats.brat.BratDocument.parseDocument(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream, java.io.InputStream);0.8065481185913086
opennlp.tools.namefind.RegexNameFinderFactoryTest.testURL();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.namefind.NameSampleTest.testWithTypesToString();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.getType();0.902208685874939
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.8979346752166748
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypes();opennlp.tools.util.Span.equals(java.lang.Object);0.8082377910614014
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.getStart();1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testMgrs();opennlp.tools.util.Span.equals(java.lang.Object);0.9418208599090576
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.util.Span.getEnd();0.9999999403953552
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);0.8645375967025757
opennlp.tools.namefind.DictionaryNameFinderTest.testSingleTokeNameInsideSentence();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.8548785448074341
opennlp.tools.util.SpanTest.testTrim();opennlp.tools.util.Span.trim(java.lang.CharSequence);1.0
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.evaluateSample(T);1.0
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.postag.POSEvaluator.getWordAccuracy();0.9635627865791321
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.cmdline.postag.POSEvaluationErrorListener.<init>(java.io.OutputStream);0.9570038318634033
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.postag.POSEvaluator.<init>(opennlp.tools.postag.POSTagger, opennlp.tools.postag.POSTaggerEvaluationMonitor[]);0.9570038318634033
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Mean.<init>();0.936215877532959
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9176483154296875
opennlp.tools.postag.POSEvaluatorTest.testNegative();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.914393424987793
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.getStart();1.0
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.util.Span.equals(java.lang.Object);0.9064514636993408
opennlp.tools.namefind.RegexNameFinderFactoryTest.testLatLong();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);0.8304694890975952
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.util.Span.getType();1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSample.getNames();0.9950149059295654
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);0.9493017196655273
opennlp.tools.namefind.NameSampleTypeFilterTest.testSingleFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8899922370910645
opennlp.tools.util.StringUtilTest.testNoBreakSpace();opennlp.tools.util.StringUtil.isWhitespace(int);1.0
opennlp.tools.util.StringUtilTest.testNoBreakSpace();opennlp.tools.util.StringUtil.isWhitespace(char);0.9344499707221985
opennlp.tools.postag.POSSampleTest.testParseWithError();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.ml.model.Event.getOutcome();1.0
opennlp.tools.postag.POSSampleEventStreamTest.testOutcomesForSingleSentence();opennlp.tools.util.AbstractEventStream.close();0.8025372624397278
opennlp.tools.namefind.NameSampleDataStreamTest.testHtmlNameSampleParsing();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithInvalidChar1();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.namefind.NameSampleTest.testParseWithAdditionalSpace();opennlp.tools.namefind.NameSample.getSentence();0.9687876105308533
opennlp.tools.tokenize.TokenizerMETest.testTokenizerSimpleModel();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.sentdetect.SentenceDetectorEvaluatorTest.testNegative();opennlp.tools.sentdetect.SentenceDetectorEvaluator.getFMeasure();0.8488719463348389
opennlp.tools.tokenize.WhitespaceTokenizerTest.testOneToken();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithNewLine();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);1.0
opennlp.tools.tokenize.SimpleTokenizerTest.testWhitespaceTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.util.featuregen.TokenPatternFeatureGeneratorTest.testSentence();opennlp.tools.util.featuregen.TokenPatternFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.cmdline.postag.POSEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.postag.POSEvaluator.<init>(opennlp.tools.postag.POSTagger, opennlp.tools.postag.POSTaggerEvaluationMonitor[]);1.0
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Mean.<init>();0.9806311726570129
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9633313417434692
opennlp.tools.postag.POSEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9602987170219421
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.Span.getCoveredText(java.lang.CharSequence);0.9629365801811218
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8494025468826294
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSampleStream.read();0.8395898342132568
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.tokenize.TokenSample.getText();0.8296897411346436
opennlp.tools.tokenize.TokenSampleStreamTest.testParsingSeparatedString();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.8109899163246155
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.BratDocument.parseDocument(opennlp.tools.formats.brat.AnnotationConfiguration, java.lang.String, java.io.InputStream, java.io.InputStream);1.0
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.util.Span.getStart();0.9500953555107117
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.BratDocument.getAnnotation(java.lang.String);0.9045470952987671
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.util.Span.getEnd();0.8903869390487671
opennlp.tools.formats.brat.BratDocumentTest.testSpanWithMultiFragments();opennlp.tools.formats.brat.SpanAnnotation.getSpans();0.8825212717056274
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.util.Span.getType();1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);0.9645626544952393
opennlp.tools.namefind.NameSampleTypeFilterTest.testMultiFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.904299795627594
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testDefaultEOS();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.sentdetect.DefaultSDContextGeneratorTest.testGetContextWithAbbreviations();opennlp.tools.sentdetect.DefaultSDContextGenerator.getContext(java.lang.CharSequence, int);1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.util.Span.getType();0.997586727142334
opennlp.tools.namefind.NameSampleTest.testTypeWithSpecialChars();opennlp.tools.namefind.NameSample.parse(java.lang.String, boolean);0.853236973285675
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9660764336585999
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.9290192127227783
opennlp.tools.namefind.NameSampleDataStreamTest.testWithNameTypeAndInvalidData();opennlp.tools.namefind.NameSampleDataStream.read();0.927725076675415
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.Evaluator.evaluate(opennlp.tools.util.ObjectStream<T>);1.0
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getRecallScore();0.8508499264717102
opennlp.tools.namefind.DictionaryNameFinderEvaluatorTest.testEvaluator();opennlp.tools.util.eval.FMeasure.getFMeasure();0.8357861638069153
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSampleTypeFilter.<init>(java.lang.String[], opennlp.tools.util.ObjectStream<opennlp.tools.namefind.NameSample>);1.0
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.9375231266021729
opennlp.tools.namefind.NameSampleTypeFilterTest.testNoFilter();opennlp.tools.namefind.NameSample.getNames();0.8814879059791565
opennlp.tools.util.SpanTest.testTrimWhitespaceSpan();opennlp.tools.util.Span.trim(java.lang.CharSequence);1.0
opennlp.tools.tokenize.WhitespaceTokenizerTest.testWhitespaceTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.tokenize.SimpleTokenizerTest.testWordWithOtherTokenization();opennlp.tools.tokenize.AbstractTokenizer.tokenize(java.lang.String);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguage();opennlp.tools.langdetect.LanguageDetectorME.predictLanguage(java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageSampleTest.testHash();opennlp.tools.langdetect.LanguageSample.hashCode();1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.AbstractModel.equals(java.lang.Object);0.9543440937995911
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testModel();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.8617153763771057
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.GradientComputeTask.call();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataInParallel();opennlp.tools.ml.maxent.quasinewton.ParallelNegLogLikelihood.NegLLComputeTask.call();1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.AbstractModelReader.getModel();1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.941640317440033
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.maxent.quasinewton.QNModel.eval(java.lang.String[]);0.8819765448570251
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testSerdeModel();opennlp.tools.ml.model.AbstractModel.equals(java.lang.Object);0.816813588142395
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNModel.eval(java.lang.String[]);0.9620798826217651
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);0.9252015352249146
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, boolean);0.8916305303573608
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.maxent.quasinewton.QNTrainer.<init>(int, int, boolean);0.8871111273765564
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.8834182620048523
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.8834182620048523
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.8662519454956055
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.8611581921577454
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.AbstractEventTrainer.<init>();0.8280311226844788
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testInTinyDevSet();opennlp.tools.ml.AbstractTrainer.<init>();0.8280311226844788
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachData();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9098168611526489
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9396172165870667
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithL1Params();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.8177275657653809
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9428163170814514
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithElasticNetParams();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.8569206595420837
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);1.0
opennlp.tools.ml.maxent.quasinewton.QNPrepAttachTest.testQNOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.9303508400917053
opennlp.tools.ml.maxent.quasinewton.QNTrainerTest.testTrainModelReturnsAQNModel();opennlp.tools.ml.maxent.quasinewton.QNTrainer.trainModel(int, opennlp.tools.ml.model.DataIndexer);1.0
opennlp.tools.util.featuregen.CharacterNgramFeatureGeneratorTest.testDefault();opennlp.tools.util.featuregen.CharacterNgramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.tokenize.TokenSampleTest.testCreationWithDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[], java.lang.String);1.0
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileMissingCount();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileMissingCount();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.8683657646179199
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSerialization();opennlp.tools.tokenize.DetokenizationDictionary.serialize(java.io.OutputStream);1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.create(java.lang.String, java.lang.String, boolean, opennlp.tools.dictionary.Dictionary, char[]);1.0
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.SentenceDetectorFactory.getEOSCharacters();0.9222544431686401
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getAbbreviationDictionary();0.8896309733390808
opennlp.tools.sentdetect.SentenceDetectorFactoryTest.testCreateDummyFactory();opennlp.tools.sentdetect.DummySentenceDetectorFactory.getSDContextGenerator();0.8374612331390381
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testSerializedNGramLanguageModel();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9377292394638062
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileNotANumber();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.ngram.NGramModelTest.testFromInvalidFileNotANumber();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.9721267223358154
opennlp.tools.ngram.NGramModelTest.testSerialize();opennlp.tools.ngram.NGramModel.serialize(java.io.OutputStream);1.0
opennlp.tools.ngram.NGramModelTest.testFromFile();opennlp.tools.dictionary.Dictionary.size();0.9999999403953552
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.serialize(java.io.OutputStream);1.0
opennlp.tools.dictionary.DictionaryTest.testSerialization();opennlp.tools.dictionary.Dictionary.equals(java.lang.Object);0.8706315755844116
opennlp.tools.postag.POSDictionaryTest.testToString();opennlp.tools.postag.POSDictionary.toString();1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizeToString2();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[], java.lang.String);1.0
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.read();1.0
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.AbstractEventStream.close();0.9429384469985962
opennlp.tools.util.AbstractEventStreamTest.testStandardCase();opennlp.tools.util.CollectionObjectStream.reset();0.9407072067260742
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.AbstractEventStream.read();0.9999999403953552
opennlp.tools.util.AbstractEventStreamTest.testEmtpyEventStream();opennlp.tools.util.CollectionObjectStream.reset();0.8251802921295166
opennlp.tools.chunker.ChunkerModelTest.test170DefaultFactory();opennlp.tools.util.model.BaseModel.loadModel(java.io.InputStream);1.0
opennlp.tools.formats.brat.BratNameSampleStreamTest.emptySample();opennlp.tools.formats.brat.BratDocumentStream.reset();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TestSampleStream.read();0.9999999403953552
opennlp.tools.util.eval.CrossValidationPartitionerTest.test3FoldCV();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.read();0.994715690612793
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.CollectionObjectStream.reset();0.9240760207176208
opennlp.tools.util.eval.CrossValidationPartitionerTest.testEmptyDataSet();opennlp.tools.util.eval.CrossValidationPartitioner.TrainingSampleStream.read();0.8268490433692932
opennlp.tools.util.eval.CrossValidationPartitionerTest.testFailSafty();opennlp.tools.util.eval.CrossValidationPartitioner.hasNext();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.PrepAttachDataUtil.createTrainingStream();0.93004310131073
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.8689947724342346
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8438433408737183
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParams();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.8360612392425537
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature5();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(java.lang.String[], float[]);0.8516148924827576
opennlp.tools.ml.maxent.RealValueModelTest.testRealValuedWeightsVsRepeatWeighting();opennlp.tools.ml.maxent.GISModel.eval(java.lang.String[]);0.8292615413665771
opennlp.tools.ml.maxent.ScaleDoesntMatterTest.testScaleResults();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature3();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.PrepAttachDataUtil.testModel(opennlp.tools.ml.model.MaxentModel, double);0.9418222904205322
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsDefault();opennlp.tools.ml.model.MutableContext.updateParameter(int, double);0.8336868286132812
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature2();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature1();opennlp.tools.ml.AbstractEventTrainer.train(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.setGaussianSigma(double);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.trainModel(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9739460349082947
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.ArrayMath.argmax(double[]);0.9055733680725098
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8476216197013855
opennlp.tools.ml.maxent.GISIndexingTest.testGISTrainSignature4();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.840025782585144
opennlp.tools.ml.maxent.MaxentPrepAttachTest.testMaxentOnPrepAttachDataWithParamsLLThreshold();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();1.0
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.model.Context.getParameters();1.0
opennlp.tools.ml.maxent.GISTrainerTest.testGaussianSmoothing();opennlp.tools.ml.maxent.GISTrainer.ModelExpectationComputeTask.call();0.8055896759033203
opennlp.tools.ngram.NGramUtilsTest.testGetNGrams();opennlp.tools.ngram.NGramUtils.getNGrams(opennlp.tools.util.StringList, int);1.0
opennlp.tools.postag.DefaultPOSContextGeneratorTest.dictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.8927692174911499
opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.8919564485549927
opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.9999999403953552
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.9415478110313416
opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.8401510715484619
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.8413513898849487
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.8296893239021301
opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.816230833530426
opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);0.9316906929016113
opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.9965831637382507
opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
opennlp.tools.util.StringList.<init>(java.lang.String);opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);0.9999999403953552
opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);opennlp.tools.util.StringList.<init>(java.lang.String);1.0
opennlp.tools.postag.DefaultPOSContextGeneratorTest.noDictionaryMatch();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.9864412546157837
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9642804265022278
[ASSERT] org.junit.Assert.assertArrayEquals;opennlp.tools.util.StringList.<init>(java.lang.String);0.884089469909668
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.hasNext();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.9054575562477112
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.iterator();0.8073874711990356
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEqualsDifferentCase();null.size();0.8029568791389465
opennlp.tools.util.StringListTest.testCompareToIgnoreCase();opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.util.Span.getEnd();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseSensitivity();opennlp.tools.util.Span.getStart();0.9031089544296265
opennlp.tools.ngram.NGramModelTest.testToDictionary();opennlp.tools.ngram.NGramModel.toDictionary();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();null.contains(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.asStringSet();0.8137500882148743
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testIterator();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testLookup();null.contains(java.lang.Object);0.9952400326728821
opennlp.tools.namefind.DictionaryNameFinderTest.testLongerTokenNameIsPreferred();opennlp.tools.util.Span.getEnd();1.0
opennlp.tools.dictionary.DictionaryTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSet();null.size();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.util.Span.getEnd();1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testLastMatchingTokenNameIsChoosen();opennlp.tools.namefind.DictionaryNameFinder.find(java.lang.String[]);0.9023260474205017
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookup();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9338725805282593
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testEquals();null.hasNext();0.9082676768302917
opennlp.tools.dictionary.DictionaryTest.testEquals();opennlp.tools.dictionary.Dictionary.equals(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryTest.testParseOneEntryPerLine();opennlp.tools.dictionary.Dictionary.parseOneEntryPerLine(java.io.Reader);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();null.contains(java.lang.Object);0.8407446146011353
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.8039588928222656
opennlp.tools.postag.DefaultPOSContextGeneratorTest.multithreading();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.namefind.DictionaryNameFinderTest.testCaseLongerEntry();opennlp.tools.util.Span.length();1.0
opennlp.tools.ml.model.OnePassDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.ml.model.TwoPassDataIndexerTest.testIndex();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9999999403953552
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.OnePassRealValueDataIndexer.getValues();1.0
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndexValues();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9321283102035522
opennlp.tools.ml.model.OnePassRealValueDataIndexerTest.testIndex();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);1.0
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.getContext(int, java.lang.String[], java.lang.String[], java.lang.Object[]);1.0
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithoutCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>();0.8086405992507935
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.getContext(int, java.lang.String[], java.lang.String[], java.lang.Object[]);1.0
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>();0.8864604830741882
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.postag.ConfigurablePOSContextGenerator.<init>(int, opennlp.tools.util.featuregen.AdaptiveFeatureGenerator);0.8754369616508484
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.featuregen.TokenFeatureGenerator.<init>(boolean);0.8588427305221558
opennlp.tools.postag.ConfigurablePOSContextGeneratorTest.testWithCache();opennlp.tools.util.Cache.<init>(int);0.858098030090332
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.nkjp.NKJPSegmentationDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.nkjp.NKJPSegmentationDocument.getSegments();0.9927272796630859
opennlp.tools.lemmatizer.LemmatizerMETest.testLemmasAsArray();opennlp.tools.lemmatizer.LemmatizerME.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.langdetect.LanguageSampleTest.testToString();opennlp.tools.langdetect.LanguageSample.toString();1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testPredictLanguages();opennlp.tools.langdetect.LanguageDetectorME.predictLanguages(java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageTest.emptyLanguage();opennlp.tools.langdetect.Language.<init>(java.lang.String);1.0
opennlp.tools.langdetect.LanguageTest.emptyLanguage();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9946486949920654
opennlp.tools.langdetect.LanguageTest.emptyConfidence();opennlp.tools.langdetect.Language.getConfidence();1.0
opennlp.tools.langdetect.LanguageSampleTest.testEquals();opennlp.tools.langdetect.LanguageSample.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageTest.testHash();opennlp.tools.langdetect.Language.hashCode();1.0
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.LanguageSample.getLanguage();0.9999999403953552
opennlp.tools.langdetect.LanguageSampleTest.testLanguageSampleSerDe();opennlp.tools.langdetect.Language.equals(java.lang.Object);0.8686107397079468
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);1.0
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.Language.<init>(java.lang.String);0.9930844306945801
opennlp.tools.langdetect.LanguageSampleTest.testNullContext();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);0.9879178404808044
opennlp.tools.langdetect.LanguageTest.nonEmptyConfidence();opennlp.tools.langdetect.Language.getConfidence();1.0
opennlp.tools.langdetect.LanguageTest.testToString();opennlp.tools.langdetect.Language.toString();1.0
opennlp.tools.langdetect.LanguageTest.testEquals();opennlp.tools.langdetect.Language.equals(java.lang.Object);1.0
opennlp.tools.langdetect.LanguageTest.emptyLanguageConfidence();opennlp.tools.langdetect.Language.<init>(java.lang.String, double);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testReadSentenceFiles();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.read();1.0
opennlp.tools.langdetect.LanguageSampleTest.testConstructor();opennlp.tools.langdetect.LanguageSample.getContext();1.0
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.TrainerFactory.getEventTrainer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);1.0
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.AbstractEventTrainer.getDataIndexer(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9419010281562805
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getNumEvents();0.8668149709701538
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.ml.model.AbstractDataIndexer.getPredLabels();0.8394866585731506
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingWithTrainingParameters();opennlp.tools.util.TrainingParameters.defaultParams();0.8193680047988892
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.util.Sequence.getProbs();1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.chunker.ChunkerME.topKSequences(java.lang.String[], java.lang.String[], double);0.9550787210464478
opennlp.tools.chunker.ChunkerMETest.testTokenProbMinScore();opennlp.tools.util.Sequence.getOutcomes();0.8371101021766663
opennlp.tools.chunker.ChunkerMETest.testChunkAsSpan();opennlp.tools.chunker.ChunkerME.chunkAsSpans(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.langdetect.LanguageDetectorMETest.testSupportedLanguages();opennlp.tools.langdetect.LanguageDetectorME.getSupportedLanguages();1.0
opennlp.tools.chunker.ChunkerMETest.testChunkAsArray();opennlp.tools.chunker.ChunkerME.chunk(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbArray();opennlp.tools.util.Sequence.getProbs();1.0
opennlp.tools.chunker.ChunkerMETest.testTokenProbArray();opennlp.tools.chunker.ChunkerME.topKSequences(java.lang.String[], java.lang.String[]);0.8676035404205322
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleList();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleList();opennlp.tools.chunker.ChunkSample.<init>(java.util.List<java.lang.String>, java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.8437724709510803
opennlp.tools.cmdline.CLITest.testUnknownFileMessage();opennlp.tools.cmdline.CLI.main(java.lang.String[]);1.0
opennlp.tools.cmdline.CLITest.testUnknownFileMessage();opennlp.tools.cmdline.TerminateToolException.getMessage();0.9393491744995117
opennlp.tools.cmdline.TerminateToolExceptionTest.testCreation();opennlp.tools.cmdline.TerminateToolException.getCode();1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.BasicCmdLineTool.<init>();1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.CmdLineTool.<init>();1.0
opennlp.tools.cmdline.TokenNameFinderToolTest.invalidModel();opennlp.tools.cmdline.namefind.TokenNameFinderTool.<init>();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();0.955992579460144
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testDomainDimensionSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getDimension();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testGradientAtNonInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.gradientAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtInitialPoint();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();0.8366073369979858
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testInitialSanity();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.getInitialPoint();1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint01();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);1.0
opennlp.tools.ml.maxent.quasinewton.NegLogLikelihoodTest.testValueAtNonInitialPoint02();opennlp.tools.ml.maxent.quasinewton.NegLogLikelihood.valueAt(double[]);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.tokenizer.TokenEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.TokenizerEvaluator.<init>(opennlp.tools.tokenize.Tokenizer, opennlp.tools.tokenize.TokenizerEvaluationMonitor[]);1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9633313417434692
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9612528085708618
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9602987170219421
opennlp.tools.tokenize.TokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.8972141742706299
opennlp.tools.formats.ad.ADTokenSampleStreamTest.testSentences();opennlp.tools.tokenize.TokenSample.getText();1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.tokenize.DetokenizerEvaluator.<init>(opennlp.tools.tokenize.Detokenizer, opennlp.tools.cmdline.tokenizer.DetokenEvaluationErrorListener[]);1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9633313417434692
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9612528085708618
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9602987170219421
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.8972141742706299
opennlp.tools.tokenize.TokenSampleTest.testEquals();opennlp.tools.tokenize.TokenSample.equals(java.lang.Object);1.0
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.getText();1.0
opennlp.tools.tokenize.TokenSampleTest.testRetrievingContent();opennlp.tools.tokenize.TokenSample.getTokenSpans();0.8896555304527283
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.tokenize.DetokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.DetokenizerEvaluator.getFMeasure();0.8488719463348389
opennlp.tools.tokenize.TokenSampleTest.testTokenSampleSerDe();opennlp.tools.tokenize.TokenSample.getTokenSpans();1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.tokenize.TokenizerEvaluatorTest.testNegative();opennlp.tools.tokenize.TokenizerEvaluator.getFMeasure();0.8488719463348389
opennlp.tools.util.SpanTest.testStartsWith();opennlp.tools.util.Span.startsWith(opennlp.tools.util.Span);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getIterations();1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getAlphaNumOpt();0.9935266971588135
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.ArgumentParser.parse(java.lang.String[], java.lang.Class<T>);0.8412020206451416
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getCutoff();0.8348309397697449
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArguments();opennlp.tools.cmdline.$Proxy12.getEncoding();0.8205505013465881
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getRecallScore();0.8232095241546631
opennlp.tools.util.eval.FMeasureTest.testEmpty();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.8193579912185669
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getFMeasure();1.0
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getRecallScore();0.9713656902313232
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.getPrecisionScore();0.8930925130844116
opennlp.tools.util.eval.FMeasureTest.testPerfect();opennlp.tools.util.eval.FMeasure.updateScores(java.lang.Object[], java.lang.Object[]);0.8654120564460754
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.cmdline.namefind.NameEvaluationErrorListener.<init>(java.io.OutputStream);1.0
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.namefind.TokenNameFinderEvaluator.<init>(opennlp.tools.namefind.TokenNameFinder, opennlp.tools.namefind.TokenNameFinderEvaluationMonitor[]);0.9906601309776306
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.cmdline.EvaluationErrorPrinter.<init>(java.io.OutputStream);0.9693857431411743
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.<init>();0.9672303795814514
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.Evaluator.<init>(opennlp.tools.util.eval.EvaluationMonitor<T>[]);0.9662410020828247
opennlp.tools.namefind.TokenNameFinderEvaluatorTest.testPositive();opennlp.tools.util.eval.FMeasure.getFMeasure();0.9035134315490723
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.mergeInto(opennlp.tools.util.eval.FMeasure);1.0
opennlp.tools.util.eval.FMeasureTest.testMerge();opennlp.tools.util.eval.FMeasure.getRecallScore();0.8032575249671936
opennlp.tools.util.VersionTest.testParse();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.util.VersionTest.testParseSnapshot();opennlp.tools.util.Version.parse(java.lang.String);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9999999403953552
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.TwoPassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9777011275291443
opennlp.tools.ml.maxent.GISIndexingTest.testIndexingFactory();opennlp.tools.ml.model.DataIndexerFactory.getDataIndexer(opennlp.tools.util.TrainingParameters, java.util.Map<java.lang.String, java.lang.String>);0.804508626461029
opennlp.tools.util.featuregen.StringPatternTest.testContainsHyphen();opennlp.tools.util.featuregen.StringPattern.containsHyphen();1.0
opennlp.tools.util.featuregen.FeatureGeneratorUtilTest.test();opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(java.lang.String);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomSentence();1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.LanguageModelTestUtils.generateRandomVocabulary(int);0.9605374336242676
opennlp.tools.languagemodel.NgramLanguageModelTest.testRandomVocabularyAndSentence();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9274516105651855
opennlp.tools.languagemodel.NgramLanguageModelTest.testEmptyVocabularyProbability();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequence();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceZeroLengthInput();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceOneElementInput();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllHiragana();opennlp.tools.util.featuregen.StringPattern.isAllHiragana();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllKatakana();opennlp.tools.util.featuregen.StringPattern.isAllKatakana();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLetters();opennlp.tools.util.featuregen.StringPattern.isAllLetter();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8571428656578064
opennlp.tools.util.featuregen.StringPatternTest.testContainsComma();opennlp.tools.util.featuregen.StringPattern.containsComma();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllDigit();opennlp.tools.util.featuregen.StringPattern.isAllDigit();1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsLetters();opennlp.tools.util.featuregen.StringPattern.containsLetters();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testEnd();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8536088466644287
opennlp.tools.util.featuregen.StringPatternTest.testIsAllCapitalLetter();opennlp.tools.util.featuregen.StringPattern.isAllCapitalLetter();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8571428656578064
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testGenWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9999999403953552
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testGenWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);0.8981295824050903
opennlp.tools.util.featuregen.StringPatternTest.testContainsDigit();opennlp.tools.util.featuregen.StringPattern.containsDigit();1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsInitialCapitalLetter();opennlp.tools.util.featuregen.StringPattern.isInitialCapitalLetter();1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testOnlyLetterTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.util.featuregen.StringPatternTest.testContainsPeriod();opennlp.tools.util.featuregen.StringPattern.containsPeriod();1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.<init>();0.9722222089767456
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.StringPatternTest.testDigits();opennlp.tools.util.featuregen.StringPattern.digits();1.0
opennlp.tools.util.featuregen.FeatureGeneratorUtilTest.testJapanese();opennlp.tools.util.featuregen.FeatureGeneratorUtil.tokenFeature(java.lang.String);1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testShort();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();0.9755740761756897
opennlp.tools.util.featuregen.StringPatternTest.testContainsSlash();opennlp.tools.util.featuregen.StringPattern.containsSlash();1.0
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testNoWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenClassFeatureGeneratorTest.testNoWAC();opennlp.tools.util.featuregen.TokenClassFeatureGenerator.<init>(boolean);0.8492600321769714
opennlp.tools.util.featuregen.TrigramNameFeatureGeneratorTest.testNextOfBegin();opennlp.tools.util.featuregen.TrigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.StringPatternTest.testIsAllLowerCaseLetter();opennlp.tools.util.featuregen.StringPattern.isAllLowerCaseLetter();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.BigramNameFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.BigramNameFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8536088466644287
opennlp.tools.util.StringUtilTest.testIsEmptyWithNullString();opennlp.tools.util.StringUtil.isEmpty(java.lang.CharSequence);1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.namefind.NameSample.getSentence();0.9015638828277588
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSample();opennlp.tools.formats.Conll03NameSampleStream.read();0.8759042024612427
opennlp.tools.formats.EvalitaNameSampleStreamTest.testReset();opennlp.tools.formats.EvalitaNameSampleStream.reset();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSampleWithGermanAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.read();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.getSentence();0.9356828927993774
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.formats.Conll03NameSampleStream.read();0.9144574999809265
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.util.Span.getStart();0.8550767302513123
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingEnglishSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.8290265202522278
opennlp.tools.formats.Conll03NameSampleStreamTest.testParsingGermanSampleWithEnglishAsLanguage();opennlp.tools.formats.Conll03NameSampleStream.read();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9075894355773926
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingDutchSample();opennlp.tools.formats.Conll02NameSampleStream.read();0.8281762003898621
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.getNames();0.9999999403953552
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.9038004875183105
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.namefind.NameSample.getSentence();0.8939980268478394
opennlp.tools.formats.Conll02NameSampleStreamTest.testParsingSpanishSample();opennlp.tools.formats.Conll02NameSampleStream.read();0.8248724937438965
opennlp.tools.formats.Conll02NameSampleStreamTest.testReset();opennlp.tools.formats.Conll02NameSampleStream.reset();1.0
opennlp.tools.util.StringUtilTest.testIsEmpty();opennlp.tools.util.StringUtil.isEmpty(java.lang.CharSequence);1.0
opennlp.tools.formats.Conll03NameSampleStreamTest.testReset();opennlp.tools.formats.Conll03NameSampleStream.reset();1.0
opennlp.tools.formats.NameFinderCensus90NameStreamTest.testParsingEnglishSample();opennlp.tools.formats.NameFinderCensus90NameStream.read();1.0
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.getSentence();0.902895987033844
opennlp.tools.formats.EvalitaNameSampleStreamTest.testParsingItalianSample();opennlp.tools.namefind.NameSample.isClearAdaptiveDataSet();0.864713728427887
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);0.8966079950332642
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTT();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);0.8966079950332642
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testTF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.<init>(boolean, boolean);0.8966079950332642
opennlp.tools.util.featuregen.SentenceFeatureGeneratorTest.testFF();opennlp.tools.util.featuregen.SentenceFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.parse(java.io.InputStream);1.0
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.getSentences();0.9466666579246521
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.LetsmtSentence.getNonTokenizedText();0.8778947591781616
opennlp.tools.formats.letsmt.LetsmtDocumentTest.testParsingSimpleDoc();opennlp.tools.formats.letsmt.LetsmtDocument.LetsmtSentence.getTokens();0.8666666746139526
opennlp.tools.chunker.ChunkSampleTest.testInvalidChunkSampleArray();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);1.0
opennlp.tools.chunker.ChunkSampleTest.testToString();opennlp.tools.chunker.ChunkSample.toString();1.0
opennlp.tools.chunker.ChunkSampleTest.testParameterValidation();opennlp.tools.chunker.ChunkSample.validateArguments(int, int, int);1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.964984655380249
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWithoutWindow();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8370431661605835
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtBeginOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.IdentityFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.WindowFeatureGenerator.<init>(opennlp.tools.util.featuregen.AdaptiveFeatureGenerator, int, int);0.964984655380249
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowSizeOne();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8084718585014343
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testWindowAtEndOfSentence();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.WindowFeatureGeneratorTest.testForCorrectFeatures();opennlp.tools.util.featuregen.WindowFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getDeprel();1.0
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getId();0.9747202396392822
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getLemma();0.9256215691566467
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getDeps();0.8430696129798889
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getHead();0.8430696129798889
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getMisc();0.8430696129798889
opennlp.tools.formats.conllu.ConlluWordLineTest.testParseLine();opennlp.tools.formats.conllu.ConlluWordLine.getFeats();0.828357458114624
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionaryInsensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testPOSDictionarySensitive();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.morfologik.tagdict.MorfologikTagDictionaryTest.testNoLemma();opennlp.morfologik.tagdict.MorfologikTagDictionary.getTags(java.lang.String);1.0
opennlp.tools.util.eval.MeanTest.testMeanCalculation();opennlp.tools.util.eval.Mean.mean();1.0
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerTrue();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithTokenClassFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8552693128585815
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWihtSimpleDescriptor();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testParameters();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGenerator();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);0.8272790312767029
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithCustomGenerator();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testAutomaticallyInsertAggregatedFeatureGeneratorChildren();opennlp.tools.util.featuregen.AggregatedFeatureGenerator.getGenerators();0.8520993590354919
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testCreationWithUnkownElement();opennlp.tools.util.featuregen.GeneratorFactory.create(java.io.InputStream, opennlp.tools.util.featuregen.FeatureGeneratorResourceProvider);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testNotAutomaticallyInsertAggregatedFeatureGeneratorChild();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testInsertCachedFeatureGenerator();opennlp.tools.util.featuregen.CachedFeatureGenerator.getCachedFeatureGenerator();1.0
opennlp.tools.langdetect.DefaultLanguageDetectorContextGeneratorTest.extractContext();opennlp.tools.langdetect.DefaultLanguageDetectorContextGenerator.getContext(java.lang.CharSequence);1.0
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation2();opennlp.tools.ngram.NGramUtils.calculateTrigramLinearInterpolationProbability(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>, java.lang.Double, java.lang.Double, java.lang.Double);1.0
opennlp.tools.ngram.NGramUtilsTest.testLinearInterpolation();opennlp.tools.ngram.NGramUtils.calculateTrigramLinearInterpolationProbability(java.lang.String, java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>, java.lang.Double, java.lang.Double, java.lang.Double);1.0
opennlp.tools.util.featuregen.PreviousMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousMapFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.formats.leipzig.LeipzigLanguageSampleStreamTest.testNotEnoughSentences();opennlp.tools.formats.leipzig.LeipzigLanguageSampleStream.reset();1.0
opennlp.tools.util.SequenceTest.testToString();opennlp.tools.util.Sequence.toString();1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testTokensAreCorrect();opennlp.tools.parser.Parse.getCoveredText();1.0
opennlp.tools.parser.ParseTest.testGetTagNodes();opennlp.tools.parser.Parse.getTagNodes();1.0
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.getSentence();1.0
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.parser.PosSampleStream.read();0.9509246945381165
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.postag.POSSample.getTags();0.9247422218322754
opennlp.tools.parser.PosSampleStreamTest.testConvertParseToPosSample();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.86183762550354
opennlp.tools.dictionary.DictionaryTest.testToString();opennlp.tools.dictionary.Dictionary.toString();1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.uima.dictionary.DictionaryResourceImpl.getDictionary();1.0
opennlp.uima.dictionary.DictionaryResourceTest.testDictionaryWasLoaded();opennlp.tools.dictionary.Dictionary.toString();0.8316990733146667
opennlp.tools.convert.FileToStringSampleStreamTest.readFileTest();opennlp.tools.formats.convert.FileToStringSampleStream.read();1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheHits();0.9228005409240723
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCacheClearAfterSentenceChange();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheMisses();0.9117726683616638
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheMisses();0.9436681270599365
opennlp.tools.util.featuregen.CachedFeatureGeneratorTest.testCachingOfSentence();opennlp.tools.util.featuregen.CachedFeatureGenerator.getNumberOfCacheHits();0.9040233492851257
opennlp.tools.parser.ParseSampleStreamTest.testReadTestStream();opennlp.tools.parser.ParseSampleStream.read();1.0
opennlp.tools.util.PlainTextByLineStreamTest.testReset();opennlp.tools.util.PlainTextByLineStream.reset();1.0
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.reset();1.0
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.read();0.9206274747848511
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String);0.8730971813201904
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.MockInputStreamFactory.<init>(java.lang.String, java.nio.charset.Charset);0.8730971813201904
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.<init>(opennlp.tools.util.InputStreamFactory, java.nio.charset.Charset);0.8147975206375122
opennlp.tools.util.PlainTextByLineStreamTest.testLineSegmentation();opennlp.tools.util.PlainTextByLineStream.close();0.8139556646347046
opennlp.tools.cmdline.TokenNameFinderToolTest.usage();opennlp.tools.cmdline.namefind.TokenNameFinderTool.getHelp();1.0
opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizerTest.normalizeSpace();opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizerTest.normalizeChar();opennlp.tools.util.normalizer.ShrinkCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.parse(java.lang.String);1.0
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.getSentence();0.8387374877929688
opennlp.tools.postag.POSSampleTest.testParseEmptyString();opennlp.tools.postag.POSSample.getTags();0.8255664110183716
opennlp.tools.ngram.NGramModelTest.testCutoff2();opennlp.tools.ngram.NGramModel.cutoff(int, int);1.0
opennlp.tools.ngram.NGramModelTest.testAdd1();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testToDictionary1();opennlp.tools.ngram.NGramModel.toDictionary(boolean);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.9343096017837524
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigram();opennlp.tools.ngram.NGramUtils.getNGrams(java.lang.String[], int);0.8268832564353943
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigramProbability();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.LanguageModelEvaluationTest.testPerplexityComparison();opennlp.tools.languagemodel.LanguageModelTestUtils.getPerplexity(opennlp.tools.languagemodel.LanguageModel, java.util.Collection<java.lang.String[]>, int);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.<init>(int);0.9544596672058105
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.ngram.NGramModel.<init>();0.9223505854606628
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);0.9007850289344788
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.8943577408790588
opennlp.tools.languagemodel.NgramLanguageModelTest.testBigram();opennlp.tools.ngram.NGramUtils.getNGrams(java.lang.String[], int);0.8794541954994202
opennlp.tools.ngram.NGramModelTest.testCutoff1();opennlp.tools.ngram.NGramModel.cutoff(int, int);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.9999999403953552
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.9737499952316284
opennlp.tools.languagemodel.NgramLanguageModelTest.testTrigramLanguageModelCreationFromText();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);0.8466497659683228
opennlp.tools.ngram.NGramModelTest.testZeroGetCount();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.add(java.lang.String[]);1.0
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.predictNextTokens(java.lang.String[]);0.9532273411750793
opennlp.tools.languagemodel.NgramLanguageModelTest.testNgramModel();opennlp.tools.languagemodel.NGramLanguageModel.calculateProbability(java.lang.String[]);0.944821834564209
opennlp.tools.ngram.NGramModelTest.testNumberOfGrams();opennlp.tools.ngram.NGramModel.numberOfGrams();1.0
opennlp.tools.ngram.NGramModelTest.testAdd();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testAdd3();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);1.0
opennlp.tools.ngram.NGramModelTest.testAdd2();opennlp.tools.ngram.NGramModel.add(opennlp.tools.util.StringList, int, int);1.0
opennlp.tools.ngram.NGramModelTest.testZeroGetCount2();opennlp.tools.ngram.NGramModel.getCount(opennlp.tools.util.StringList);1.0
opennlp.tools.namefind.BilouCodecTest.testCreateSequenceValidator();opennlp.tools.namefind.BilouCodec.createSequenceValidator();1.0
opennlp.tools.util.eval.CrossValidationPartitionerTest.testToString();opennlp.tools.util.eval.CrossValidationPartitioner.toString();1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.formats.frenchtreebank.ConstitParseSampleStream.read();1.0
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.XmlUtil.createSaxParser();0.9310113787651062
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.FilterObjectStream.close();0.9093822836875916
opennlp.tools.formats.frenchtreebank.ConstitParseSampleStreamTest.testThereIsExactlyOneSent();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8407315611839294
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.close();1.0
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.OnePassDataIndexer.index(opennlp.tools.util.ObjectStream<opennlp.tools.ml.model.Event>);0.9735962748527527
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.AbstractDataIndexer.getOutcomeLabels();0.9501621723175049
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String);0.8434959053993225
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.RealValueFileEventStream.<init>(java.lang.String);0.8434959053993225
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.lang.String, java.lang.String);0.8268502354621887
opennlp.tools.ml.maxent.io.RealValueFileEventStreamTest.testLastLineBug();opennlp.tools.ml.model.FileEventStream.<init>(java.io.Reader);0.821911096572876
opennlp.tools.util.ObjectStreamUtilsTest.buildStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);1.0
opennlp.tools.util.ObjectStreamUtilsTest.buildStreamTest();opennlp.tools.util.ObjectStreamUtils.createObjectStream(java.util.Collection<T>);0.9801093935966492
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.concatenateObjectStream(java.util.Collection<opennlp.tools.util.ObjectStream<T>>);1.0
opennlp.tools.util.ObjectStreamUtilsTest.concatenateStreamTest();opennlp.tools.util.ObjectStreamUtils.concatenateObjectStream(opennlp.tools.util.ObjectStream<T>[]);1.0
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.FilterObjectStream.close();0.9999999403953552
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.formats.muc.DocumentSplitterStream.<init>(opennlp.tools.util.ObjectStream<java.lang.String>);0.9528765678405762
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.formats.muc.DocumentSplitterStream.read();0.9128910899162292
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.ObjectStreamUtils.createObjectStream(T[]);0.8814008235931396
opennlp.tools.formats.muc.DocumentSplitterStreamTest.testSplitTwoDocuments();opennlp.tools.util.FilterObjectStream.<init>(opennlp.tools.util.ObjectStream<S>);0.8664242625236511
opennlp.tools.namefind.BilouCodecTest.testDecodeOtherFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeEmpty();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletContinuationFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeTripletFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeSingletonFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodeMultiClass();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BilouCodecTest.testDecodePairFirst();opennlp.tools.namefind.BilouCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeOtherFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.util.SpanTest.testhHashCode();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.parser.ParseTest.testParseClone();opennlp.tools.parser.Parse.clone();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testRetrievingContent();opennlp.tools.sentdetect.SentenceSample.getDocument();0.9660126566886902
opennlp.tools.parser.ParseTest.testGetText();opennlp.tools.parser.Parse.getText();1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.util.Span.getEnd();0.8356499075889587
opennlp.tools.namefind.RegexNameFinderTest.testFindSingleTokenPattern();opennlp.tools.util.Span.getStart();0.8034548759460449
opennlp.tools.namefind.BioCodecTest.testDecodeSingletonFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.parser.ParseTest.testToHashCode();opennlp.tools.parser.Parse.hashCode();1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeTripleTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.util.SpanTest.testContainsWithHigherIntersect();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.parser.ParseTest.testShow();opennlp.tools.parser.Parse.show(java.lang.StringBuffer);1.0
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.sentdetect.SentenceSample.<init>(java.lang.CharSequence, opennlp.tools.util.Span[]);1.0
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.<init>(int, int);0.9498950839042664
opennlp.tools.sentdetect.SentenceSampleTest.testInvalidSpansFailFast();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9438678622245789
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.NameSampleTest.testNameSampleSerDe();opennlp.tools.namefind.NameSample.getSentence();0.913975179195404
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpanNoType();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentPairSingleton();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.chunker.ChunkSampleTest.testPhraseAsSpan();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.util.SpanTest.testContainsWithEqual();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testToString();opennlp.tools.util.Span.toString();1.0
opennlp.tools.namefind.NameSampleTest.testNoTypesToString();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.util.SpanTest.testCompareToLower();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testCompareToEquals();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testContainsWithLowerIntersect();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.sentdetect.SentenceSampleTest.testEquals();opennlp.tools.sentdetect.SentenceSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.NameFinderMETest.testDropOverlappingSpans();opennlp.tools.namefind.NameFinderME.dropOverlappingSpans(opennlp.tools.util.Span[]);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsSameType();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeMultiClass();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.util.eval.FMeasureTest.testPrecision();opennlp.tools.util.eval.FMeasure.precision(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.formats.ad.ADSentenceSampleStreamTest.testSentences();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.sentdetect.SentenceSample.getSentences();1.0
opennlp.tools.sentdetect.SentenceSampleTest.testSentenceSampleSerDe();opennlp.tools.sentdetect.SentenceSample.getDocument();0.8324916362762451
opennlp.tools.util.SpanTest.testCompareToHigher();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.util.Span.<init>(int, int, java.lang.String);0.853214681148529
opennlp.tools.formats.ad.ADNameSampleStreamTest.testMissingRightContraction();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.8374543786048889
opennlp.tools.namefind.BioCodecTest.testDecodePairFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.toString();1.0
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);0.8171585202217102
opennlp.tools.namefind.NameSampleTest.testOverlappingNameSpans();opennlp.tools.util.Span.getStart();0.8013464212417603
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType2();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.parser.ParseTest.testEquals();opennlp.tools.parser.Parse.equals(java.lang.Object);1.0
opennlp.tools.util.eval.FMeasureTest.testRecall();opennlp.tools.util.eval.FMeasure.recall(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindTokenizdPattern();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testNames();opennlp.tools.namefind.NameSample.getNames();1.0
opennlp.tools.namefind.BioCodecTest.testDecodeTripletFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.util.SpanTest.testContains();opennlp.tools.util.Span.contains(opennlp.tools.util.Span);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeAdjacentUnitSpans();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSpans();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.parser.ParseTest.testToString();opennlp.tools.parser.Parse.toString();1.0
opennlp.tools.namefind.BioCodecTest.testDecodeAdjacentSingletonFirst();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.util.SpanTest.testCompareToEqualsDiffType1();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.namefind.NameSampleTest.testNameAtEnd();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.util.SpanTest.testCompareToEqualsNullType2();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.parser.ParseTest.testTokenReplacement();opennlp.tools.parser.Parse.parseParse(java.lang.String);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeSingleTokenSpan();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testSequentialSpans();opennlp.tools.util.Span.getStart();0.8482835292816162
opennlp.tools.util.SpanTest.testCompareToEqualsNullType1();opennlp.tools.util.Span.compareTo(opennlp.tools.util.Span);1.0
opennlp.tools.namefind.NameSampleTest.testUnsortedSequentialSpans();opennlp.tools.namefind.NameSample.toString();1.0
opennlp.tools.namefind.NameSampleTest.testEquals();opennlp.tools.namefind.NameSample.equals(java.lang.Object);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeDoubleTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeAdjacentSingleSpans();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.util.SpanTest.testEquals();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.util.SpanTest.testGetStart();opennlp.tools.util.Span.getStart();1.0
opennlp.tools.util.eval.FMeasureTest.testCountTruePositives();opennlp.tools.util.eval.FMeasure.countTruePositives(java.lang.Object[], java.lang.Object[]);1.0
opennlp.tools.util.SpanTest.testCrosses();opennlp.tools.util.Span.crosses(opennlp.tools.util.Span);1.0
opennlp.tools.util.SpanTest.testIntersects();opennlp.tools.util.Span.intersects(opennlp.tools.util.Span);1.0
opennlp.tools.util.TrainingParametersTest.testGetParameters();opennlp.tools.util.TrainingParameters.getParameters(java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.emptyTest();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateLargerWindowThanListTest();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest1();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest3();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest4();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateListTest2();opennlp.tools.ngram.NGramGenerator.generate(java.util.List<java.lang.String>, int, java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndNotSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterOther();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueCannotBeFirstOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testOtherIsAlwaysAValidOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterStartAndNotSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testStartIsAlwaysAValidOutcome();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.NameFinderSequenceValidatorTest.testContinueAfterContinueAndSameType();opennlp.tools.namefind.NameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithHierarchy();opennlp.tools.util.BaseToolFactory.create(java.lang.String, opennlp.tools.util.model.ArtifactProvider);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithInvalidName();opennlp.tools.util.BaseToolFactory.create(java.lang.String, opennlp.tools.util.model.ArtifactProvider);1.0
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeInsensitive();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(morfologik.stemming.Dictionary);1.0
opennlp.morfologik.builder.POSDictionayBuilderTest.testBuildDictionary();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.<init>(java.nio.file.Path);0.8333333730697632
opennlp.morfologik.lemmatizer.MorfologikLemmatizerTest.testLemmatizeMultiLemma();opennlp.morfologik.lemmatizer.MorfologikLemmatizer.lemmatize(java.util.List<java.lang.String>, java.util.List<java.lang.String>);1.0
opennlp.tools.util.SequenceTest.testCopyConstructor();opennlp.tools.util.Sequence.compareTo(opennlp.tools.util.Sequence);1.0
opennlp.tools.util.SequenceTest.testAddMethod();opennlp.tools.util.Sequence.add(java.lang.String, double);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithInvalidName2();opennlp.tools.postag.POSTaggerFactory.create(java.lang.String, opennlp.tools.dictionary.Dictionary, opennlp.tools.postag.TagDictionary);1.0
opennlp.tools.postag.POSTaggerFactoryTest.testCreateWithHierarchy2();opennlp.tools.postag.POSTaggerFactory.create(java.lang.String, opennlp.tools.dictionary.Dictionary, opennlp.tools.postag.TagDictionary);1.0
opennlp.tools.util.featuregen.GeneratorFactoryTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.featuregen.GeneratorFactoryClassicFormatTest.testDictionaryArtifactToSerializerMappingExtraction();opennlp.tools.util.featuregen.GeneratorFactory.extractArtifactSerializerMappings(java.io.InputStream);1.0
opennlp.tools.util.SpanTest.testGetEnd();opennlp.tools.util.Span.getEnd();1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeSingleUnitTokenSpan();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testEquals();opennlp.tools.lemmatizer.LemmaSample.equals(java.lang.Object);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getLemmas();1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testLemmaSampleSerDe();opennlp.tools.lemmatizer.LemmaSample.getTags();0.8596480488777161
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getTokens();0.9999999403953552
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getTags();0.8376126885414124
opennlp.tools.lemmatizer.LemmaSampleTest.testRetrievingContent();opennlp.tools.lemmatizer.LemmaSample.getLemmas();0.805130124092102
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testUseAllTokens();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.9999999403953552
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();0.9279590249061584
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.9257631897926331
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>();1.0
opennlp.tools.doccat.BagOfWordsFeatureGeneratorTest.testNull();opennlp.tools.doccat.BagOfWordsFeatureGenerator.<init>(boolean);0.9976337552070618
opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.8112345337867737
opennlp.tools.util.StringList.getToken(int);opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.9999999403953552
opennlp.tools.util.StringList.size();opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
opennlp.tools.util.StringList.size();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);0.8413513898849487
opennlp.tools.util.StringList.size();opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);0.816230833530426
opennlp.tools.util.StringList.toString();opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
opennlp.tools.util.StringList.toString();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);0.8597773909568787
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.986727774143219
opennlp.tools.dictionary.DictionaryTest.testDifferentCaseLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.8309879302978516
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();null.contains(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testDifferentCaseLookup();opennlp.tools.dictionary.Dictionary.asStringSet();0.8137500882148743
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.contains(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.9484176635742188
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.iterator();0.8456945419311523
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.hasNext();0.8423106670379639
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEqualsDifferentCase();null.size();0.8410537242889404
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCode();null.hasNext();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testIterator();null.iterator();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();null.size();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();null.contains(java.lang.Object);0.8407446146011353
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSetDiffCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.8039588928222656
opennlp.tools.dictionary.DictionaryTest.testHashCode();opennlp.tools.dictionary.Dictionary.hashCode();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testEquals();null.hasNext();0.9082676768302917
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();null.hasNext();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseInsensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.816281259059906
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();null.hasNext();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCodeDifferentCase();opennlp.tools.dictionary.Dictionary.asStringSet();0.816281259059906
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testSet();null.size();1.0
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.util.StringList.<init>(java.lang.String[]);0.9491055011749268
opennlp.tools.dictionary.DictionaryTest.testLookupCaseSensitive();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);0.9121236801147461
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testHashCode();null.hasNext();1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testLookup();opennlp.tools.dictionary.Dictionary.put(opennlp.tools.util.StringList);1.0
opennlp.tools.dictionary.DictionaryAsSetCaseSensitiveTest.testLookup();null.contains(java.lang.Object);0.9952400326728821
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.algorithm(java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetAlgorithm();opennlp.tools.util.TrainingParameters.algorithm();0.9917749166488647
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.defaultParams();1.0
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.algorithm();0.9247191548347473
opennlp.tools.util.TrainingParametersTest.testDefault();opennlp.tools.util.TrainingParameters.getSettings();0.8222370743751526
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.$Proxy10.getEncoding();1.0
opennlp.tools.cmdline.ArgumentParserTest.testDefaultEncodingParameter();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);0.8286529183387756
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, double);1.0
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, boolean);0.9667770266532898
opennlp.tools.util.TrainingParametersTest.testPutGet();opennlp.tools.util.TrainingParameters.put(java.lang.String, int);0.9660038352012634
opennlp.tools.ngram.NGramModelTest.testInvalidFormat();opennlp.tools.ngram.NGramModel.<init>(java.io.InputStream);1.0
opennlp.tools.ngram.NGramModelTest.testInvalidFormat();opennlp.tools.dictionary.serializer.DictionaryEntryPersistor.create(java.io.InputStream, opennlp.tools.dictionary.serializer.EntryInserter);0.8721267580986023
opennlp.tools.util.model.ByteArraySerializerTest.testSerialization();opennlp.tools.util.model.ByteArraySerializer.serialize(byte[], java.io.OutputStream);1.0
opennlp.tools.ml.TrainerFactoryTest.testSequenceTrainerValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testInvalidTrainer();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSetEncodingParameter();opennlp.tools.cmdline.$Proxy10.getEncoding();1.0
opennlp.tools.ml.ArrayMathTest.testL1Norm();opennlp.tools.ml.ArrayMath.l1norm(double[]);1.0
opennlp.tools.tokenize.DictionaryDetokenizerTest.testDetokenizer();opennlp.tools.tokenize.DictionaryDetokenizer.detokenize(java.lang.String[]);1.0
opennlp.tools.tokenize.DetokenizationDictionaryTest.testSimpleDict();opennlp.tools.tokenize.DetokenizationDictionary.getOperation(java.lang.String);1.0
opennlp.tools.cmdline.ArgumentParserTest.testZeroMethods();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsUsage();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testInvalidReturnType();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testInvalidMethodName();opennlp.tools.cmdline.ArgumentParser.createUsage(java.lang.Class<T>);1.0
opennlp.tools.ngram.NGramUtilsTest.testNgramMLProbability();opennlp.tools.ngram.NGramUtils.calculateNgramMLProbability(opennlp.tools.util.StringList, java.lang.Iterable<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testTrigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateTrigramMLProbability(java.lang.String, java.lang.String, java.lang.String, java.lang.Iterable<opennlp.tools.util.StringList>);1.0
opennlp.tools.ngram.NGramUtilsTest.testBigramMLProbability();opennlp.tools.ngram.NGramUtils.calculateBigramMLProbability(java.lang.String, java.lang.String, java.util.Collection<opennlp.tools.util.StringList>);1.0
opennlp.tools.util.SequenceTest.testCompareTo();opennlp.tools.util.Sequence.compareTo(opennlp.tools.util.Sequence);0.9999999403953552
opennlp.tools.ml.TrainerFactoryTest.testEventTrainerValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testIsSequenceTrainerFalse();opennlp.tools.ml.TrainerFactory.getTrainerType(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.TrainerFactoryTest.testBuiltInValid();opennlp.tools.ml.TrainerFactory.isValid(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.<init>(java.io.InputStream);1.0
opennlp.tools.util.TrainingParametersTest.testConstructors();opennlp.tools.util.TrainingParameters.<init>(opennlp.tools.util.TrainingParameters);1.0
opennlp.tools.ml.model.RealValueFileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.reset();1.0
opennlp.tools.ml.model.FileEventStreamTest.testReset();opennlp.tools.ml.model.FileEventStream.reset();1.0
opennlp.tools.ml.model.RealValueFileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.read();1.0
opennlp.tools.ml.model.FileEventStreamTest.testSimpleReading();opennlp.tools.ml.model.FileEventStream.read();1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.<init>();0.9415616393089294
opennlp.tools.doccat.NGramFeatureGeneratorTest.testEmpty();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9208323359489441
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.<init>();1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testNull();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9779841303825378
opennlp.tools.util.featuregen.InSpanGeneratorTest.test();opennlp.tools.util.featuregen.InSpanGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8857142925262451
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8857142925262451
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.SuffixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.SuffixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.SuffixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8857142925262451
opennlp.tools.lemmatizer.DictionaryLemmatizerTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.lemmatize(java.lang.String[], java.lang.String[]);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testParameterValidation();opennlp.tools.lemmatizer.LemmaSample.validateArguments(int, int, int);1.0
opennlp.tools.lemmatizer.LemmaSampleTest.testToString();opennlp.tools.lemmatizer.LemmaSample.toString();1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan2();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan1();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.chunker.ChunkSampleTest.testInvalidPhraseAsSpan3();opennlp.tools.chunker.ChunkSample.phrasesAsSpanList(java.lang.String[], java.lang.String[], java.lang.String[]);1.0
opennlp.tools.util.StringListTest.testIterator();opennlp.tools.util.StringList.iterator();1.0
opennlp.tools.util.StringUtilTest.testToLowerCase();opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.testLowerCase();opennlp.tools.util.featuregen.TokenFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsZeroArguments();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testSimpleArgumentsMissingEncoding();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsOneArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.cmdline.ArgumentParserTest.testAllOptionalArgumentsExtraArgument();opennlp.tools.cmdline.ArgumentParser.validateArguments(java.lang.String[], java.lang.Class<T>);1.0
opennlp.tools.util.normalizer.NumberCharSequenceNormalizerTest.normalize();opennlp.tools.util.normalizer.NumberCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testBeginFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.ml.BeamSearchTest.testBestSequenceWithValidator();opennlp.tools.ml.BeamSearch.bestSequence(T[], java.lang.Object[], opennlp.tools.util.BeamSearchContextGenerator<T>, opennlp.tools.util.SequenceValidator<T>);1.0
opennlp.tools.parser.lang.en.HeadRulesTest.testSerialization();opennlp.tools.parser.lang.en.HeadRules.serialize(java.io.Writer);1.0
opennlp.tools.namefind.BioCodecTest.testCreateSequenceValidator();opennlp.tools.namefind.BioCodec.createSequenceValidator();1.0
opennlp.tools.ngram.NGramModelTest.testContains2();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testContains();opennlp.tools.ngram.NGramModel.contains(opennlp.tools.util.StringList);1.0
opennlp.tools.ngram.NGramModelTest.testRemove();opennlp.tools.ngram.NGramModel.remove(opennlp.tools.util.StringList);1.0
opennlp.tools.namefind.BioCodecTest.testEncodeNoNames();opennlp.tools.namefind.BioCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.namefind.BilouCodecTest.testEncodeNoNames();opennlp.tools.namefind.BilouCodec.encode(opennlp.tools.util.Span[], int);1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.directoryTest();opennlp.tools.formats.DirectorySampleStream.close();0.8000000715255737
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);0.9999999403953552
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);0.9999999403953552
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.read();0.9528676271438599
opennlp.tools.formats.DirectorySampleStreamTest.directoryNullFilterTest();opennlp.tools.formats.DirectorySampleStream.close();0.8826563358306885
opennlp.tools.formats.DirectorySampleStreamTest.invalidDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File, java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.invalidDirectoryTest();opennlp.tools.formats.DirectorySampleStream.<init>(java.io.File[], java.io.FileFilter, boolean);1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.recursiveDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();0.8000000715255737
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.reset();1.0
opennlp.tools.formats.DirectorySampleStreamTest.resetDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();0.8001922369003296
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.read();1.0
opennlp.tools.formats.DirectorySampleStreamTest.emptyDirectoryTest();opennlp.tools.formats.DirectorySampleStream.close();0.8000000715255737
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest2();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8857142925262451
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest3();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8857142925262451
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.PrefixFeatureGenerator.<init>(int);1.0
opennlp.tools.util.featuregen.PrefixFeatureGeneratorTest.lengthTest1();opennlp.tools.util.featuregen.PrefixFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8857142925262451
opennlp.tools.sentdetect.DefaultEndOfSentenceScannerTest.testScanning();opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.getPositions(java.lang.String);1.0
opennlp.tools.sentdetect.DefaultEndOfSentenceScannerTest.testScanning();opennlp.tools.sentdetect.DefaultEndOfSentenceScanner.<init>(char[]);0.9208927154541016
opennlp.tools.ml.ArrayMathTest.testInvL2Norm();opennlp.tools.ml.ArrayMath.invL2norm(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testL2Norm();opennlp.tools.ml.ArrayMath.l2norm(double[]);1.0
opennlp.tools.util.normalizer.UrlCharSequenceNormalizerTest.normalizeUrl();opennlp.tools.util.normalizer.UrlCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.UrlCharSequenceNormalizerTest.normalizeEmail();opennlp.tools.util.normalizer.UrlCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testBegin();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testNext();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testNext();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.9428571462631226
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.<init>();1.0
opennlp.tools.util.featuregen.PosTaggerFeatureGeneratorTest.testMiddle();opennlp.tools.util.featuregen.PosTaggerFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);0.8571428656578064
opennlp.tools.util.normalizer.EmojiCharSequenceNormalizerTest.normalizeEmoji();opennlp.tools.util.normalizer.EmojiCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.StringListTest.testGetToken();opennlp.tools.util.StringList.getToken(int);1.0
opennlp.tools.util.StringListTest.testIntern();opennlp.tools.util.StringList.<init>(java.lang.String[]);1.0
opennlp.tools.util.StringListTest.testIntern();opennlp.tools.util.StringList.getToken(int);0.9154360890388489
opennlp.tools.util.StringListTest.testHashCode();opennlp.tools.util.StringList.hashCode();1.0
opennlp.tools.util.StringListTest.testEquals();opennlp.tools.util.StringList.equals(java.lang.Object);1.0
opennlp.tools.util.StringListTest.testToString();opennlp.tools.util.StringList.toString();1.0
opennlp.tools.namefind.RegexNameFinderTest.testFindMatchingPatternWithoutMatchingTokenBounds();opennlp.tools.namefind.RegexNameFinder.find(java.lang.String[]);1.0
opennlp.tools.util.featuregen.TokenFeatureGeneratorTest.test();opennlp.tools.util.featuregen.TokenFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.SpanTest.testEqualsWithNull();opennlp.tools.util.Span.equals(java.lang.Object);1.0
opennlp.tools.util.featuregen.PreviousTwoMapFeatureGeneratorTest.testFeatureGeneration();opennlp.tools.util.featuregen.PreviousTwoMapFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.VersionTest.testParseInvalidVersion2();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.util.VersionTest.testParseInvalidVersion();opennlp.tools.util.Version.parse(java.lang.String);1.0
opennlp.tools.namefind.BioCodecTest.testDecodeEmpty();opennlp.tools.namefind.BioCodec.decode(java.util.List<java.lang.String>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testUnigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testUnigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);0.8705692887306213
opennlp.tools.doccat.NGramFeatureGeneratorTest.test12gram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.test13gram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize1();opennlp.tools.util.InvalidFormatException.<init>(java.lang.String);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize1();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9955171942710876
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize2();opennlp.tools.util.InvalidFormatException.<init>(java.lang.String);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testInvalidGramSize2();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9955171942710876
opennlp.tools.doccat.NGramFeatureGeneratorTest.testBigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.doccat.NGramFeatureGeneratorTest.testBigram();opennlp.tools.doccat.NGramFeatureGenerator.<init>(int, int);0.9217751622200012
opennlp.tools.doccat.NGramFeatureGeneratorTest.testTrigram();opennlp.tools.doccat.NGramFeatureGenerator.extractFeatures(java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>);1.0
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getValues();1.0
opennlp.tools.ml.model.EventTest.testWithoutValues();opennlp.tools.ml.model.Event.getOutcome();0.8432283997535706
opennlp.tools.ml.model.EventTest.testWithValues();opennlp.tools.ml.model.Event.getValues();1.0
opennlp.tools.ml.model.EventTest.testNullOutcome();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);1.0
opennlp.tools.ml.model.EventTest.testNullOutcome();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9960812926292419
opennlp.tools.ml.model.EventTest.testNullContext();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[]);1.0
opennlp.tools.ml.model.EventTest.testNullContext();opennlp.tools.ml.model.Event.<init>(java.lang.String, java.lang.String[], float[]);0.9960812926292419
opennlp.tools.util.SpanTest.testContainsInt();opennlp.tools.util.Span.contains(int);1.0
opennlp.tools.util.SpanTest.testLength();opennlp.tools.util.Span.length();1.0
opennlp.tools.util.SpanTest.testStartLargerThanEnd();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testStartLargerThanEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9913552403450012
opennlp.tools.util.SpanTest.testTooSmallEnd();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testTooSmallEnd();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9891942143440247
opennlp.tools.util.SpanTest.testTooSmallStart();opennlp.tools.util.Span.<init>(int, int);1.0
opennlp.tools.util.SpanTest.testTooSmallStart();opennlp.tools.util.Span.<init>(int, int, java.lang.String, double);0.9913552403450012
opennlp.tools.formats.ad.ADNameSampleStreamTest.testCheckMergedContractions();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testSize();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.formats.ad.ADNameSampleStreamTest.testSmallSentence();opennlp.tools.namefind.NameSample.getSentence();1.0
opennlp.tools.ml.ArrayMathTest.testToIntArray();opennlp.tools.ml.ArrayMath.toIntArray(java.util.List<java.lang.Integer>);1.0
opennlp.tools.ml.ArrayMathTest.testInnerProduct();opennlp.tools.ml.ArrayMath.innerProduct(double[], double[]);1.0
opennlp.tools.ml.ArrayMathTest.testInnerProductDoubleNaN();opennlp.tools.ml.ArrayMath.innerProduct(double[], double[]);1.0
opennlp.tools.lemmatizer.DictionaryLemmatizerMultiTest.testForNullPointerException();opennlp.tools.lemmatizer.DictionaryLemmatizer.lemmatize(java.util.List<java.lang.String>, java.util.List<java.lang.String>);1.0
opennlp.tools.ml.ArrayMathTest.testToDoubleArray();opennlp.tools.ml.ArrayMath.toDoubleArray(java.util.List<java.lang.Double>);1.0
opennlp.tools.langdetect.LanguageSampleTest.testNullLang();opennlp.tools.langdetect.LanguageSample.<init>(opennlp.tools.langdetect.Language, java.lang.CharSequence);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.noFeaturesTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.createFeaturesSuccessiveTokensTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.util.featuregen.BrownBigramFeatureGeneratorTest.createFeaturesTest();opennlp.tools.util.featuregen.BrownBigramFeatureGenerator.createFeatures(java.util.List<java.lang.String>, java.lang.String[], int, java.lang.String[]);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest1();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest3();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest2();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ngram.NGramGeneratorTest.generateCharTest4();opennlp.tools.ngram.NGramGenerator.generate(char[], int, java.lang.String);1.0
opennlp.tools.ml.ArrayMathTest.testLogSumOfExps();opennlp.tools.ml.ArrayMath.logSumOfExps(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testMax();opennlp.tools.ml.ArrayMath.max(double[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartContinue();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityStartContinueOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleStart();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityContinueOther();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityMultiClass();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityRepeated();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityBadTag();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilitySingleContinue();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BioCodecTest.testCompatibilityEmpty();opennlp.tools.namefind.BioCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.util.ext.ExtensionLoaderTest.testLoadingStringGenerator();opennlp.tools.util.ext.ExtensionLoader.instantiateExtension(java.lang.Class<T>, java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByStart();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByStart();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testContinueFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testStartFollowedByOther();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testBeginFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByBegin();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByOutside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByLast();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testLastAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByInside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitFollowedByUnit();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOutsideFollowedByOutside();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testUnitAsFirstLabel();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.namefind.BilouNameFinderSequenceValidatorTest.testOtherFollowedByContinue();opennlp.tools.namefind.BilouNameFinderSequenceValidator.validSequence(int, java.lang.String[], java.lang.String[], java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetSettings();opennlp.tools.util.TrainingParameters.getSettings(java.lang.String);1.0
opennlp.tools.util.TrainingParametersTest.testGetSettings();opennlp.tools.util.TrainingParameters.getSettings();0.875
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeHashtag();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeRT();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeLaugh();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeUser();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.normalizer.TwitterCharSequenceNormalizerTest.normalizeFace();opennlp.tools.util.normalizer.TwitterCharSequenceNormalizer.normalize(java.lang.CharSequence);1.0
opennlp.tools.util.StringUtilTest.testToUpperCase();opennlp.tools.util.StringUtil.toUpperCase(java.lang.CharSequence);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityEmpty();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityUnitOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesStart();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityWrongClass();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityBadTag();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityLastUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLastOtherUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartUnit();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesContinue();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilitySinglesLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityContinueLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityMultiClass();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartLast();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinueLastOther();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.namefind.BilouCodecTest.testCompatibilityStartContinue();opennlp.tools.namefind.BilouCodec.areOutcomesCompatible(java.lang.String[]);1.0
opennlp.tools.ml.ArrayMathTest.testArgmaxException2();opennlp.tools.ml.ArrayMath.argmax(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testArgmaxException1();opennlp.tools.ml.ArrayMath.argmax(double[]);1.0
opennlp.tools.ml.ArrayMathTest.testArgmax();opennlp.tools.ml.ArrayMath.argmax(double[]);1.0
null.>>> TEST START <<< |;opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);1.0
null.>>> TEST START <<< |;opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);1.0
null.>>> TEST START <<< |;opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();1.0
null.>>> TEST START <<< |;opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();1.0
null.>>> TEST START <<< |;opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
null.>>> TEST START <<< |;opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
null.>>> TEST START <<< |;opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);1.0
null.>>> TEST START <<< |;opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
null.>>> TEST START <<< |;opennlp.tools.util.StringList.<init>(java.lang.String);1.0
null.>>> TEST START <<< |;opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);1.0
null.>>> TEST START <<< |;opennlp.tools.util.StringList.getToken(int);1.0
null.>>> TEST START <<< |;opennlp.tools.util.StringList.size();1.0
null.>>> TEST START <<< |;opennlp.tools.util.StringList.toString();1.0
null.>>> TEST START <<< |;opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);1.0
null.>>> TEST END <<<;opennlp.tools.dictionary.Dictionary.StringListWrapper.<init>(opennlp.tools.dictionary.Dictionary, opennlp.tools.util.StringList);1.0
null.>>> TEST END <<<;opennlp.tools.dictionary.Dictionary.StringListWrapper.equals(java.lang.Object);1.0
null.>>> TEST END <<<;opennlp.tools.dictionary.Dictionary.StringListWrapper.getStringList();1.0
null.>>> TEST END <<<;opennlp.tools.dictionary.Dictionary.StringListWrapper.hashCode();1.0
null.>>> TEST END <<<;opennlp.tools.dictionary.Dictionary.contains(opennlp.tools.util.StringList);1.0
null.>>> TEST END <<<;opennlp.tools.postag.DefaultPOSContextGenerator.getContext(int, java.lang.Object[], java.lang.String[]);1.0
null.>>> TEST END <<<;opennlp.tools.postag.DefaultPOSContextGenerator.getPrefixes(java.lang.String);1.0
null.>>> TEST END <<<;opennlp.tools.postag.DefaultPOSContextGenerator.getSuffixes(java.lang.String);1.0
null.>>> TEST END <<<;opennlp.tools.util.StringList.<init>(java.lang.String);1.0
null.>>> TEST END <<<;opennlp.tools.util.StringList.compareToIgnoreCase(opennlp.tools.util.StringList);1.0
null.>>> TEST END <<<;opennlp.tools.util.StringList.getToken(int);1.0
null.>>> TEST END <<<;opennlp.tools.util.StringList.size();1.0
null.>>> TEST END <<<;opennlp.tools.util.StringList.toString();1.0
null.>>> TEST END <<<;opennlp.tools.util.StringUtil.toLowerCase(java.lang.CharSequence);1.0
