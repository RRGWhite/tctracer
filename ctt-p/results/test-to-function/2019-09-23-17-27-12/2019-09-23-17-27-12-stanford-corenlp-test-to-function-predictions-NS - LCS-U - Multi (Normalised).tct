test-class;tested-class;score
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);1.0
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8348678946495056
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.Tree.yield();0.7955915927886963
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.root();0.7832640409469604
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.Tree.toString();0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.9673674702644348
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9087044596672058
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);0.8498809337615967
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.Tree.iterator();0.845588207244873
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.Tree.iterator();0.8741126656532288
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.tregex.TregexMatcher.matchesAt(edu.stanford.nlp.trees.Tree);0.8092968463897705
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.Tree.toString();0.8076040744781494
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.7797374129295349
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.7719705700874329
edu.stanford.nlp.trees.tregex.TregexTest.testHeadOfPhrase();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testHeadOfPhrase();edu.stanford.nlp.trees.Tree.iterator();0.7854345440864563
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testFind();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.9404761791229248
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9304730296134949
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9177178144454956
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.83425372838974
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.8284321427345276
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.812030017375946
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.7927178144454956
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.7916666865348816
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependencies(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.7864153385162354
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7826086282730103
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.convertRel(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7767857313156128
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.753244161605835
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.851731538772583
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7882394790649414
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.7619010210037231
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceWithRepeats();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertWithNamedNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9759194850921631
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.9551957249641418
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.9551957249641418
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9551957249641418
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8774080276489258
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.8750006556510925
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8615490794181824
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.children();0.8328596949577332
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.allTypedDependencies();0.831436038017273
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8208330869674683
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.addRef(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.8147257566452026
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.8147257566452026
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.root();0.8103655576705933
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8066943883895874
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.convertRel(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8006787300109863
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.775248110294342
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.775248110294342
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.addExtraNSubj(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.7715041637420654
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7629736661911011
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7604617476463318
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.7522017359733582
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctWHAttachment(edu.stanford.nlp.semgraph.SemanticGraph);0.7518839240074158
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.TreeNormalizer.<init>();0.7989085912704468
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>();0.7752315998077393
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>(edu.stanford.nlp.trees.TreebankLanguagePack);0.7752315998077393
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPatternsOnTree(java.util.List<edu.stanford.nlp.util.Pair<edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern>>, edu.stanford.nlp.trees.Tree);0.8181818127632141
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7945032715797424
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.util.Pair.<init>(T1, T2);0.7925536036491394
edu.stanford.nlp.trees.tregex.TregexTest.testIthChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String);1.0
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String, java.lang.String, edu.stanford.nlp.trees.TreebankLanguagePack);1.0
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String, java.lang.String, edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.HeadFinder, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.propertyToBoolean(java.util.Properties, java.lang.String);0.8663102388381958
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.printTree(edu.stanford.nlp.trees.Tree, java.io.PrintWriter);0.8484848737716675
edu.stanford.nlp.trees.CoordinationTransformerTest.testMoveRB();edu.stanford.nlp.trees.CoordinationTransformer.moveRB(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9393580555915833
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.Tree.iterator();0.8209058046340942
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexMatcher.resetChildIter(edu.stanford.nlp.trees.Tree);0.7569344639778137
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.756768524646759
edu.stanford.nlp.trees.tregex.TregexTest.testTwoChildren();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testComplex2();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalRelations.values();0.9362244606018066
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8867864012718201
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8561742305755615
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseSemanticHeadFinder.ruleChanges();0.8450561761856079
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.Tree.yield();0.838707447052002
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.8346986770629883
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalRelations.valuesLock();0.829081654548645
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalRelation.hashCode();0.7874733209609985
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalRelation.toString();0.7874733209609985
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.7847456932067871
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.7767857313156128
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7659485936164856
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();0.7594629526138306
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.ling.CoreLabel.factory();0.7573635578155518
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9505349397659302
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9222692847251892
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8509892821311951
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8211730718612671
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8122855424880981
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.8032169938087463
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.8032169938087463
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.8032169938087463
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7995366454124451
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7637884020805359
edu.stanford.nlp.trees.tregex.TregexTest.testSegmentedAndEqualsExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testSegmentedAndEqualsExpressions();edu.stanford.nlp.trees.Tree.toString();0.8297735452651978
edu.stanford.nlp.trees.tregex.TregexTest.testSegmentedAndEqualsExpressions();edu.stanford.nlp.trees.Tree.iterator();0.7854345440864563
edu.stanford.nlp.trees.tregex.TregexTest.testJo�oSilva();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testJo�oSilva();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8684154748916626
edu.stanford.nlp.trees.tregex.TregexTest.testJo�oSilva();edu.stanford.nlp.trees.Tree.iterator();0.7854345440864563
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9304730296134949
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.9030568599700928
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8998607397079468
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8809523582458496
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.Tree.yield();0.8480203151702881
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.8406338691711426
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8402255773544312
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.83425372838974
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.8284321427345276
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8284321427345276
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.8214285969734192
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8096351027488708
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8059005737304688
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.7959141135215759
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.addRef(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.7767857313156128
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.convertRel(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7767857313156128
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctSubjPass(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.7678571343421936
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7634970545768738
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.removeExactDuplicates(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.7576530575752258
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedesDescribedChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedesDescribedChain();edu.stanford.nlp.trees.Tree.toString();0.7854345440864563
edu.stanford.nlp.trees.tregex.TregexTest.testComplex();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9304730296134949
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.9030568599700928
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8998607397079468
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.Tree.yield();0.8480203151702881
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.83425372838974
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.8284321427345276
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8214285969734192
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.812030017375946
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8096351027488708
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.7959141135215759
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.7916666865348816
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.addRef(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.7767857313156128
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.ling.CoreLabel.factory();0.7638770937919617
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7634970545768738
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7593167424201965
edu.stanford.nlp.trees.tregex.TregexTest.testFirstLastChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testFirstLastChild();edu.stanford.nlp.trees.Tree.iterator();0.7854345440864563
edu.stanford.nlp.trees.tregex.TregexTest.testFirstLastChild();edu.stanford.nlp.trees.Tree.toString();0.7854345440864563
edu.stanford.nlp.trees.tregex.TregexTest.testFirstLastChild();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.7797374129295349
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.9307581782341003
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.9307581782341003
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9307581782341003
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8768011927604675
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8603795170783997
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8496912121772766
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8335040807723999
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCCprocessed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.826566755771637
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.root();0.809223473072052
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8012614250183105
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.7958656549453735
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.children();0.7877419590950012
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.7687556743621826
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.7621713876724243
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.convertRel(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7527000904083252
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7517166137695312
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.9787648916244507
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.9787648916244507
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9787648916244507
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9499776363372803
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.8965910077095032
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8828074932098389
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseConj(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.8708127737045288
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.children();0.8534101843833923
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8519514203071594
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseFlatMWP(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.8492223620414734
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapse2WP(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.847913920879364
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapse3WP(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.847913920879364
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapse2WPbis(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.8451099395751953
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8410868644714355
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseReferent(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.839326798915863
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapsePrepAndPoss(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.8386166095733643
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.addRef(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.8348288536071777
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.8348288536071777
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8265992403030396
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8205472230911255
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.convertRel(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8204352259635925
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.eraseMultiConj(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.814266562461853
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCollapsed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8054490685462952
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.7943770885467529
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7943770885467529
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.addExtraNSubj(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.7905408143997192
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.removeDep(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.786850094795227
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7817997336387634
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7792258858680725
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctSubjPass(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.7772544026374817
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctWHAttachment(edu.stanford.nlp.semgraph.SemanticGraph);0.7704364061355591
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.addStrandedPobj(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.7628607749938965
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseMultiWordPrep(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, java.lang.String, java.lang.String, java.lang.String, java.lang.String);0.7525796890258789
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedingFollowingSister();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependencies(edu.stanford.nlp.trees.GrammaticalStructure$Extras);1.0
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9670329093933105
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.9576922655105591
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.9358974099159241
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCCprocessed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8736263513565063
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8566433191299438
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCollapsed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8520709872245789
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8269230127334595
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.7536077499389648
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.7536077499389648
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.7536077499389648
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.9208000302314758
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalRelations.values();0.9166666865348816
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8901877403259277
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.Tree.yield();0.8438094854354858
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.8259522914886475
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.8187591433525085
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseSemanticHeadFinder.ruleChanges();0.8105503916740417
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalRelations.valuesLock();0.8095237612724304
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalRelation.toString();0.8087318539619446
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7999621629714966
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();0.7781704664230347
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.7767857313156128
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.ling.CoreLabel.factory();0.7641662955284119
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7538241147994995
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.8181818723678589
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceNode();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7589248418807983
edu.stanford.nlp.trees.tregex.TregexTest.testLink();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testLink();edu.stanford.nlp.trees.Tree.toString();0.813097357749939
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoneyOrMore();edu.stanford.nlp.trees.QPTreeTransformer.QPtransform(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.QPtransform(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.<init>();0.9617486596107483
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.<init>(boolean);0.9617486596107483
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8513535857200623
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.QPTreeTransformer.<init>();1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.QPTreeTransformer.<init>(boolean);1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.Tree.toString();0.9442284107208252
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.QPTreeTransformer.QPtransform(edu.stanford.nlp.trees.Tree);0.8181817531585693
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.Tree.iterator();0.9627906680107117
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.Tree.toString();0.9627906680107117
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);0.9190887808799744
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7973071336746216
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.Tree.toStringBuilder(java.lang.StringBuilder);0.7972582578659058
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.9293694496154785
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.9229058027267456
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.9229058027267456
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9229058027267456
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8844227194786072
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8334364295005798
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8130360841751099
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.root();0.8057659864425659
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.7855685949325562
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.allTypedDependencies();0.7810453176498413
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.7699376344680786
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, java.util.concurrent.locks.Lock, edu.stanford.nlp.trees.TreeTransformer, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>);0.7645648121833801
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.7645648121833801
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.7607662677764893
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.util.Generics.newHashSet();0.7566155791282654
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.util.Generics.newHashSet(java.util.Collection<? extends E>);0.7566155791282654
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testLemma();edu.stanford.nlp.ling.IndexedWord.setLemma(java.lang.String);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.9999999403953552
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.917176365852356
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.917176365852356
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.917176365852356
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.917176365852356
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8700513243675232
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.ling.CoreLabel.toString();0.8402563333511353
edu.stanford.nlp.process.WordToSentenceProcessorTest.testXmlElements();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testXmlElements();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.7935535907745361
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTwoDependencies();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTwoDependencies();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.7875838279724121
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNotEquals();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNotEquals();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();0.986111044883728
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNotEquals();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.7916666269302368
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8903098106384277
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.844565212726593
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.7957072854042053
edu.stanford.nlp.process.WordToSentenceProcessorTest.testTwoSentences();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);0.9999999403953552
edu.stanford.nlp.process.WordToSentenceProcessorTest.testTwoSentences();edu.stanford.nlp.process.WordToSentenceProcessor.wordsToSentences(java.util.List<? extends IN>);0.8551136255264282
edu.stanford.nlp.process.WordToSentenceProcessorTest.testTwoSentences();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8093725442886353
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8903098106384277
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8903098106384277
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.process.WordToSentenceProcessor.wordsToSentences(java.util.List<? extends IN>);0.7874999642372131
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.process.WordToSentenceProcessor.getString(java.lang.Object);0.7777777910232544
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.9461875557899475
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8915293216705322
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.791930615901947
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.771889865398407
edu.stanford.nlp.patterns.CreatePatternsTest.test();edu.stanford.nlp.patterns.surface.CreatePatterns.<init>(java.util.Properties, edu.stanford.nlp.patterns.ConstantsAndVariables);1.0
edu.stanford.nlp.patterns.CreatePatternsTest.test();edu.stanford.nlp.patterns.surface.CreatePatterns.getAllPatterns(java.util.Map<java.lang.String, edu.stanford.nlp.patterns.DataInstance>, java.util.Properties, edu.stanford.nlp.patterns.ConstantsAndVariables$PatternForEachTokenWay);1.0
edu.stanford.nlp.patterns.CreatePatternsTest.test();edu.stanford.nlp.patterns.surface.CreatePatterns.setUp(java.util.Properties);1.0
edu.stanford.nlp.patterns.CreatePatternsTest.test();edu.stanford.nlp.patterns.surface.CreatePatterns.CreatePatternsThread.<init>(java.util.Map<java.lang.String, edu.stanford.nlp.patterns.DataInstance>, java.util.List<java.lang.String>, java.util.Properties, edu.stanford.nlp.patterns.ConstantsAndVariables$PatternForEachTokenWay);0.9722222089767456
edu.stanford.nlp.patterns.CreatePatternsTest.test();edu.stanford.nlp.patterns.surface.CreatePatterns.CreatePatternsThread.call();0.9722222089767456
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNumericHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testExactDepthRelations();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testExactDepthRelations();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8674836158752441
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testExactDepthRelations();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.8173717856407166
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testExactDepthRelations();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.7716038227081299
edu.stanford.nlp.pipeline.ChunkAnnotationUtilsTest.testMergeChunks();edu.stanford.nlp.pipeline.ChunkAnnotationUtils.mergeChunks(java.util.List<edu.stanford.nlp.util.CoreMap>, java.lang.String, int, int);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8674836158752441
edu.stanford.nlp.patterns.surface.AnnotatedTextReaderTest.testParse();edu.stanford.nlp.patterns.surface.AnnotatedTextReader.parseFile(java.io.BufferedReader, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>>, boolean, java.lang.String);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testRegion();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.<init>(edu.stanford.nlp.semgraph.SemanticGraph, edu.stanford.nlp.semgraph.semgrex.Alignment, edu.stanford.nlp.semgraph.SemanticGraph, boolean, edu.stanford.nlp.ling.IndexedWord, java.util.Map<java.lang.String, edu.stanford.nlp.ling.IndexedWord>, java.util.Map<java.lang.String, java.lang.String>, edu.stanford.nlp.semgraph.semgrex.VariableStrings);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.resetChildIter(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.setupFindIterator();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.<init>();0.8252024054527283
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8252024054527283
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String, edu.stanford.nlp.semgraph.semgrex.Env);0.8252024054527283
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.isNegated();0.8252024054527283
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.isOptional();0.8252024054527283
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.8252024054527283
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.setEnv(edu.stanford.nlp.semgraph.semgrex.Env);0.8252024054527283
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.7857142686843872
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();0.7777777910232544
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMultipleDepths();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMultipleDepths();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8173114061355591
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMultipleDepths();edu.stanford.nlp.semgraph.SemanticGraph.addEdge(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.trees.GrammaticalRelation, double, boolean);0.7823834419250488
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.890423059463501
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.NodePattern.NodeMatcher.getMatch();0.8009204864501953
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.7779958844184875
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.ling.CoreLabel.toString();1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);0.975797176361084
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.process.WordToSentenceProcessor.wordsToSentences(java.util.List<? extends IN>);0.8538225889205933
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.process.WordToSentenceProcessor.getString(java.lang.Object);0.837465763092041
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8202067613601685
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.7936581969261169
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.process.WordToSentenceProcessor.isForcedEndToken(java.lang.Object);0.7507749795913696
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testIndex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testIndex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.7935535907745361
edu.stanford.nlp.process.WordToSentenceProcessorTest.testMr();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);0.9999999403953552
edu.stanford.nlp.process.WordToSentenceProcessorTest.testMr();edu.stanford.nlp.ling.CoreLabel.word();0.9005845189094543
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(boolean, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(boolean, java.util.Properties, java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.initFactory(edu.stanford.nlp.pipeline.TokenizerAnnotator$TokenizerType, java.util.Properties, java.lang.String);0.927272617816925
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8999999761581421
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.ling.CoreLabel.word();0.8382466435432434
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.setNewlineStatus(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7874999642372131
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.SemanticGraph.setRoot(edu.stanford.nlp.ling.IndexedWord);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9591869115829468
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.SemanticGraph.<init>();0.9299958944320679
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8983845114707947
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.ling.IndexedWord.<init>(java.lang.String, int, int);0.8769882321357727
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.8069842457771301
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8003789782524109
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.SemanticGraph.addVertex(edu.stanford.nlp.ling.IndexedWord);0.766653299331665
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7653156518936157
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.resetChildIter(edu.stanford.nlp.ling.IndexedWord);0.7583765387535095
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.ling.IndexedWord.setValue(java.lang.String);0.7544812560081482
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testComplicatedGraph();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getRelnString(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.9642857313156128
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.8979591727256775
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.8105603456497192
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.9333333969116211
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.8924704790115356
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();0.8444444537162781
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.ling.IndexedWord.toString();0.782534658908844
edu.stanford.nlp.process.WordToSentenceProcessorTest.testChinese();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testChinese();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7741824984550476
edu.stanford.nlp.process.WordToSentenceProcessorTest.testEdgeCases();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testEdgeCases();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.7741824984550476
edu.stanford.nlp.process.WordToSentenceProcessorTest.testEdgeCases();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7741824984550476
edu.stanford.nlp.process.WordToSentenceProcessorTest.testEdgeCases();edu.stanford.nlp.process.WordToSentenceProcessor.wordsToSentences(java.util.List<? extends IN>);0.7513587474822998
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testSimpleDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testSimpleDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.9074335694313049
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);0.8537933826446533
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.8163265585899353
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8015623688697815
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8015623688697815
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, boolean);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);0.9285714626312256
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8500000238418579
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();0.7916666269302368
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.9168199300765991
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8355237245559692
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.ling.IndexedWord.toString();0.8038846850395203
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.semgrex.NodePattern.NodeMatcher.getMatch();0.8009204864501953
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.setEnv(edu.stanford.nlp.semgraph.semgrex.Env);0.7717147469520569
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.resetChildIter(edu.stanford.nlp.ling.IndexedWord);0.7533410787582397
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9613402485847473
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.<init>();0.9562183618545532
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.addVertex(edu.stanford.nlp.ling.IndexedWord);0.9562183618545532
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.IndexedWord.<init>(java.lang.String, int, int);0.9098585844039917
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.setRoot(edu.stanford.nlp.ling.IndexedWord);0.874585747718811
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.8282259702682495
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.IndexedWord.toString();0.7670014500617981
edu.stanford.nlp.process.WordToSentenceProcessorTest.testBlankLines();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testBlankLines();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.topologicalSort();1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.vertexListSorted();0.9375
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.9285714626312256
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSimplerTokens();edu.stanford.nlp.patterns.surface.SurfacePattern.setToken(edu.stanford.nlp.patterns.surface.PatternToken);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9262542724609375
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8888888359069824
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.util.Timing.start();0.8518526554107666
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.Annotation.toString();0.8133861422538757
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.util.Timing.report();0.7629637718200684
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.75
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSsAllyBritain();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama1();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAmericanActorChrisPratt();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.util.Timing.start();0.985185980796814
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9262542724609375
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8888888359069824
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.util.ArraySet.iterator();0.8142845034599304
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.Annotation.toString();0.8133861422538757
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.7842680215835571
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.7708333730697632
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.util.Timing.report();0.7629637718200684
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.util.Timing.start();0.9094024300575256
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8107448220252991
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.util.Timing.report();0.80683833360672
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSAllyBritain();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama2();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCompoundPossessive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.util.Timing.report();0.985185980796814
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.7936508059501648
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8996113538742065
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8992685675621033
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8763560056686401
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.util.Timing.start();0.8373534679412842
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8225017189979553
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.util.ArraySet.iterator();0.763383150100708
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.util.Timing.start();0.9094024300575256
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9084249138832092
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);0.88368821144104
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8550039529800415
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8550039529800415
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.7781470417976379
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.7764590382575989
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.75
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9999999403953552
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9896489977836609
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9253860712051392
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.809712827205658
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);0.7936336994171143
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.788177490234375
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.Timing.start();0.775725781917572
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.7600851058959961
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requirementsSatisfied();0.9298372268676758
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requires();0.9040084481239319
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.Annotation.toString();0.876786470413208
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.util.Timing.start();0.8110271692276001
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);0.8086763024330139
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.791007399559021
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7619500160217285
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.7589311599731445
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7533403635025024
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setSectionTagMatcher(java.lang.String);0.7503270506858826
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9084249138832092
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8550039529800415
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8265038132667542
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.Timing.start();0.7863255739212036
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.7764590382575989
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9084249138832092
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8550039529800415
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.Timing.start();0.7863255739212036
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.7764590382575989
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requires();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requirementsSatisfied();0.7891156673431396
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.Timing.report();0.7551039457321167
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.ArraySet.iterator();0.751825749874115
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.<init>(java.util.List<java.lang.String>);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.<init>(java.util.function.Function<java.lang.String, edu.stanford.nlp.simple.Document>, java.util.List<java.lang.String>, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Document.sentence(int);0.8906249403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.8906249403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.word(int);0.7999999523162842
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.words();0.7599999308586121
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.pipeline.CoNLLOutputter.<init>();1.0
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation);0.8324323892593384
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7966286540031433
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.pipeline.CoNLLOutputter.print(edu.stanford.nlp.pipeline.Annotation, java.io.OutputStream, edu.stanford.nlp.pipeline.AnnotationOutputter$Options);0.7666666507720947
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.<init>();0.7657656669616699
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getSerializedSize();1.0
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.writeTo(com.google.protobuf.CodedOutputStream);0.9131428599357605
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();null.finalize();0.894296407699585
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Sentence.serialize();0.8939542770385742
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.8637320399284363
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);0.8637320399284363
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);0.8637320399284363
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Document.sentence(int);0.7716270685195923
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.7716270685195923
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.isInitialized();0.7532308101654053
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9084249138832092
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8550039529800415
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.util.Timing.start();0.7863255739212036
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.7764590382575989
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.7752217650413513
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.util.ArraySet.iterator();0.7516472339630127
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.982758641242981
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.982758641242981
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.XMLIterator.next();0.8101209402084351
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);0.9078947305679321
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.8906249403953552
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.982758641242981
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.982758641242981
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.XMLIterator.next();0.8101209402084351
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);0.9806094169616699
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.9078947901725769
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.XMLIterator.hasNext();0.7809476256370544
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();0.75904381275177
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.add(K, V);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.removeMapping(K, V);0.807692289352417
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.DeltaCollectionValuedMap.add(K, V);0.7838516235351562
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.deltaCopy();0.7777777910232544
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.equals(java.lang.Object);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(byte[], int, char[], int, int);1.0
edu.stanford.nlp.simple.SentenceTest.testCharacterOffsets();edu.stanford.nlp.simple.Sentence.characterOffsetEnd(int);1.0
edu.stanford.nlp.simple.SentenceTest.testCharacterOffsets();edu.stanford.nlp.simple.Sentence.characterOffsetBegin(int);0.9500000476837158
edu.stanford.nlp.simple.SentenceTest.testCharacterOffsets();edu.stanford.nlp.simple.Sentence.characterOffsetEnd();0.75
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.setText(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.9306280016899109
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);0.9306280016899109
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);0.9306280016899109
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Document.sentence(int);0.8318840265274048
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.8318840265274048
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.serialize();0.817004919052124
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.lang.String, java.util.Properties);0.7980676889419556
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.util.Properties);0.7980676889419556
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.<init>(java.util.List<java.lang.String>);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.<init>(java.util.function.Function<java.lang.String, edu.stanford.nlp.simple.Document>, java.util.List<java.lang.String>, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Document.sentence(int);0.8906249403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.8906249403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.word(int);0.7999999523162842
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.words();0.7599999308586121
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.equals(java.lang.Object);0.8333333730697632
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Sentence.sentenceTokenOffsetEnd();1.0
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Sentence.sentenceTokenOffsetBegin();0.9613822102546692
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Document.sentence(int);0.7964939475059509
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.7964939475059509
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Document.sentences();0.7964939475059509
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.length();1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.text();1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.word(int);1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.util.Timing.report();0.8724209070205688
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.words();0.8666666746139526
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.lang.String, java.util.Properties);0.7777777910232544
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.util.Properties);0.7777777910232544
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.util.CoreMap);0.7777777910232544
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.util.CoreMap);0.7777777910232544
edu.stanford.nlp.simple.DocumentTest.testSentences();edu.stanford.nlp.simple.Document.sentences();1.0
edu.stanford.nlp.simple.DocumentTest.testSentences();edu.stanford.nlp.simple.Document.sentences(java.util.Properties);0.75
edu.stanford.nlp.simple.SentenceTest.testText();edu.stanford.nlp.simple.Sentence.text();1.0
edu.stanford.nlp.simple.SentenceTest.testLength();edu.stanford.nlp.simple.Sentence.length();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.util.Pair.first();0.9417997002601624
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.795597493648529
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.795597493648529
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.ling.IndexedWord.index();0.7882929444313049
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.util.Timing.report();1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8956921100616455
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8291967511177063
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Document.sentence(int);0.7999770641326904
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.794654369354248
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.util.Generics.newHashSet();0.7776767015457153
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.lang.String, java.util.Properties);0.7641571760177612
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.util.Properties);0.7641571760177612
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.util.CoreMap);0.7641571760177612
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.util.CoreMap);0.7641571760177612
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.JSONOutputter.<init>();1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7829359769821167
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.JSONOutputter.print(edu.stanford.nlp.pipeline.Annotation, java.io.OutputStream, edu.stanford.nlp.pipeline.AnnotationOutputter$Options);0.7666666507720947
edu.stanford.nlp.simple.SentenceTest.testOriginalText();edu.stanford.nlp.simple.Sentence.originalText(int);1.0
edu.stanford.nlp.simple.SentenceTest.testOriginalText();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.75
edu.stanford.nlp.simple.SentenceTest.testOriginalText();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);0.75
edu.stanford.nlp.simple.SentenceTest.testOriginalText();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);0.75
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.objectbank.DelimitRegExIterator.next();0.8788533210754395
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.8502673506736755
edu.stanford.nlp.simple.SentenceTest.testSentenceIndex();edu.stanford.nlp.simple.Sentence.sentenceIndex();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizeSplitHyphens();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testWeirdTokens();edu.stanford.nlp.simple.Sentence.word(int);1.0
edu.stanford.nlp.simple.SentenceTest.testWeirdTokens();edu.stanford.nlp.simple.Sentence.words();0.7666666507720947
edu.stanford.nlp.process.PTBTokenizerTest.testCorp();edu.stanford.nlp.ling.CoreLabel.word();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testTweets();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testTweets();edu.stanford.nlp.process.AbstractTokenizer.next();0.8724445104598999
edu.stanford.nlp.process.PTBTokenizerTest.testTweets();edu.stanford.nlp.process.PTBTokenizer.getNext();0.8163265585899353
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8707482814788818
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7939322590827942
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.process.PTBTokenizer.newPTBTokenizer(java.io.Reader, boolean, boolean);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.process.PTBTokenizer.<init>(java.io.Reader, boolean, boolean, boolean, edu.stanford.nlp.process.LexedTokenFactory<T>);0.9166666865348816
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8711212873458862
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.process.PTBTokenizer.getNext();0.773809552192688
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.ling.CoreLabel.before();0.7503682971000671
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerCoreLabel();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerCoreLabel();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);0.75
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.process.PTBTokenizer.factory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.getTokenizerFactory();0.9761462211608887
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.process.PTBTokenizer.getNext();0.8649289608001709
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.process.PTBTokenizer.<init>(java.io.Reader, edu.stanford.nlp.process.LexedTokenFactory<T>, java.lang.String);0.8349131345748901
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.punctuationTags();0.7505538463592529
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.921820342540741
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8095238208770752
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7619048357009888
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.CoNLLOutputter.<init>();1.0
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation, edu.stanford.nlp.pipeline.StanfordCoreNLP);0.8324323892593384
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7966286540031433
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.CoNLLOutputter.print(edu.stanford.nlp.pipeline.Annotation, java.io.OutputStream, edu.stanford.nlp.pipeline.AnnotationOutputter$Options);0.7666666507720947
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.<init>();0.7657656669616699
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerMT();edu.stanford.nlp.process.PTBTokenizer.factory();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testSetSentencePunctWords();edu.stanford.nlp.process.DocumentPreprocessor.setSentenceFinalPuncWords(java.lang.String[]);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testSetSentencePunctWords();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.890625
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingEnhancedFor();edu.stanford.nlp.sequences.ObjectBankWrapper.iterator();1.0
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingEnhancedFor();edu.stanford.nlp.sequences.ObjectBankWrapper.<init>(edu.stanford.nlp.sequences.SeqClassifierFlags, edu.stanford.nlp.objectbank.ObjectBank<java.util.List<IN>>, java.util.Set<java.lang.String>);0.774193525314331
edu.stanford.nlp.process.PTBTokenizerTest.testFractions();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.9090909957885742
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.9090909957885742
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();0.8495798707008362
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.toString();1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.<init>(java.lang.String);0.8999999761581421
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.extractFields(java.lang.String);0.807692289352417
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testDateNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedDateString(java.lang.String, edu.stanford.nlp.time.Timex);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testDateNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedDateString(java.lang.String, java.lang.String, edu.stanford.nlp.time.Timex);0.75
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testContext();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testContext();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.926608681678772
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testContext();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8006932735443115
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testContext();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7748643755912781
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.8571429252624512
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);0.8537933826446533
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8015623688697815
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8015623688697815
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.getNext();0.785714328289032
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.PTBTokenizerFactory.getTokenizer(java.io.Reader);0.7687081098556519
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.<init>(java.io.Reader, edu.stanford.nlp.process.LexedTokenFactory<T>, java.lang.String);0.75
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.9387755393981934
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.7901317477226257
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7901317477226257
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingToArray();edu.stanford.nlp.objectbank.ObjectBank.toArray(T[]);0.9999999403953552
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingToArray();edu.stanford.nlp.sequences.ObjectBankWrapper.<init>(edu.stanford.nlp.sequences.SeqClassifierFlags, edu.stanford.nlp.objectbank.ObjectBank<java.util.List<IN>>, java.util.Set<java.lang.String>);0.8789421319961548
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingIterator();edu.stanford.nlp.sequences.ObjectBankWrapper.iterator();1.0
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingIterator();edu.stanford.nlp.sequences.ObjectBankWrapper.<init>(edu.stanford.nlp.sequences.SeqClassifierFlags, edu.stanford.nlp.objectbank.ObjectBank<java.util.List<IN>>, java.util.Set<java.lang.String>);0.8333333730697632
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.9630428552627563
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.7847015857696533
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.7847015857696533
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerWord();edu.stanford.nlp.process.PTBTokenizer.factory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizePerLineSGML();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizePerLineSGML();edu.stanford.nlp.process.AbstractTokenizer.next();0.7509356737136841
edu.stanford.nlp.process.PTBTokenizerTest.testHyphensQuoteAndBOM();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8849474787712097
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8849474787712097
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7771428227424622
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.775909960269928
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.9090909957885742
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.9090909957885742
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();0.8495798707008362
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Time.<init>();0.9999999403953552
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Time.<init>(edu.stanford.nlp.time.SUTime$Time);0.9999999403953552
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.IsoDate.<init>(edu.stanford.nlp.time.SUTime$StandardTemporalType, int, int, int);0.8181572556495667
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.IsoDate.<init>(int, int, int);0.8181572556495667
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.PartialTime.<init>();0.8138447403907776
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.RelativeTime.<init>(edu.stanford.nlp.time.SUTime$Time, edu.stanford.nlp.time.SUTime$TemporalOp, edu.stanford.nlp.time.SUTime$Temporal);0.8062978982925415
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Temporal.<init>();0.7647902965545654
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Temporal.<init>(edu.stanford.nlp.time.SUTime$Temporal);0.7647902965545654
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.util.Pair.first();0.9999999403953552
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Time.<init>();0.9550943970680237
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Time.<init>(edu.stanford.nlp.time.SUTime$Time);0.9550943970680237
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.IsoDate.initBase();0.8646381497383118
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Temporal.toString();0.7883327007293701
edu.stanford.nlp.time.DurationTest.testDurationContainsDuration();edu.stanford.nlp.time.SUTime.Range.contains(edu.stanford.nlp.time.SUTime$Range);1.0
edu.stanford.nlp.time.DurationTest.testDurationContainsDuration();edu.stanford.nlp.time.SUTime.Range.<init>(edu.stanford.nlp.time.SUTime$Time, edu.stanford.nlp.time.SUTime$Time);0.8333333730697632
edu.stanford.nlp.util.MetaClassTest.testPrimitives();edu.stanford.nlp.util.MetaClass.create(java.lang.String);1.0
edu.stanford.nlp.util.MetaClassTest.testPrimitives();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);0.7857142686843872
edu.stanford.nlp.util.MetaClassTest.testPrimitives();edu.stanford.nlp.util.MetaClass.<init>(java.lang.String);0.75
edu.stanford.nlp.util.MetaClassTest.testBasic();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testBasic();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.8888888359069824
edu.stanford.nlp.semgraph.SemanticGraphTest.testShortestPath();edu.stanford.nlp.semgraph.SemanticGraph.getShortestUndirectedPathEdges(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testShortestPath();edu.stanford.nlp.semgraph.SemanticGraph.getShortestUndirectedPathNodes(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionInsensitiveNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPath(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionInsensitiveNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPath(V, V, boolean);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortedPathDirectionSensitiveEdges();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPathEdges(V, V, boolean);1.0
edu.stanford.nlp.stats.CountersTest.testRetainTopMass();edu.stanford.nlp.stats.Counters.retainTopMass(edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.<init>();1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.<init>(edu.stanford.nlp.util.MapFactory<E, edu.stanford.nlp.util.BinaryHeapPriorityQueue.edu.stanford.nlp.util.BinaryHeapPriorityQueue$Entry<E>>);1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.relaxPriority(E, double);0.817307710647583
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.isEmpty();0.7678571343421936
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.decreasePriority(E, double);0.7578125
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionInsensitiveEdges();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPathEdges(V, V, boolean);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedString(edu.stanford.nlp.stats.Counter<T>, int, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedString(edu.stanford.nlp.stats.Counter<T>, int, java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toString(edu.stanford.nlp.stats.Counter<E>, int);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedByKeysString(edu.stanford.nlp.stats.Counter<T>, java.lang.String, java.lang.String, java.lang.String);0.8500000238418579
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toVerticalString(edu.stanford.nlp.stats.Counter<E>, int);0.8125
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionSensitiveNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPath(V, V, boolean);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.8500000238418579
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findClosestMatches(K[], int);0.7906250357627869
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findClosestMatches(K[], int, boolean, boolean);0.7906250357627869
edu.stanford.nlp.stats.CountersTest.testRetainTop();edu.stanford.nlp.stats.Counters.retainTop(edu.stanford.nlp.stats.Counter<E>, int);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedList();edu.stanford.nlp.stats.Counters.toSortedList(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedList();edu.stanford.nlp.stats.Counters.toSortedList(edu.stanford.nlp.stats.Counter<E>, boolean);1.0
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.kBestSequences(edu.stanford.nlp.sequences.SequenceModel, int);0.9285714626312256
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.<init>();0.8333333730697632
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testReflexive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testReflexive();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.7963057160377502
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveInEntity();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.9558662176132202
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.toString();0.9558662176132202
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.918522298336029
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveNoNER();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObjInRelation();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObjInRelation();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.7963057160377502
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObjInRelation();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.7592703700065613
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCatsHaveTails();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreVBing();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9999999403953552
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.9727258682250977
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9176469445228577
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8530767560005188
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8517252206802368
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaBornInRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisManningOfStanford();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisManningOfStanford();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.7555668354034424
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testrabbitsEatVegetables();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testrabbitsEatVegetables();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.7592703700065613
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testrabbitsEatVegetables();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.7555668354034424
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPropagateCSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPropagateCSubj();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8555622100830078
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPropagateCSubj();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8234648704528809
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPropagateCSubj();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.7963057160377502
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testDogsInheaven();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveWithObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveWithObject();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8555622100830078
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveWithObject();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8234648704528809
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPAttachment();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testHeWasInaugurated();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8646571636199951
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8345810174942017
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.7911618947982788
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.7751129865646362
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaPresidentOfRegressionFull();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCatsAreCute();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisManningOfStanfordLong();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9999999403953552
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(edu.stanford.nlp.ling.tokensregex.SequencePattern$PatternExpr);0.9727258682250977
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.9727258682250977
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9176469445228577
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SequenceEndPatternExpr.<init>();0.8615570664405823
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8530767560005188
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8517252206802368
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SequenceStartPatternExpr.<init>();0.8409345149993896
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SpecialNodePatternExpr.<init>(java.lang.String);0.7980175614356995
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SpecialNodePatternExpr.<init>(java.lang.String, edu.stanford.nlp.util.Factory<edu.stanford.nlp.ling.tokensregex.SequencePattern$State>);0.7980175614356995
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.NodePattern.AnyNodePattern.<init>();0.7750562429428101
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.NodePatternExpr.<init>(edu.stanford.nlp.ling.tokensregex.NodePattern);0.7714470028877258
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.NodePattern.<init>();0.7631005644798279
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.PatternExpr.<init>();0.7631005644798279
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.<init>(java.lang.String, edu.stanford.nlp.ling.tokensregex.SequencePattern$PatternExpr);0.750135600566864
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.<init>(java.lang.String, edu.stanford.nlp.ling.tokensregex.SequencePattern$PatternExpr, edu.stanford.nlp.ling.tokensregex.SequenceMatchAction<T>);0.750135600566864
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThrowAway();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testOfWhich();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testFishLikeToSwim();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testIAmInFlorida();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testMyCatsPlayWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testMassOfIron();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.8826754689216614
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8555622100830078
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8234648704528809
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.7963057160377502
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaPresidentOfRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisIsOfStanford();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.888888955116272
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.8148148655891418
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>, boolean);0.7777777910232544
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.pattern();0.759265661239624
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9999999403953552
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.9727258682250977
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9176469445228577
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8530767560005188
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8517252206802368
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObjectPassive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObjectPassive();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.9839513897895813
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObjectPassive();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8823099732398987
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testNmodTmod();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testNmodTmod();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.7592703700065613
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPresidentObama();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.toString();0.9558662176132202
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8749542832374573
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9999999403953552
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.9727258682250977
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9313724637031555
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8659444451332092
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.7830976843833923
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testBlueCatsPlayWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9999999403953552
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.9727258682250977
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9176469445228577
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8530767560005188
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8517252206802368
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.ie.util.IETestUtils.mkWord(java.lang.String, int);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.matcher(java.util.List<? extends edu.stanford.nlp.util.CoreMap>);0.863609254360199
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.8440920114517212
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.7775393128395081
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.util.MapFactory.HashMapFactory.newSet();0.7775393128395081
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testFishLikeToSwimAlternateParse();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBG();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBG();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8555622100830078
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBG();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8234648704528809
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposInObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposInObject();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.7592703700065613
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.9166666269302368
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>, boolean);0.75
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.9558662176132202
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.918522298336029
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPassiveNSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposAsSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposAsSubj();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8234648704528809
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposAsSubj();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.7963057160377502
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposAsSubj();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.7592703700065613
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testBlueCatsPlayQuietlyWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPAttachmentTwo();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBGCollapsed();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBGCollapsed();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8555622100830078
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBGCollapsed();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8234648704528809
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithAdverb();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9999999403953552
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.9727258682250977
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9176469445228577
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8530767560005188
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8517252206802368
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPassiveReflexive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreWith();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreIn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPExtraction();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPExtraction();edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7944079041481018
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAllNominals();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAllNominals();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.7649853825569153
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGeorgeBoydRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGeorgeBoydRegression();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.7592703700065613
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.add(edu.stanford.nlp.ling.Datum<L, F>);1.0
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.initialize(int);0.9599999785423279
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.size();0.9393877983093262
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.<init>();0.7999999523162842
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.<init>(int);0.7999999523162842
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.add(java.util.Collection<F>, L);0.7999999523162842
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.util.MetaClass.create(java.lang.Class<?>);0.7716405987739563
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.7716405987739563
edu.stanford.nlp.optimization.MinimizerTest.testQNMinimizerRosenbrock();edu.stanford.nlp.optimization.QNMinimizer.minimize(edu.stanford.nlp.optimization.DiffFunction, double, double[]);1.0
edu.stanford.nlp.optimization.MinimizerTest.testQNMinimizerRosenbrock();edu.stanford.nlp.optimization.QNMinimizer.<init>();0.75
edu.stanford.nlp.optimization.MinimizerTest.testQNMinimizerRosenbrock();edu.stanford.nlp.optimization.QNMinimizer.<init>(edu.stanford.nlp.optimization.Function);0.75
edu.stanford.nlp.optimization.MinimizerTest.testQNMinimizerRosenbrock();edu.stanford.nlp.optimization.QNMinimizer.minimize(edu.stanford.nlp.optimization.DiffFunction, double, double[], int);0.75
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.<init>(java.util.List<edu.stanford.nlp.trees.Tree>, boolean, java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);0.8928571939468384
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.trees.Trees.leaves(edu.stanford.nlp.trees.Tree);0.8303588032722473
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.goldTransition(int, edu.stanford.nlp.parser.shiftreduce.State);0.785714328289032
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMapHelper(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree, java.util.IdentityHashMap<edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree>);0.7562500238418579
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testRelabel();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testRelabel();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.8571429252624512
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testRelabel();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7950641512870789
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testExcise();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testExcise();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9582935571670532
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testExcise();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.8984001874923706
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testExcise();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPatternsOnTree(java.util.List<edu.stanford.nlp.util.Pair<edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern>>, edu.stanford.nlp.trees.Tree);0.7786135077476501
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testBackReference();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedesFollows();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.877079963684082
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8238921165466309
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);0.770558774471283
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.Tree.iterator();0.7666667103767395
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatelyDominates();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatelyDominates();edu.stanford.nlp.trees.Tree.iterator();0.7743498086929321
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testTagErrors();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtreesExtended();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtreesExtended();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.7916666269302368
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.Tree.toString();0.9406211972236633
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.Tree.iterator();0.8076040744781494
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.7797374129295349
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.tregex.TregexParser.Root();0.7506716847419739
edu.stanford.nlp.trees.SemanticHeadFinderTest.testRegularSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.SemanticHeadFinderTest.testRegularSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);0.75
edu.stanford.nlp.trees.tregex.TregexTest.testSister();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testSister();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.877079963684082
edu.stanford.nlp.trees.tregex.TregexTest.testSister();edu.stanford.nlp.trees.Tree.iterator();0.8444444537162781
edu.stanford.nlp.trees.tregex.TregexTest.testSister();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);0.8061143755912781
edu.stanford.nlp.trees.tregex.TregexTest.testSister();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.7616698145866394
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMislabeledSpans();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMislabeledSpans();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8261197209358215
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMislabeledSpans();edu.stanford.nlp.parser.metrics.TreeSpanScoring.simplifyConstituents(edu.stanford.nlp.trees.TreebankLanguagePack, java.util.Set<edu.stanford.nlp.trees.Constituent>);0.7593750357627869
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9275748133659363
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.9166666865348816
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParser.<init>(java.io.Reader);0.7905427813529968
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPatternsOnTree(java.util.List<edu.stanford.nlp.util.Pair<edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern>>, edu.stanford.nlp.trees.Tree);0.7777777910232544
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.Token.<init>();0.7731959223747253
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.JJTTsurgeonParserState.<init>();0.7608582377433777
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonParserTokenManager.<init>(edu.stanford.nlp.trees.tregex.tsurgeon.SimpleCharStream);0.7528662085533142
edu.stanford.nlp.trees.tregex.TregexTest.testDominateDescribedChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testDominateDescribedChain();edu.stanford.nlp.trees.Tree.iterator();0.7743498086929321
edu.stanford.nlp.trees.tregex.TregexTest.testDominateDescribedChain();edu.stanford.nlp.trees.Tree.toString();0.7743498086929321
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.tregex.TregexMatcher.getVariableString(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.Tree.toString();0.9260274767875671
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.Tree.iterator();0.798039972782135
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7881887555122375
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.7881887555122375
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testExtraSpan();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMissingSpan();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testDocExamples();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testChinese();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.TreeTest.testDeeperCopy();edu.stanford.nlp.trees.Tree.deepCopy();1.0
edu.stanford.nlp.trees.TreeTest.testDeeperCopy();edu.stanford.nlp.trees.Tree.deepCopy(edu.stanford.nlp.trees.TreeFactory);0.75
edu.stanford.nlp.trees.tregex.TregexTest.testDominates();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.<init>(java.util.List<edu.stanford.nlp.trees.Tree>, boolean, java.util.Set<java.lang.String>);0.9767441749572754
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.trees.Trees.leaves(edu.stanford.nlp.trees.Tree);0.8651180267333984
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.goldTransition(int, edu.stanford.nlp.parser.shiftreduce.State);0.8255813717842102
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMapHelper(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree, java.util.IdentityHashMap<edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree>);0.7976744771003723
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.getEnclosingTree(edu.stanford.nlp.trees.Tree, java.util.Map<edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree>, java.util.List<edu.stanford.nlp.trees.Tree>);0.7885174751281738
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testChineseReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testChineseReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.884615421295166
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testChineseReplaceTree();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.856222927570343
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtrees();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtrees();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.875
edu.stanford.nlp.trees.tregex.TregexTest.testOptional();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testOptional();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9172254204750061
edu.stanford.nlp.trees.tregex.TregexTest.testOptional();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.877079963684082
edu.stanford.nlp.trees.tregex.TregexTest.testWordDisjunction();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testWordDisjunction();edu.stanford.nlp.trees.Tree.toString();0.9406211972236633
edu.stanford.nlp.trees.tregex.TregexTest.testWordDisjunction();edu.stanford.nlp.trees.Tree.iterator();0.8076040744781494
edu.stanford.nlp.trees.tregex.TregexTest.testWordDisjunction();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.7797374129295349
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.Tree.toString();0.8977950215339661
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8914391994476318
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.8914391994476318
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.Tree.iterator();0.779218316078186
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testKeyword();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.TreeTest.testTreeIterator();edu.stanford.nlp.trees.Tree.iterator();1.0
edu.stanford.nlp.trees.TreeTest.testTreeIterator();edu.stanford.nlp.trees.Tree.subTrees();0.75
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.TreeTransformer.apply(edu.stanford.nlp.trees.Tree);0.8507575988769531
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.TreeNormalizer.<init>();0.7943383455276489
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>();0.7701231837272644
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>(edu.stanford.nlp.trees.TreebankLanguagePack);0.7701231837272644
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.Tree.iterator();0.9406211972236633
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.Tree.toString();0.8741126656532288
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.tregex.TregexMatcher.matchesAt(edu.stanford.nlp.trees.Tree);0.7501780390739441
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testNoErrors();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatePrecedesFollows();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatePrecedesFollows();edu.stanford.nlp.trees.Tree.iterator();0.8297735452651978
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatePrecedesFollows();edu.stanford.nlp.trees.tregex.TregexMatcher.matchesAt(edu.stanford.nlp.trees.Tree);0.7501780390739441
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromGoldTagTree(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.trees.Tree.equals(java.lang.Object);0.9525411128997803
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequence(edu.stanford.nlp.trees.Tree, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.9171224236488342
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromTaggedSentence(java.util.List<? extends edu.stanford.nlp.ling.HasWord>);0.8427745699882507
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.7639645934104919
edu.stanford.nlp.trees.tregex.TregexTest.testNamed();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNamed();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);0.7676864862442017
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsert();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectShiftResultingTree();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectShiftTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.removeChild(int);1.0
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.TreeIterator.remove();0.8963465094566345
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.831932783126831
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.iterator();0.8088235855102539
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.value();0.7764706611633301
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.equals(java.lang.Object);0.7549019455909729
edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinderTest.testFindTreeWithSmallestSpan();edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.findTreeWithSmallestSpan(edu.stanford.nlp.trees.Tree, int, int);1.0
edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinderTest.testFindTreeWithSmallestSpan();null.finalize();0.8351611495018005
edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinderTest.testFindTreeWithSmallestSpan();edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.getPleonasticPatterns();0.7714285254478455
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testSeparators();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromGoldTagTree(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testSeparators();edu.stanford.nlp.util.CollectionUtils.transformAsList(java.util.Collection<? extends T1>, java.util.function.Function<T1, ? extends T2>);0.81779545545578
edu.stanford.nlp.trees.tregex.TregexTest.testParentEquals();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testParentEquals();edu.stanford.nlp.trees.Tree.iterator();0.8076040744781494
edu.stanford.nlp.trees.tregex.TregexTest.testParentEquals();edu.stanford.nlp.trees.tregex.TregexMatcher.matchesAt(edu.stanford.nlp.trees.Tree);0.7501780390739441
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCoindex();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCoindex();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9882401823997498
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCoindex();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.8085601329803467
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCoindex();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPatternsOnTree(java.util.List<edu.stanford.nlp.util.Pair<edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern>>, edu.stanford.nlp.trees.Tree);0.7786135077476501
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testMultiplePatterns();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testMultiplePatterns();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.8928571939468384
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testMultiplePatterns();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7950641512870789
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.trees.Tree.equals(java.lang.Object);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromGoldTagTree(edu.stanford.nlp.trees.Tree);0.9724401235580444
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequence(edu.stanford.nlp.trees.Tree, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.9129554033279419
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromTaggedSentence(java.util.List<? extends edu.stanford.nlp.ling.HasWord>);0.8527551889419556
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.8019228577613831
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.IdleTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.7799581289291382
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.FinalizeTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.7575341463088989
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.7560875415802002
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.UnaryTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.7531470060348511
edu.stanford.nlp.trees.tregex.TregexTest.testDominateUnaryChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testDominateUnaryChain();edu.stanford.nlp.trees.Tree.iterator();0.7743498086929321
edu.stanford.nlp.trees.tregex.TregexTest.testDominateUnaryChain();edu.stanford.nlp.trees.Tree.toString();0.7743498086929321
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.TreeNormalizer.<init>();0.8114768266677856
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>();0.789279580116272
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>(edu.stanford.nlp.trees.TreebankLanguagePack);0.789279580116272
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.ChineseEmptyFilter.<init>();0.75
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9657224416732788
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.Tree.toString();0.846664309501648
edu.stanford.nlp.trees.SemanticHeadFinderTest.testCopulaHeadSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.SemanticHeadFinderTest.testCopulaHeadSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);0.75
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8405554890632629
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.TreeTransformer.apply(edu.stanford.nlp.trees.Tree);0.83984375
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.TreeNormalizer.<init>();0.7879113554954529
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.normalizeWholeTree(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.TreeFactory);0.7630208134651184
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>();0.7629395127296448
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.BobChrisTreeNormalizer.<init>(edu.stanford.nlp.trees.TreebankLanguagePack);0.7629395127296448
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.norm(double[]);1.0
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.pairwiseSubtract(double[], double[]);0.7550881505012512
edu.stanford.nlp.optimization.DiffFunctionTest.testXSquaredPlusOne();null.<init>(edu.stanford.nlp.optimization.DiffFunctionTest);1.0
edu.stanford.nlp.optimization.DiffFunctionTest.testXSquaredPlusOne();null.domainDimension();0.75
edu.stanford.nlp.ling.LabelsTest.testWord();edu.stanford.nlp.ling.StringLabel.toString();1.0
edu.stanford.nlp.ling.LabelsTest.testWord();edu.stanford.nlp.ling.StringLabel.setFromString(java.lang.String);0.8014546632766724
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9657224416732788
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.Tree.toString();0.846664309501648
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testPrune();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testPrune();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7950641512870789
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testPrune();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.785714328289032
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.8181818723678589
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceTree();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7589248418807983
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexMatcher.resetChildIter(edu.stanford.nlp.trees.Tree);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.Tree.iterator();0.8826273679733276
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8585869669914246
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.8585869669914246
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.process.AbstractTokenizer.peek();0.8526582717895508
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.Tree.value();0.8473222851753235
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.Tree.indexLeaves(boolean);0.8344841003417969
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.Tree.indexLeaves(int, boolean);0.7702929973602295
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.Tree.isLeaf();0.7649437189102173
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testDelete();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.7950641512870789
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.785714328289032
edu.stanford.nlp.trees.tregex.TregexTest.testOneResult();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testOneResult();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.7557321786880493
edu.stanford.nlp.trees.tregex.TregexTest.testOneResult();edu.stanford.nlp.trees.Tree.iterator();0.75
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9657224416732788
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.Tree.toString();0.846664309501648
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testForeign();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTwoResults();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.<init>();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.addChild(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.addChild(int, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.indexLeaves(boolean);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.indexLeaves(int, boolean);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.isLeaf();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.iterator();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.numChildren();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.setChildren(java.util.List<? extends edu.stanford.nlp.trees.Tree>);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.toStringBuilder(java.lang.StringBuilder);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.toStringBuilder(java.lang.StringBuilder, java.util.function.Function<edu.stanford.nlp.ling.Label, java.lang.String>);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.Tree.value();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.tregex.TregexMatcher.<init>(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree, java.util.IdentityHashMap<edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree>, java.util.Map<java.lang.String, edu.stanford.nlp.trees.Tree>, edu.stanford.nlp.trees.tregex.VariableStrings, edu.stanford.nlp.trees.HeadFinder);0.8447976112365723
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8447976112365723
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.tregex.TregexMatcher.matchesAt(edu.stanford.nlp.trees.Tree);0.8447976112365723
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.tregex.TregexMatcher.resetChildIter(edu.stanford.nlp.trees.Tree);0.8447976112365723
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyMatchRoot();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyMatchRoot();edu.stanford.nlp.trees.Tree.toString();0.8741126656532288
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9562315940856934
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.Tree.iterator();0.899451732635498
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.Tree.toString();0.899451732635498
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.tregex.TregexMatcher.matchesAt(edu.stanford.nlp.trees.Tree);0.8304063081741333
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.Tree.iterator();0.8719794154167175
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.Tree.toString();0.8719794154167175
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(edu.stanford.nlp.trees.HeadFinder, java.util.function.Function<java.lang.String, java.lang.String>);0.8579983115196228
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(java.util.function.Function<java.lang.String, java.lang.String>);0.8579983115196228
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8193982839584351
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPattern.setPatternString(java.lang.String);0.7846109867095947
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinWithNamedNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinWithNamedNode();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8348172903060913
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinWithNamedNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.7999999523162842
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(edu.stanford.nlp.trees.HeadFinder, java.util.function.Function<java.lang.String, java.lang.String>);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(java.util.function.Function<java.lang.String, java.lang.String>);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);0.908713161945343
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.Tree.toString();0.878635823726654
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.Tree.iterator();0.8386978507041931
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();null.<init>(edu.stanford.nlp.trees.tregex.TregexTest);0.7595797777175903
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.ling.IndexedWord.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.9378637075424194
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.9378637075424194
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.semgraph.SemanticGraph.getComments();0.9188944697380066
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.objectbank.DelimitRegExIterator.next();0.8816271424293518
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.7957631349563599
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.atbFactory();1.0
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();null.noun();0.9569841027259827
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.HashIndex.size();0.9045313596725464
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.graph.DirectedMultiGraph.EdgeIterator.next();0.8930984139442444
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishHeadFinder.insertVerbs(java.lang.String[], java.lang.String[]);0.8735512495040894
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.CollectionUtils.asSet(T[]);0.8424323797225952
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.Generics.newHashMap();0.8369083404541016
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.8362317085266113
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.punctuationTags();0.8212763071060181
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.punctuationTags();0.8064519166946411
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.ling.CoreLabel.setTag(java.lang.String);0.8064152002334595
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.ling.IndexedWord.hashCode();0.8029155731201172
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.StringUtils.join(java.lang.Iterable<X>, java.lang.String);0.8012551069259644
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();null.adj();0.8007341027259827
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.punctuationWords();0.7978388667106628
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.getEncoding();0.7871854305267334
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.punctuationWords();0.7830142974853516
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack.punctuationTags();0.7684081792831421
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack.punctuationTags();0.7684081792831421
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack.punctuationTags();0.7684081792831421
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);0.7661694288253784
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.startSymbols();0.7587763667106628
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.GrammaticalRelation.toString();0.7577229738235474
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.750832200050354
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.HashIndex.size();1.0
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.graph.DirectedMultiGraph.EdgeIterator.next();0.9892221689224243
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.naturalli.Util.cleanTree(edu.stanford.nlp.semgraph.SemanticGraph);0.9421619176864624
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.graph.DirectedMultiGraph.EdgeIterator.hasNext();0.9050523638725281
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.ling.CoreLabel.setTag(java.lang.String);0.8584067225456238
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();null.<init>(edu.stanford.nlp.naturalli.OpenIETest);0.8530511260032654
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.Generics.newHashMap();0.7889546155929565
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.MapFactory.HashMapFactory.newSet();0.7883167266845703
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.MapFactory.HashMapFactory.newSet(java.util.Collection<K>);0.7883167266845703
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.ling.IndexedWord.index();0.7863689661026001
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.ling.IndexedWord.hashCode();0.7569095492362976
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.stats.ClassicCounter.keySet();0.7539511919021606
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.ling.IndexedWord.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9934209585189819
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);0.9058548808097839
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonEdit.<init>();0.8724704384803772
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonEdit.setOwningPattern(edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern);0.8288469314575195
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.<init>(edu.stanford.nlp.semgraph.semgrex.SemgrexPattern);0.788713276386261
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.<init>(java.lang.String, edu.stanford.nlp.semgraph.semgrex.SemgrexPattern);0.788713276386261
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.addEdit(edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonEdit);0.7637855410575867
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.execute(edu.stanford.nlp.semgraph.SemanticGraph);0.7637855410575867
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.7630211710929871
edu.stanford.nlp.semgraph.SemanticGraphUtilsTest.testCreateSemgrexPattern();edu.stanford.nlp.semgraph.SemanticGraphUtils.semgrexFromGraphOrderedNodes(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Collection<edu.stanford.nlp.ling.IndexedWord>, java.util.Map<edu.stanford.nlp.ling.IndexedWord, java.lang.String>, java.util.function.Function<edu.stanford.nlp.ling.IndexedWord, java.lang.String>);1.0
edu.stanford.nlp.semgraph.SemanticGraphUtilsTest.testCreateSemgrexPattern();edu.stanford.nlp.semgraph.SemanticGraphUtils.semgrexFromGraphHelper(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.semgraph.SemanticGraph, java.util.Set<edu.stanford.nlp.ling.IndexedWord>, java.util.Set<edu.stanford.nlp.semgraph.SemanticGraphEdge>, boolean, boolean, java.util.Collection<edu.stanford.nlp.ling.IndexedWord>, java.util.Map<edu.stanford.nlp.ling.IndexedWord, java.lang.String>, boolean, java.util.function.Function<edu.stanford.nlp.ling.IndexedWord, java.lang.String>);0.8282828330993652
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.semgraph.SemanticGraph.addRoot(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.graph.DirectedMultiGraph.EdgeIterator.next();0.9494528770446777
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.9089491963386536
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.util.Generics.newHashMap();0.8897172808647156
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.8889979124069214
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.ling.IndexedWord.hashCode();0.8535794615745544
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.ling.IndexedWord.index();0.7539138197898865
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.Generics.newHashMap();1.0
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.9991914629936218
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.ling.IndexedWord.hashCode();0.9593828320503235
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.8971498012542725
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem.search(java.util.function.Predicate<edu.stanford.nlp.util.Triple<java.lang.Double, java.util.List<edu.stanford.nlp.stats.Counter<java.lang.String>>, java.util.function.Supplier<edu.stanford.nlp.naturalli.SentenceFragment>>>, edu.stanford.nlp.classify.Classifier<edu.stanford.nlp.naturalli.ClauseSplitter$ClauseClassifierLabel, java.lang.String>, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, java.util.function.Function<edu.stanford.nlp.util.Triple<edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$State, edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$Action, edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$State>, edu.stanford.nlp.stats.Counter<java.lang.String>>, int);0.8118749260902405
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.semgraph.SemanticGraph.addRoot(edu.stanford.nlp.ling.IndexedWord);0.8038970232009888
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.Pair.makePair(X, Y);0.8016284108161926
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.HashIndex.iterator();0.8007522821426392
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.naturalli.Util.cleanTree(edu.stanford.nlp.semgraph.SemanticGraph);0.7793034315109253
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.ling.CoreLabel.setWord(java.lang.String);0.7501940727233887
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testIsAllCaps();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.isAllCaps(java.lang.String);1.0
edu.stanford.nlp.util.BeamTest.testContent();edu.stanford.nlp.util.Beam.iterator();1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.<init>(int, boolean);0.8333333730697632
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.<init>(int, boolean, boolean);0.8333333730697632
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel, int);0.75
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.<init>();1.0
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.hashCode();0.875
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.equals(java.lang.Object);0.8333333134651184
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSerialization();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.equals(java.lang.Object);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSerialization();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.7857142686843872
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testFindMatches();edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(java.lang.String, int, int, boolean);1.0
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testFindMatches();edu.stanford.nlp.ling.tokensregex.PhraseTable.<init>();0.75
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testFindMatches();edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(edu.stanford.nlp.ling.tokensregex.PhraseTable$WordList, int, int, boolean);0.75
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testIterator();edu.stanford.nlp.ling.tokensregex.PhraseTable.iterator();1.0
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.addPhrases(java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.addPhrase(java.lang.String, java.lang.String);0.7777777910232544
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.lookupNormalized(java.lang.String);0.7604166269302368
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordTag.setWord(java.lang.String);1.0
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordTag.word();0.9189685583114624
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordLemmaTag.lemma();0.8087707757949829
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.process.Morphology.lemmatizeStatic(edu.stanford.nlp.ling.WordTag);0.7995100617408752
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);0.761695384979248
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.ling.WordTag.word();1.0
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.8247672915458679
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.ling.WordTag.<init>(java.lang.String, java.lang.String);0.7839162349700928
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);1.0
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.ling.WordLemmaTag.lemma();0.773809552192688
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.process.Morphology.stemStatic(java.lang.String, java.lang.String);0.75
edu.stanford.nlp.process.MorphologyTest.testStemStatic();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);1.0
edu.stanford.nlp.process.MorphologyTest.testStemStatic();edu.stanford.nlp.process.Morphology.stemStatic(java.lang.String, java.lang.String);0.75
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testRelativeDateCreation();edu.stanford.nlp.ie.pascal.ISODateInstance.getDateString();1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testRelativeDateCreation();edu.stanford.nlp.ie.pascal.ISODateInstance.extractFields(java.lang.String);0.8333333730697632
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testRelativeDateCreation();edu.stanford.nlp.ie.pascal.ISODateInstance.incrementDay(edu.stanford.nlp.ie.pascal.ISODateInstance, edu.stanford.nlp.util.Pair<edu.stanford.nlp.ie.pascal.ISODateInstance$DateField, java.lang.Integer>);0.8009259104728699
edu.stanford.nlp.util.ArraySetTest.testClear();edu.stanford.nlp.util.ArraySet.iterator();1.0
edu.stanford.nlp.util.ArraySetTest.testClear();edu.stanford.nlp.util.ArraySet.size();0.8333333730697632
edu.stanford.nlp.util.ArraySetTest.testEquals();edu.stanford.nlp.util.ArraySet.iterator();1.0
edu.stanford.nlp.util.ArraySetTest.testEquals();edu.stanford.nlp.util.ArraySet.size();1.0
edu.stanford.nlp.util.ArraySetTest.testAdd();edu.stanford.nlp.util.ArraySet.add(E);1.0
edu.stanford.nlp.util.ArraySetTest.testRemove();edu.stanford.nlp.util.ArraySet.iterator();1.0
edu.stanford.nlp.util.ArraySetTest.testRemove();edu.stanford.nlp.util.ArraySet.size();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.ling.IndexedWord.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.9678800106048584
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph, boolean);0.9585794806480408
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8959864974021912
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.setEnv(edu.stanford.nlp.semgraph.semgrex.Env);0.7968191504478455
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.Env.bind(java.lang.String, java.lang.Object);0.7590344548225403
edu.stanford.nlp.trees.ModCollinsHeadFinderTest.testModCollinsHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.ModCollinsHeadFinderTest.testModCollinsHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);0.75
edu.stanford.nlp.pipeline.JSONOutputterTest.testComplexJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testCollectionJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testNestedJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.unmodifiableView();1.0
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.get(int);0.8333333730697632
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.<init>();0.75
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.<init>(java.util.Collection<? extends E>);0.75
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.addAll(java.util.Collection<? extends E>);0.75
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.equals(java.lang.Object);0.75
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.size();0.75
edu.stanford.nlp.ling.CategoryWordTagTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.category();1.0
edu.stanford.nlp.ling.CategoryWordTagTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.word();0.8333333730697632
edu.stanford.nlp.ling.CategoryWordTagFactoryTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.category();0.9999999403953552
edu.stanford.nlp.ling.CategoryWordTagFactoryTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.word();0.8143460154533386
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);1.0
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.<init>();0.875
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.register(java.lang.String, java.util.Properties, edu.stanford.nlp.util.Lazy<edu.stanford.nlp.pipeline.Annotator>);0.78125
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMatchAll();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testMacro();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph, boolean);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.875
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testPrettyPrint();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.prettyPrint();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testPrettyPrint();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.prettyPrint(java.io.PrintStream);0.75
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.ling.CoreLabel.word();0.9337620139122009
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8571428656578064
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7936508059501648
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8588080406188965
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.839436411857605
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8191983699798584
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.7619500160217285
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testAttributes();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.921820342540741
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8095238208770752
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8095238208770752
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.921820342540741
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.921820342540741
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8095238208770752
edu.stanford.nlp.process.PTBTokenizerTest.testJacobEisensteinApostropheCase();edu.stanford.nlp.process.PTBTokenizer.newPTBTokenizer(java.io.Reader);0.9999999403953552
edu.stanford.nlp.process.PTBTokenizerTest.testJacobEisensteinApostropheCase();edu.stanford.nlp.process.PTBTokenizer.<init>(java.io.Reader, edu.stanford.nlp.process.LexedTokenFactory<T>, java.lang.String);0.8778625726699829
edu.stanford.nlp.process.PTBTokenizerTest.testJacobEisensteinApostropheCase();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.8741094470024109
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9944093227386475
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.878179669380188
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.809302806854248
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.7589311599731445
edu.stanford.nlp.util.IterablesTest.testGroup();edu.stanford.nlp.util.Iterables.group(java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.readSVMLightFormat(java.io.File);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.writeSVMLightFormat(java.io.File);0.9736841917037964
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.<init>();0.8214285373687744
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.<init>(int);0.8214285373687744
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.<init>(int, edu.stanford.nlp.util.Index<F>, edu.stanford.nlp.util.Index<L>);0.8214285373687744
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.initialize(int);0.7571429014205933
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.io.File, java.lang.Class<? extends java.io.InputStream>);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.io.File, java.lang.Class<? extends java.io.InputStream>, java.lang.String);0.75
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.lang.String, java.lang.String);0.75
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.gapDecode(byte[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.gapEncode(int[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.gapDecode(byte[], int, int);0.75
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.PairsHolder.add(edu.stanford.nlp.ling.WordTag);1.0
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.HistoryTable.add(edu.stanford.nlp.tagger.maxent.History);0.7797619104385376
edu.stanford.nlp.ling.LabelsTest.testWordTag();edu.stanford.nlp.ling.WordTag.tag();1.0
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.get(java.lang.Object);1.0
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.entrySet();0.875
edu.stanford.nlp.trees.international.negra.NegraPennLanguagePackTest.testBasicCategory();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.basicCategory(java.lang.String);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.contains(K1, K2);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.size();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.get(K1, K2);0.9444444179534912
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.put(K1, K2, V);0.9444444179534912
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.clear();0.8999999761581421
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.isEmpty();0.7857142686843872
edu.stanford.nlp.time.DurationTest.testDurationContainsTime();edu.stanford.nlp.time.SUTime.Range.contains(edu.stanford.nlp.time.SUTime$Time);1.0
edu.stanford.nlp.time.DurationTest.testDurationContainsTime();edu.stanford.nlp.time.SUTime.Range.<init>(edu.stanford.nlp.time.SUTime$Time, edu.stanford.nlp.time.SUTime$Time);0.8333333730697632
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris2(java.lang.String, boolean, java.util.Collection<java.lang.String>);0.875
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShapeDigits(java.lang.String);0.9500000476837158
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris1(java.lang.String);0.9627906680107117
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.8067901134490967
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris4(java.lang.String, boolean, java.util.Collection<java.lang.String>);0.9500000476837158
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris2(java.lang.String, boolean, java.util.Collection<java.lang.String>);0.9500000476837158
edu.stanford.nlp.util.IntervalTreeTest.testGetOverlapping();edu.stanford.nlp.util.IntervalTree.getOverlapping(T);1.0
edu.stanford.nlp.util.IntervalTreeTest.testGetOverlapping();edu.stanford.nlp.util.IntervalTree.remove(T);0.8333333134651184
edu.stanford.nlp.util.IntervalTreeTest.testGetOverlapping();edu.stanford.nlp.util.IntervalTree.getOverlapping(edu.stanford.nlp.util.IntervalTree.edu.stanford.nlp.util.IntervalTree$TreeNode<E, T>, edu.stanford.nlp.util.Interval<E>);0.75
edu.stanford.nlp.util.IntervalTreeTest.testGetOverlapping();edu.stanford.nlp.util.IntervalTree.height();0.75
edu.stanford.nlp.trees.TreeTest.testDominates();edu.stanford.nlp.trees.Tree.dominates(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testBuildParentMap();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.util.IterablesTest.testTransform();edu.stanford.nlp.util.Iterables.transform(java.lang.Iterable<K>, java.util.function.Function<? super K, ? extends V>);1.0
edu.stanford.nlp.util.IterablesTest.testMerge3();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V>, java.lang.Iterable<V>, java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.util.IterablesTest.testMerge3();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V1>, java.lang.Iterable<V2>, java.lang.Iterable<V3>, edu.stanford.nlp.util.Iterables.edu.stanford.nlp.util.Iterables$IncrementComparator<V1, V2>, edu.stanford.nlp.util.Iterables.edu.stanford.nlp.util.Iterables$IncrementComparator<V1, V3>);0.75
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.toString();1.0
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.ValueLabel.<init>();0.9750781655311584
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.<init>(java.lang.String);0.9426424503326416
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.setValue(java.lang.String);0.8279274106025696
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.setFromString(java.lang.String);0.8014546632766724
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.labelFactory();0.7705698609352112
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabelFactory.newLabel(edu.stanford.nlp.ling.Label);0.7598179578781128
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabelFactory.newLabel(java.lang.String);0.7598179578781128
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.value();0.7590982913970947
edu.stanford.nlp.process.WhitespaceTokenizerTest.testWordTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.factory(boolean);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testHasChildren();edu.stanford.nlp.semgraph.SemanticGraph.hasChildren(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.util.StringUtilsTest.testLongestCommonSubstring();edu.stanford.nlp.util.StringUtils.longestCommonSubstring(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.ConcatenationIteratorTest.testIterator();edu.stanford.nlp.util.ConcatenationIterator.next();1.0
edu.stanford.nlp.util.ConcatenationIteratorTest.testIterator();edu.stanford.nlp.util.ConcatenationIterator.<init>(java.util.Iterator<T>, java.util.Iterator<T>);0.8333333730697632
edu.stanford.nlp.util.ConcatenationIteratorTest.testIterator();edu.stanford.nlp.util.ConcatenationIterator.hasNext();0.7857142686843872
edu.stanford.nlp.stats.CountersTest.testProduct();edu.stanford.nlp.stats.Counters.product(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testIntersection();edu.stanford.nlp.stats.Counters.intersection(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);0.9444444179534912
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.predict(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.9285714626312256
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.8636363744735718
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.8636363744735718
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.8505500555038452
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.<init>();0.8333333730697632
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.7857142686843872
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.7857142686843872
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.util.ConfusionMatrix.<init>();0.754115104675293
edu.stanford.nlp.naturalli.UtilTest.guessNER();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.naturalli.UtilTest.guessNER();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);0.75
edu.stanford.nlp.stats.CountersTest.testRetainAbove();edu.stanford.nlp.stats.Counters.retainAbove(edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.IntCounter.getFactory();1.0
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.ClassicCounter.getFactory();0.9451562166213989
edu.stanford.nlp.stats.CounterTestBase.testFactory();null.getFactory();0.7947354912757874
edu.stanford.nlp.naturalli.UtilTest.nerOverlap();edu.stanford.nlp.naturalli.Util.nerOverlap(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.naturalli.UtilTest.nerOverlap();edu.stanford.nlp.naturalli.Util.nerOverlap(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span, edu.stanford.nlp.ie.machinereading.structure.Span, java.util.Optional<edu.stanford.nlp.semgraph.SemanticGraph>);0.75
edu.stanford.nlp.stats.CountersTest.testTransformWithValuesAdd();edu.stanford.nlp.stats.Counters.transformWithValuesAdd(edu.stanford.nlp.stats.Counter<T1>, java.util.function.Function<T1, T2>);1.0
edu.stanford.nlp.stats.CountersTest.testFlatten();edu.stanford.nlp.stats.Counters.flatten(java.util.Map<E2, edu.stanford.nlp.stats.Counter<E>>);1.0
edu.stanford.nlp.stats.CountersTest.testPearsonsCorrelationCoefficient();edu.stanford.nlp.stats.Counters.pearsonsCorrelationCoefficient(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testHIndex();edu.stanford.nlp.stats.Counters.hIndex(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);0.949999988079071
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.9090908765792847
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.9090908765792847
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.predict(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.8857142925262451
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.8214285373687744
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.8214285373687744
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.8005499839782715
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.<init>();0.800000011920929
edu.stanford.nlp.stats.CountersTest.testRemoveKeys();edu.stanford.nlp.stats.Counters.removeKeys(edu.stanford.nlp.stats.Counter<E>, java.util.Collection<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.min(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.argmin(edu.stanford.nlp.stats.Counter<E>);0.9166666269302368
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.mean(edu.stanford.nlp.stats.Counter<E>);0.875
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.argmax(edu.stanford.nlp.stats.Counter<E>);0.8333333730697632
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.max(edu.stanford.nlp.stats.Counter<E>);0.8333333730697632
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.clear();0.7966192960739136
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.setCount(E, double);0.7716192603111267
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.subtractInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);0.7666666507720947
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.addInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);0.75
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.addInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>, double);0.75
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.keysAt(edu.stanford.nlp.stats.Counter<E>, double);0.75
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.retainNonZeros(edu.stanford.nlp.stats.Counter<E>);0.75
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>, boolean, boolean);0.75
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);0.9444444179534912
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.8571428656578064
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.8571428656578064
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.predict(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.7857142686843872
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.7727272510528564
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.7727272510528564
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.stats.ClassicCounter.size();0.7588844299316406
edu.stanford.nlp.naturalli.UtilTest.extractNERDifferingTypes();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testWeightingWorks();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();1.0
edu.stanford.nlp.stats.CountersTest.testUnion();edu.stanford.nlp.stats.Counters.union(C, C);1.0
edu.stanford.nlp.stats.CountersTest.testLogNormalize();edu.stanford.nlp.stats.Counters.logSum(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testLogNormalize();edu.stanford.nlp.stats.Counters.logNormalizeInPlace(edu.stanford.nlp.stats.Counter<E>);0.9736841917037964
edu.stanford.nlp.naturalli.UtilTest.extractNER();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.naturalli.UtilTest.extractNER();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.75
edu.stanford.nlp.stats.CountersTest.testPointwiseMutualInformation();edu.stanford.nlp.stats.Counters.pointwiseMutualInformation(edu.stanford.nlp.stats.Counter<T1>, edu.stanford.nlp.stats.Counter<T2>, edu.stanford.nlp.stats.Counter<edu.stanford.nlp.util.Pair<T1, T2>>, edu.stanford.nlp.util.Pair<T1, T2>);1.0
edu.stanford.nlp.stats.CountersTest.testAbsoluteDifference();edu.stanford.nlp.stats.Counters.absoluteDifference(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.setCount(K1, K2, double);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.getCount(K1, K2);0.9375
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount();0.800000011920929
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount(K1);0.800000011920929
edu.stanford.nlp.stats.DistributionTest.testGetDistributionFromLogValues();edu.stanford.nlp.stats.Distribution.getDistributionFromLogValues(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.DistributionTest.testGetDistributionFromLogValues();edu.stanford.nlp.stats.Distribution.getCount(E);0.8125
edu.stanford.nlp.stats.DistributionTest.testGetDistributionFromLogValues();edu.stanford.nlp.stats.Distribution.getDistribution(edu.stanford.nlp.stats.Counter<E>);0.75
edu.stanford.nlp.stats.DistributionTest.testGetDistributionFromLogValues();edu.stanford.nlp.stats.Distribution.keySet();0.75
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.<init>();1.0
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.<init>(int);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.initialize(int);0.9529411792755127
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.iterator();0.8823529481887817
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.add(edu.stanford.nlp.ling.Datum<L, F>);0.7647058367729187
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.addAll(java.lang.Iterable<? extends edu.stanford.nlp.ling.Datum<L, F>>);0.7647058367729187
edu.stanford.nlp.stats.CountersTest.testEquals();edu.stanford.nlp.stats.Counters.equals(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testEquals();edu.stanford.nlp.stats.Counters.equals(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.stats.CountersTest.testSerializeStringCounter();edu.stanford.nlp.stats.Counters.serializeStringCounter(edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testSerializeStringCounter();edu.stanford.nlp.stats.Counters.deserializeStringCounter(java.lang.String);0.9583333730697632
edu.stanford.nlp.stats.CountersTest.testSerializeStringCounter();edu.stanford.nlp.stats.ClassicCounter.setCount(E, double);0.7530438899993896
edu.stanford.nlp.stats.CountersTest.testSerializeStringCounter();edu.stanford.nlp.stats.Counters.serializeStringCounter(edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String, double);0.75
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBESResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testJensenShannonDivergence();edu.stanford.nlp.stats.Counters.jensenShannonDivergence(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.naturalli.UtilTest.guessNERSpan();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.add(edu.stanford.nlp.ling.Datum<L, F>);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.<init>();0.875
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testOrdinalNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedOrdinalString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.stats.CountersTest.testToTiedRankCounter();edu.stanford.nlp.stats.Counters.toTiedRankCounter(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testL2Norm();edu.stanford.nlp.stats.Counters.L2Norm(C);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOEResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.<init>();1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();0.8999999761581421
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.add(edu.stanford.nlp.ling.Datum<L, F>);0.8333333730697632
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.add(edu.stanford.nlp.ling.RVFDatum<L, F>, float);0.8333333730697632
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.RVFDataset.<init>();0.8104650378227234
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.RVFDataset.<init>(int);0.8104650378227234
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.RVFDataset.initialize(int);0.8104650378227234
edu.stanford.nlp.stats.CountersTest.testDivideInPlace();edu.stanford.nlp.stats.Counters.divideInPlace(edu.stanford.nlp.stats.TwoDimensionalCounter<A, B>, double);1.0
edu.stanford.nlp.stats.CountersTest.testDivideInPlace();edu.stanford.nlp.stats.Counters.divideInPlace(edu.stanford.nlp.stats.Counter<E>, double);0.75
edu.stanford.nlp.stats.CountersTest.testAddInPlaceCollection();edu.stanford.nlp.stats.Counters.addInPlace(edu.stanford.nlp.stats.Counter<E>, java.util.Collection<E>);1.0
edu.stanford.nlp.stats.CountersTest.testL2Normalize();edu.stanford.nlp.stats.Counters.L2Normalize(C);1.0
edu.stanford.nlp.stats.CountersTest.testL2Normalize();edu.stanford.nlp.stats.Counters.L2Norm(C);0.75
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2Results();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.segment(K[]);0.9583333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.888888955116272
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(java.lang.Iterable<K>, V);0.7777777910232544
edu.stanford.nlp.util.DeltaIndexTest.testContains();edu.stanford.nlp.util.DeltaIndex.contains(java.lang.Object);1.0
edu.stanford.nlp.util.DeltaIndexTest.testContains();edu.stanford.nlp.util.HashIndex.contains(java.lang.Object);0.763020396232605
edu.stanford.nlp.math.ArrayMathTest.testPairwiseMultiply();edu.stanford.nlp.math.ArrayMath.pairwiseMultiply(double[], double[]);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testInitialStateFromTagged();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromTaggedSentence(java.util.List<? extends edu.stanford.nlp.ling.HasWord>);1.0
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testRightTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.<init>(java.lang.String, edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftTransitionTest.testTransition();edu.stanford.nlp.parser.shiftreduce.ShiftTransition.<init>();1.0
edu.stanford.nlp.trees.PennTreeReaderTest.testRead();edu.stanford.nlp.trees.PennTreeReader.readTree();1.0
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testLeftTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.<init>(java.lang.String, edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtilsTest.testBinarySide();edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.getBinarySide(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.TreeTest.testPennPrint();edu.stanford.nlp.trees.Tree.pennString();1.0
edu.stanford.nlp.trees.TreeTest.testPennPrint();edu.stanford.nlp.trees.Tree.pennPrint(java.io.PrintWriter);0.8571428656578064
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.classify.Dataset.add(edu.stanford.nlp.ling.Datum<L, F>);1.0
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.classify.GeneralDataset.labelIndex();0.9763760566711426
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.ling.BasicDatum.label();0.8532282710075378
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.classify.GeneralDataset.size();0.8390731811523438
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.util.HashIndex.equals(java.lang.Object);0.7832104563713074
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.classify.GeneralDataset.<init>();0.762793779373169
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.ling.BasicDatum.setLabel(LabelType);0.761693000793457
edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModelTest.testGetSignature();edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModel.getSignature(java.lang.String, int);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNonsense();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.util.ConfusionMatrixTest.testRealLabels();edu.stanford.nlp.util.ConfusionMatrix.setUseRealLabels(boolean);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testRealLabels();edu.stanford.nlp.util.ConfusionMatrix.printTable();0.8200000524520874
edu.stanford.nlp.util.ConfusionMatrixTest.testRealLabels();edu.stanford.nlp.util.ConfusionMatrix.add(U, U);0.7666666507720947
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.add(U, U);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.<init>(java.util.Locale);0.75
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.add(U, U, int);0.75
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.add(U, U, int);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.get(U, U);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.printTable();0.9500000476837158
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.setUseRealLabels(boolean);0.875
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.sortKeys();0.875
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.<init>(java.util.Locale);0.75
edu.stanford.nlp.util.ConfusionMatrixTest.testBulkAdd();edu.stanford.nlp.util.ConfusionMatrix.add(U, U, int);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testExactBestSequenceFinder();edu.stanford.nlp.sequences.ExactBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testExactBestSequenceFinder();edu.stanford.nlp.sequences.ExactBestSequenceFinder.<init>();0.8311307430267334
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.8214285373687744
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);0.8888888955116272
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8888888955116272
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.parseString(java.lang.String);0.8181818127632141
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.getNext();0.75
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.9285714626312256
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object[], java.lang.String[]);0.75
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticFieldFromProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.util.Properties);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticFieldFromProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object[], java.util.Properties);0.75
edu.stanford.nlp.util.ArgumentParserTest.testFillStaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.testFillStaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>[], java.lang.String[]);0.75
edu.stanford.nlp.util.ArgumentParserTest.testFillStaticFieldFromProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.util.Properties);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object[], java.lang.String[]);0.75
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsNoInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsNoInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>[], java.lang.String[]);0.75
edu.stanford.nlp.util.ArgumentParserTest.checkOptionsOverrideProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.util.Properties, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.checkOptionsOverrideProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object[], java.util.Properties);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[], int, int);1.0
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.<init>();1.0
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.toSecondsString(long);0.9000000357627869
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.reportNano();0.800000011920929
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.start();0.800000011920929
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.report();0.75
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.8333333730697632
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.8333333730697632
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();0.778781533241272
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.9999999403953552
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.atbFactory();0.9900000691413879
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.ArabicTokenizerFactory.getTokenizer(java.io.Reader);0.8216518759727478
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.<init>(java.io.Reader, edu.stanford.nlp.process.LexedTokenFactory<T>, java.util.Properties);0.7734375596046448
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.944444477558136
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.944444477558136
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.setTokenizerFactory(edu.stanford.nlp.process.TokenizerFactory<? extends edu.stanford.nlp.ling.HasWord>);0.9210526347160339
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.setSentenceDelimiter(java.lang.String);0.7666666507720947
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.atbFactory();1.0
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.ArabicTokenizerFactory.setOptions(java.lang.String);0.9016698002815247
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.process.AbstractTokenizer.hasNext();0.8622964024543762
edu.stanford.nlp.process.PTBTokenizerTest.testEmoji();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);0.9999999403953552
edu.stanford.nlp.process.PTBTokenizerTest.testEmoji();edu.stanford.nlp.process.AbstractTokenizer.next();0.7531014680862427
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9305079579353333
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.Tree.iterator();0.8821467757225037
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.tregex.TregexMatcher.resetChildIter(edu.stanford.nlp.trees.Tree);0.8739790916442871
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.Tree.TreeIterator.next();0.8530697822570801
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.Tree.indexLeaves(boolean);0.8220003843307495
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.WhitespaceTokenizerFactory.getTokenizer(java.io.Reader);1.0
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.WhitespaceTokenizerFactory.<init>(edu.stanford.nlp.process.LexedTokenFactory<T>, boolean);0.8841015100479126
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.8547474145889282
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.<init>(edu.stanford.nlp.process.LexedTokenFactory, java.io.Reader, boolean);0.8112897276878357
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.getNext();0.7947328686714172
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.getInDegree(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.getOutDegree(V);0.9583332538604736
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.9074074029922485
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.805555522441864
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.7749999761581421
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);0.75
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceOutOfOrder();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceInOrder();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceNoIndices();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.getPriority();1.0
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.size();0.9103878140449524
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.<init>();0.7695686221122742
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.<init>(int);0.7695686221122742
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.grow(int);0.7695686221122742
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.next();0.7695686221122742
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.toString();0.7695686221122742
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.toString(int);0.7695686221122742
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithEol();edu.stanford.nlp.io.IOUtils.getLineIterable(java.io.Reader, int, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseUtilsTest.testNormalize();edu.stanford.nlp.trees.international.pennchinese.ChineseUtils.normalize(java.lang.String, int, int, int);1.0
edu.stanford.nlp.util.IterablesTest.testChain();edu.stanford.nlp.util.Iterables.chain(java.lang.Iterable<T>[]);1.0
edu.stanford.nlp.util.IterablesTest.testChain();edu.stanford.nlp.util.Iterables.chain(java.lang.Iterable<? extends java.lang.Iterable<T>>);0.75
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testIsCompatible();edu.stanford.nlp.ie.pascal.ISODateInstance.isCompatible(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.classify(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.9999999403953552
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);0.9903287887573242
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.util.Generics.newHashSet();0.9865941405296326
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.lang.String, boolean, boolean);0.9645390510559082
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.lang.String, boolean, boolean, java.lang.String);0.9645390510559082
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.8275291323661804
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.containsValidPos(java.util.List<edu.stanford.nlp.ling.CoreLabel>, int, int);0.7872340083122253
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.findStartIndex(edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier$Entry, java.util.List<edu.stanford.nlp.ling.CoreLabel>, int, java.util.Set<java.lang.String>, boolean);0.7720364332199097
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);0.7530350089073181
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.classify(java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);0.9898990392684937
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.util.Generics.newHashSet();0.8327069282531738
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.8016244769096375
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.containsValidPos(java.util.List<edu.stanford.nlp.ling.CoreLabel>, int, int);0.7777777910232544
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);0.7690929174423218
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.classify(java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);0.987013041973114
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.util.Generics.newArrayList();0.8280344605445862
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.sequences.SeqClassifierFlags.setProperties(java.util.Properties, boolean);0.7968295216560364
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.io.BufferedReader, boolean, boolean, java.lang.String);0.7619048357009888
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.containsValidPos(java.util.List<edu.stanford.nlp.ling.CoreLabel>, int, int);0.7500000596046448
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr4();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.ling.LabelsTest.testTaggedWord();edu.stanford.nlp.ling.TaggedWord.tag();1.0
edu.stanford.nlp.ling.LabelsTest.testTaggedWord();edu.stanford.nlp.ling.StringLabel.value();0.7958149909973145
edu.stanford.nlp.simple.DocumentTest.testText();edu.stanford.nlp.simple.Document.text();1.0
edu.stanford.nlp.simple.DocumentTest.testDocid();edu.stanford.nlp.simple.Document.docid();1.0
edu.stanford.nlp.simple.DocumentTest.testDocid();edu.stanford.nlp.simple.Document.setDocid(java.lang.String);0.8125
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.setText(java.lang.String);0.9999999403953552
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.newBuilder();0.8404287695884705
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.simple.Document.<init>(java.lang.String);0.819465696811676
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.simple.Document.<init>(java.util.Properties, java.lang.String);0.819465696811676
edu.stanford.nlp.util.IntervalTreeTest.testIteratorRandom();edu.stanford.nlp.util.IntervalTree.iterator();1.0
edu.stanford.nlp.util.IntervalTreeTest.testIteratorRandom();edu.stanford.nlp.util.IntervalTree.add(T);0.8333333134651184
edu.stanford.nlp.util.IntervalTreeTest.testIteratorOrdered();edu.stanford.nlp.util.IntervalTree.add(T);1.0
edu.stanford.nlp.util.IntervalTreeTest.testIteratorOrdered();edu.stanford.nlp.util.IntervalTree.iterator();1.0
edu.stanford.nlp.util.IntervalTreeTest.testIteratorOrdered();edu.stanford.nlp.util.IntervalTree.add(edu.stanford.nlp.util.IntervalTree.edu.stanford.nlp.util.IntervalTree$TreeNode<E, T>, T, double);0.75
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findNonOverlapping(K[]);0.9583333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.888888955116272
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.Match.toString();0.8071429133415222
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(java.lang.Iterable<K>, V);0.7777777910232544
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.objectbank.DelimitRegExIterator.next();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.8944567441940308
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.870117723941803
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.870117723941803
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.word();1.0
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.8888888955116272
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.8571428656578064
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.<init>(edu.stanford.nlp.ling.CoreLabel);0.75
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.<init>(edu.stanford.nlp.ling.Label);0.75
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.<init>(java.lang.String, int, int);0.75
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.equals(java.lang.Object);0.75
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.index();0.75
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.7727272510528564
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.contains(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.toInterval(E, E);0.8999999761581421
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.toInterval(E, E, int);0.8999999761581421
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.contains(E);0.75
edu.stanford.nlp.util.IntervalTest.testIntervalOverlaps();edu.stanford.nlp.util.Interval.overlaps(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalOverlaps();edu.stanford.nlp.util.Interval.toInterval(E, E);0.8999999761581421
edu.stanford.nlp.util.IntervalTest.testIntervalOverlaps();edu.stanford.nlp.util.Interval.toInterval(E, E, int);0.8999999761581421
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[], int, int);0.75
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.incrementCount(K1, K2, double);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.getCount(K1, K2);0.7916666865348816
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>();1.0
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>(edu.stanford.nlp.util.MapFactory<K1, edu.stanford.nlp.stats.IntCounter<K2>>, edu.stanford.nlp.util.MapFactory<K2, edu.stanford.nlp.util.MutableInteger>);1.0
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>(edu.stanford.nlp.util.MapFactory<K1, edu.stanford.nlp.stats.IntCounter<K2>>, edu.stanford.nlp.util.MapFactory<K2, edu.stanford.nlp.util.MutableInteger>, int);1.0
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.getCount(K1, K2);0.875
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.setCount(K1, K2, double);0.875
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.incrementCount(K1, K2, double);0.7857142686843872
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testSameSemanticsForDifferentWordOrder();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.9558662176132202
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.918522298336029
edu.stanford.nlp.util.EditDistanceTest.testEmpty();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testEmpty();edu.stanford.nlp.util.EditDistance.best();0.8125
edu.stanford.nlp.util.EditDistanceTest.testEmpty();edu.stanford.nlp.util.EditDistance.clear(int, int);0.75
edu.stanford.nlp.util.EditDistanceTest.testEmpty();edu.stanford.nlp.util.EditDistance.score(java.lang.Object[], int, java.lang.Object[], int);0.75
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testNumberNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedNumberString(java.lang.String, java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.combine(double, double);1.0
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.best();0.9375
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.better(double, double);0.7916666269302368
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.substituteCost(java.lang.Object, java.lang.Object);0.75
edu.stanford.nlp.util.EditDistanceTest.testTranspose();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testTranspose();edu.stanford.nlp.util.EditDistance.score(java.lang.Object[], int, java.lang.Object[], int);0.75
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testMoneyNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedMoneyString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.clear(int, int);1.0
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.deleteCost(java.lang.Object);0.875
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.best();0.8125
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.better(double, double);0.8125
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.score(java.lang.Object[], int, java.lang.Object[], int);0.75
edu.stanford.nlp.util.EditDistanceTest.testInsert();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testInsert();edu.stanford.nlp.util.EditDistance.clear(int, int);0.75
edu.stanford.nlp.util.EditDistanceTest.testInsert();edu.stanford.nlp.util.EditDistance.score(java.lang.Object[], int, java.lang.Object[], int);0.75
edu.stanford.nlp.util.EditDistanceTest.testModify();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testModify();edu.stanford.nlp.util.EditDistance.score(java.lang.Object[], int, java.lang.Object[], int);0.75
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testPercentNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedPercentString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.util.StringUtilsTest.testArgsToProperties();edu.stanford.nlp.util.StringUtils.argsToProperties(java.lang.String[]);1.0
edu.stanford.nlp.util.StringUtilsTest.testArgsToProperties();edu.stanford.nlp.util.StringUtils.argsToProperties(java.lang.String[], java.util.Map<java.lang.String, java.lang.Integer>);1.0
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.create(java.lang.String);1.0
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);0.9285714030265808
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.createFactory(java.lang.Class<?>[]);0.8846153616905212
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.<init>(java.lang.String);0.8333333134651184
edu.stanford.nlp.pipeline.AnnotationTest.testFromList();edu.stanford.nlp.pipeline.Annotation.toString();1.0
edu.stanford.nlp.pipeline.AnnotationTest.testFromList();edu.stanford.nlp.pipeline.Annotation.<init>(java.util.List<edu.stanford.nlp.util.CoreMap>);0.9599999785423279
edu.stanford.nlp.pipeline.AnnotationTest.testFromList();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.7756129503250122
edu.stanford.nlp.ling.SentenceTest.testCoreLabelListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean);0.9999999403953552
edu.stanford.nlp.ling.SentenceTest.testCoreLabelListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean, java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAuxiliaryTreeErrors();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithoutEol();edu.stanford.nlp.io.IOUtils.getLineIterable(java.io.Reader, int, boolean);1.0
edu.stanford.nlp.process.AmericanizeTest.testAmericanize();edu.stanford.nlp.process.Americanize.americanize(java.lang.String);1.0
edu.stanford.nlp.process.AmericanizeTest.testAmericanize();edu.stanford.nlp.process.Americanize.<init>();0.75
edu.stanford.nlp.process.AmericanizeTest.testAmericanize();edu.stanford.nlp.process.Americanize.<init>(int);0.75
edu.stanford.nlp.process.AmericanizeTest.testAmericanize();edu.stanford.nlp.process.Americanize.americanize(java.lang.String, boolean);0.75
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.remove(E);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.incrementCount(E);0.9800840020179749
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.remove(E);0.9451562166213989
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.incrementCount(E);0.9252400994300842
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.AbstractCounter.incrementCount(E);0.91175377368927
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.decrementCount(E, double);0.8057436347007751
edu.stanford.nlp.stats.CounterTestBase.testIncrement();null.remove(E);0.7947354912757874
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.AbstractCounter.decrementCount(E, double);0.7922571897506714
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.clear();0.7769399285316467
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.getCount(java.lang.Object);0.7560280561447144
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.setCount(E, double);0.7560280561447144
edu.stanford.nlp.trees.TreebankLanguagePackTest.testBasicCategory();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.basicCategory(java.lang.String);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.Match.equals(java.lang.Object);0.8764285445213318
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.Match.toString();0.8764285445213318
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findAllMatches(K[]);0.8624999523162842
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(java.lang.Iterable<K>, V);0.7999999523162842
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.getRelation(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.toInterval(E, E);0.9888888597488403
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.getRelationFlags(edu.stanford.nlp.util.Interval<E>);0.8819444179534912
edu.stanford.nlp.util.ArrayUtilsTest.testgetSubListIndex();edu.stanford.nlp.util.ArrayUtils.getSubListIndex(java.lang.Object[], java.lang.Object[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testgetSubListIndex();edu.stanford.nlp.util.ArrayUtils.getSubListIndex(java.lang.Object[], java.lang.Object[], java.util.function.Predicate<edu.stanford.nlp.util.Pair>);0.75
edu.stanford.nlp.pipeline.RelationExtractorAnnotatorTest.testVerbose();edu.stanford.nlp.pipeline.RelationExtractorAnnotator.getVerbose(java.util.Properties);1.0
edu.stanford.nlp.util.IterablesTest.testMerge();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V>, java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.util.IterablesTest.testMerge();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V1>, java.lang.Iterable<V2>, edu.stanford.nlp.util.Iterables.edu.stanford.nlp.util.Iterables$IncrementComparator<V1, V2>);0.75
edu.stanford.nlp.pipeline.RelationExtractorAnnotatorTest.testModelName();edu.stanford.nlp.pipeline.RelationExtractorAnnotator.getModelName(java.util.Properties);1.0
edu.stanford.nlp.util.SetsTest.testCross();edu.stanford.nlp.util.Sets.cross(java.util.Set<E>, java.util.Set<F>);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.size();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.entrySet();0.875
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();0.8333333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.get(K[]);0.8333333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.keySet();0.8333333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.8333333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.putAll(java.util.Map<? extends java.lang.Iterable<K>, ? extends V>);0.8333333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.remove(K[]);0.8333333730697632
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.toFormattedString();0.7941176891326904
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.containsKey(java.lang.Object);0.7727272510528564
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.isLeaf();0.75
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.concurrent.SynchronizedInterner.globalIntern(T);1.0
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.Interner.getGlobal();0.9155682325363159
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.concurrent.SynchronizedInterner.getGlobal();0.8571429252624512
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.edgeIterator();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.9599999785423279
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.EdgeIterator.remove();0.9103606343269348
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8666666746139526
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getAllEdges();0.8181818127632141
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8181818127632141
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.<init>();0.800000011920929
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.graph.DirectedMultiGraph<V, E>);0.800000011920929
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.util.MapFactory<V, java.util.Map<V, java.util.List<E>>>, edu.stanford.nlp.util.MapFactory<V, java.util.List<E>>);0.800000011920929
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.800000011920929
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.equals(java.lang.Object);0.800000011920929
edu.stanford.nlp.util.LazyTest.testCachedGC();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testOfCalledOnlyOnce();edu.stanford.nlp.util.Lazy.of(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testLoadCollection();edu.stanford.nlp.util.CollectionUtils.loadCollection(java.io.File, java.lang.Class<T>, java.util.Collection<T>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testLoadCollection();edu.stanford.nlp.util.CollectionUtils.loadCollection(java.lang.String, java.lang.Class<T>, java.util.Collection<T>);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testNoHanging();edu.stanford.nlp.util.ArrayCoreMap.toString();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testNoHanging();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.8333333730697632
edu.stanford.nlp.util.ArrayCoreMapTest.testNoHanging();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.8333333730697632
edu.stanford.nlp.util.ArrayCoreMapTest.testNoHanging();edu.stanford.nlp.util.ArrayCoreMap.hashCode();0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.toString();0.78125
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoopEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoopEquals();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8333333730697632
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoopEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(edu.stanford.nlp.util.ArrayCoreMap);0.75
edu.stanford.nlp.stats.CountersTest.testSerialization();edu.stanford.nlp.stats.ClassicCounter.equals(java.lang.Object);0.9999999403953552
edu.stanford.nlp.process.PTBTokenizerTest.testUntok();edu.stanford.nlp.process.PTBTokenizer.ptb2Text(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testUntok();edu.stanford.nlp.process.PTB2TextLexer.next();0.8292297124862671
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>, boolean, boolean);1.0
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparatorDescending(edu.stanford.nlp.stats.Counter<E>);0.800000011920929
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.IntCounter.clear();0.7566192746162415
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();edu.stanford.nlp.stats.IntCounter.entrySet();1.0
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();edu.stanford.nlp.stats.ClassicCounter.entrySet();0.9451562166213989
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();null.entrySet();0.7947354912757874
edu.stanford.nlp.util.LazyTest.testOf();edu.stanford.nlp.util.Lazy.of(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testCached();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testFrom();edu.stanford.nlp.util.Lazy.from(E);1.0
edu.stanford.nlp.util.LazyTest.testCachedCalledOnlyOnce();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.<init>();1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getIndex(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.read(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.save(java.lang.String, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getSize();0.9285714626312256
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.isClosed(java.lang.String);0.875
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);0.8333333730697632
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getTag(int);0.8333333730697632
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.markClosed(java.lang.String);0.800000011920929
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.read(java.io.DataInputStream);0.75
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.save(java.io.DataOutputStream, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>);0.75
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetSiblings();edu.stanford.nlp.semgraph.SemanticGraph.getSiblings(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testCommonAncestor();edu.stanford.nlp.semgraph.SemanticGraph.commonAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetCommonAncestor();edu.stanford.nlp.semgraph.SemanticGraph.getCommonAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testIsAncestor();edu.stanford.nlp.semgraph.SemanticGraph.isAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetPathToRoot();edu.stanford.nlp.semgraph.SemanticGraph.getPathToRoot(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetPathToRoot();edu.stanford.nlp.semgraph.SemanticGraph.getPathToRoot(edu.stanford.nlp.ling.IndexedWord, java.util.List<edu.stanford.nlp.ling.IndexedWord>);0.75
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBESIOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);0.9999999403953552
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2IOBES();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2IOBES();edu.stanford.nlp.sequences.IOBUtils.isSameEntityBoundary(java.lang.String, char, java.lang.String, char);0.7620689868927002
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IOB2();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IO();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1NoPrefix();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1NoPrefix();edu.stanford.nlp.sequences.IOBUtils.isSameEntityBoundary(java.lang.String, char, java.lang.String, char);0.8206896781921387
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1NoPrefix();edu.stanford.nlp.sequences.IOBUtils.isDifferentEntityBoundary(java.lang.String, java.lang.String);0.77379310131073
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2BILOU();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2BILOU();edu.stanford.nlp.sequences.IOBUtils.isSameEntityBoundary(java.lang.String, char, java.lang.String, char);0.7833333015441895
edu.stanford.nlp.sequences.IOBUtilsTest.testNoPrefixIO();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2IOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testBILOUIOBES();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);0.9999999403953552
edu.stanford.nlp.util.MetaClassTest.testCastEnum();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastFromString();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastStream();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastRegression();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastMap();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastArray();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastCollection();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastStringArray();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastSimple();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.size();1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.get(java.lang.Object);0.944444477558136
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.clear();0.9000000357627869
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.containsKey(java.lang.Object);0.8636363744735718
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.keySet();0.8333333730697632
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.values();0.8333333730697632
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.isEmpty();0.7857142686843872
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.entrySet();0.75
edu.stanford.nlp.naturalli.UtilTest.extractNERNoNER();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.dcoref.RulesTest.testIsAcronym();edu.stanford.nlp.dcoref.Rules.isAcronym(java.util.List<edu.stanford.nlp.ling.CoreLabel>, java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.deltaDecode(byte[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.deltaEncode(int[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);0.7538461685180664
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.deltaDecode(byte[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToChar();edu.stanford.nlp.util.ConvertByteArray.byteArrToChar(byte[], int);1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.iterator();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();0.9475225806236267
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.hasNext();0.8392857313156128
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.next();0.8125
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.primeNext();0.75
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.iterator();0.9564415812492371
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.hasNext();0.8857685327529907
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.next();0.8574993014335632
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.ling.Word.word();0.8392860293388367
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(byte[], int, long[], int, int);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.edgeIterable();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.getEdges(V, V);0.875
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.incomingEdgeIterable(V);0.7999999523162842
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.outgoingEdgeIterable(V);0.7999999523162842
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.<init>();0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.util.MapFactory<V, java.util.Map<V, java.util.List<E>>>, edu.stanford.nlp.util.MapFactory<V, java.util.List<E>>);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testLoops();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testLoops();edu.stanford.nlp.graph.DirectedMultiGraph.outgoingEdgeIterable(V);0.7749999761581421
edu.stanford.nlp.graph.DirectedMultiGraphTest.testLoops();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.7749999761581421
edu.stanford.nlp.neural.NeuralUtilsTest.testCosine();edu.stanford.nlp.neural.NeuralUtils.cosine(org.ejml.simple.SimpleMatrix, org.ejml.simple.SimpleMatrix);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(boolean[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(boolean[], int, int);0.75
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File, java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File, java.util.regex.Pattern);1.0
edu.stanford.nlp.util.ComparatorsTest.testArrayComparator();edu.stanford.nlp.util.Comparators.getArrayComparator();1.0
edu.stanford.nlp.naturalli.OperatorTest.testValuesOrderedDesc();edu.stanford.nlp.naturalli.Operator.values();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.iterator();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.valueIterator();0.8461538553237915
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.put(K1, K2, V);0.8333333134651184
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.size();0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.<init>(edu.stanford.nlp.util.ArrayCoreMap);0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);0.8333333730697632
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8333333730697632
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.hashCode();0.8125
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.ling.CoreLabel.setWord(java.lang.String);0.7529829740524292
edu.stanford.nlp.process.MorphologyTest.testDash();edu.stanford.nlp.process.Morphology.stem(java.lang.String);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testAddAll();edu.stanford.nlp.util.TwoDimensionalMap.addAll(edu.stanford.nlp.util.TwoDimensionalMap<? extends K1, ? extends K2, ? extends V2>, java.util.function.Function<V2, V>);1.0
edu.stanford.nlp.ling.SentenceTest.testTaggedWordListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean);0.9999999403953552
edu.stanford.nlp.ling.SentenceTest.testTaggedWordListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean, java.lang.String);0.9999999403953552
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[], int, int);0.75
edu.stanford.nlp.util.IterableIteratorTest.testBasic();edu.stanford.nlp.util.IterableIterator.hasNext();1.0
edu.stanford.nlp.util.IterableIteratorTest.testBasic();edu.stanford.nlp.util.IterableIterator.<init>(java.util.Iterator<E>);0.7916666269302368
edu.stanford.nlp.util.CoreMapsTest.testMaps();edu.stanford.nlp.util.CoreMaps.asMap(COLL, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<V>>);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testAddRemove();edu.stanford.nlp.util.CollectionValuedMap.add(K, V);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testAddRemove();edu.stanford.nlp.util.CollectionValuedMap.remove(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>();1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>(edu.stanford.nlp.util.CollectionValuedMap<K, V>);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean, java.util.Map<K, java.util.Collection<V>>);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.get(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.add(K, V);0.8333333730697632
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.entrySet();0.75
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.size();0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDouble();edu.stanford.nlp.util.ConvertByteArray.byteArrToDouble(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLong();edu.stanford.nlp.util.ConvertByteArray.byteArrToLong(byte[], int);1.0
edu.stanford.nlp.naturalli.PolarityTest.equals();edu.stanford.nlp.naturalli.Polarity.equals(java.lang.Object);1.0
edu.stanford.nlp.naturalli.PolarityTest.equalsString();edu.stanford.nlp.naturalli.Polarity.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testMaxIndex();edu.stanford.nlp.util.CollectionUtils.maxIndex(java.util.List<T>);1.0
edu.stanford.nlp.tagger.maxent.ExtractorTest.testGetParenthesizedArg();edu.stanford.nlp.tagger.maxent.Extractor.getParenthesizedArg(java.lang.String, int);1.0
edu.stanford.nlp.tagger.maxent.ExtractorTest.testGetParenthesizedArg();edu.stanford.nlp.tagger.maxent.Extractor.getParenthesizedNum(java.lang.String, int);0.9210526347160339
edu.stanford.nlp.util.StringUtilsTest.testCSV();edu.stanford.nlp.util.StringUtils.splitOnCharWithQuoting(java.lang.String, char, char, char);1.0
edu.stanford.nlp.util.ArrayMapTest.testEntrySet();edu.stanford.nlp.util.ArrayMap.entrySet();1.0
edu.stanford.nlp.util.ArrayMapTest.testEntrySet();edu.stanford.nlp.util.ArrayMap.size();0.75
edu.stanford.nlp.util.ArrayMapTest.testEquals();edu.stanford.nlp.util.ArrayMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.put(K, V);1.0
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.clear();0.800000011920929
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.size();0.75
edu.stanford.nlp.util.ArrayMapTest.testValues();edu.stanford.nlp.util.ArrayMap.entrySet();1.0
edu.stanford.nlp.util.ArrayMapTest.testValues();edu.stanford.nlp.util.ArrayMap.Entry.getValue();0.9785820841789246
edu.stanford.nlp.util.ArrayMapTest.testPutAll();edu.stanford.nlp.util.ArrayMap.put(K, V);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);0.7777777910232544
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);0.7777777910232544
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.io.File);0.8888888955116272
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.7647058963775635
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.75
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.io.File);0.8888888955116272
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.75
edu.stanford.nlp.io.IOUtilsTest.testTail();edu.stanford.nlp.io.IOUtils.tail(java.io.File, int);1.0
edu.stanford.nlp.io.IOUtilsTest.testTail();edu.stanford.nlp.io.IOUtils.tail(java.io.File, int, java.lang.String);0.75
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);0.8888888955116272
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.75
edu.stanford.nlp.io.IOUtilsTest.testCpRecursive();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[], int, boolean[], int, int);1.0
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.IntCounter.defaultReturnValue();1.0
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.ClassicCounter.defaultReturnValue();0.9451562166213989
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.IntCounter.setDefaultReturnValue(double);0.9203357696533203
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.IntCounter.getCount(java.lang.Object);0.8986091017723083
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.ClassicCounter.setDefaultReturnValue(double);0.8654919266700745
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.ClassicCounter.getCount(java.lang.Object);0.8437652587890625
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();null.defaultReturnValue();0.7947354912757874
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.next();1.0
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.<init>(java.io.Reader, java.util.function.Function<java.lang.String, X>);0.944444477558136
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.setNext();0.8809524178504944
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.hasNext();0.7857142686843872
edu.stanford.nlp.time.SUTimeTest.parseDateTimeStandardInstantFormat();edu.stanford.nlp.time.SUTime.parseDateTime(java.lang.String, boolean);1.0
edu.stanford.nlp.time.SUTimeTest.parseDateTimeStandardInstantFormat();edu.stanford.nlp.time.SUTime.parseInstant(java.lang.String, java.util.Optional<java.time.ZoneId>);0.75
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someDeletionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyDeletion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someDeletionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.<init>(int, boolean, boolean, boolean, boolean);0.9772726893424988
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someDeletionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyDeletion(java.lang.String, boolean);0.75
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.conjOrPeculiarities();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.conjOrPeculiarities();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String, boolean);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.conjOrPeculiarities();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String, boolean, java.util.Optional<java.lang.String>);0.75
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someInsertionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someInsertionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String, boolean);0.75
edu.stanford.nlp.ie.ClassifierCombinerTest.testCombination();edu.stanford.nlp.ie.ClassifierCombiner.CombinationMode.<init>();1.0
edu.stanford.nlp.ie.ClassifierCombinerTest.testCombination();edu.stanford.nlp.ie.ClassifierCombiner.mergeTwoDocuments(java.util.List<INN>, java.util.List<INN>, java.util.Set<java.lang.String>, java.lang.String);0.9719921350479126
edu.stanford.nlp.ie.ClassifierCombinerTest.testCombination();edu.stanford.nlp.ling.CoreUtilities.toCoreLabelList(java.lang.String[], java.lang.String[], java.lang.String[]);0.7584031224250793
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.9999999403953552
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.sequences.SeqClassifierFlags.<init>();0.9449953436851501
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8905491828918457
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.ling.CoreLabel.setWord(java.lang.String);0.773682177066803
edu.stanford.nlp.dcoref.RulesTest.testMentionMatchesSpeakerAnnotation();edu.stanford.nlp.dcoref.Rules.antecedentMatchesMentionSpeakerAnnotation(edu.stanford.nlp.dcoref.Mention, edu.stanford.nlp.dcoref.Mention);1.0
edu.stanford.nlp.dcoref.RulesTest.testMentionMatchesSpeakerAnnotation();edu.stanford.nlp.dcoref.Rules.antecedentMatchesMentionSpeakerAnnotation(edu.stanford.nlp.dcoref.Mention, edu.stanford.nlp.dcoref.Mention, edu.stanford.nlp.dcoref.Document);0.8014705777168274
edu.stanford.nlp.util.ArrayCoreMapTest.testToShortString();edu.stanford.nlp.util.ArrayCoreMap.toShortString(char, java.lang.String[]);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testToShortString();edu.stanford.nlp.util.ArrayCoreMap.toShortString(java.lang.String[]);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testToShortString();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8333333730697632
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteCharToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeCharToByteArr(byte[], int, char);1.0
edu.stanford.nlp.util.CoreMapTest.testCoreMap();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.CoreMapTest.testCoreMap();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8333333730697632
edu.stanford.nlp.util.CoreMapTest.testCoreMap();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8333333730697632
edu.stanford.nlp.util.CoreMapTest.testCoreMap();edu.stanford.nlp.util.ArrayCoreMap.containsKey(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.7727272510528564
edu.stanford.nlp.util.ArrayCoreMapTest.testKeySet();edu.stanford.nlp.util.ArrayCoreMap.keySet();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testKeySet();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testPreservesString();edu.stanford.nlp.tagger.maxent.TTags.getTag(int);1.0
edu.stanford.nlp.util.IterableIteratorTest.testSpliteratorInSequence();edu.stanford.nlp.util.IterableIterator.spliterator();1.0
edu.stanford.nlp.util.IterableIteratorTest.testSpliteratorInParallel();edu.stanford.nlp.util.IterableIterator.spliterator();1.0
edu.stanford.nlp.stats.CounterTestBase.testClear();edu.stanford.nlp.stats.IntCounter.clear();1.0
edu.stanford.nlp.stats.CounterTestBase.testClear();edu.stanford.nlp.stats.ClassicCounter.clear();0.9451562166213989
edu.stanford.nlp.stats.CounterTestBase.testClear();null.clear();0.7947354912757874
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.ClassicCounter.logIncrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.AbstractCounter.logIncrementCount(E, double);0.9857309460639954
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.IntCounter.clear();0.8023558259010315
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.IntCounter.totalCount();0.8023558259010315
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.IntCounter.setCount(E, double);0.781459629535675
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.IntCounter.incrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.ClassicCounter.incrementCount(E, double);0.9451562166213989
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.AbstractCounter.incrementCount(E, double);0.9316697716712952
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.IntCounter.clear();0.7893322110176086
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.IntCounter.getCount(java.lang.Object);0.7676457762718201
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.IntCounter.setCount(E, double);0.7676457762718201
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.IntCounter.setCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.ClassicCounter.setCount(E, double);0.9451562166213989
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.IntCounter.getCount(java.lang.Object);0.9302937388420105
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.ClassicCounter.getCount(java.lang.Object);0.8754499554634094
edu.stanford.nlp.stats.CounterTestBase.testSetCount();null.setCount(E, double);0.7947354912757874
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.IntCounter.totalCount();0.7769399285316467
edu.stanford.nlp.naturalli.PolarityTest.multiplicativeTruth();edu.stanford.nlp.naturalli.Polarity.negatesTruth(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.multiplicativeTruth();edu.stanford.nlp.naturalli.Polarity.maintainsTruth(edu.stanford.nlp.naturalli.NaturalLogicRelation);0.9821428656578064
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testError();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testError();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.primeNext();0.769550621509552
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcaatRemove();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcaatRemove();null.remove();0.922130286693573
edu.stanford.nlp.util.ComparatorsTest.testNullSafeComparator();edu.stanford.nlp.util.Comparators.nullSafeCompare(T, T);1.0
edu.stanford.nlp.util.ComparatorsTest.testNullSafeComparator();edu.stanford.nlp.util.Comparators.nullSafeNaturalComparator();0.8857142925262451
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectShift();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectShiftTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLogInplace();edu.stanford.nlp.math.ArrayMath.expInPlace(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLogInplace();edu.stanford.nlp.math.ArrayMath.logInPlace(double[]);1.0
edu.stanford.nlp.util.IterablesTest.testSample();edu.stanford.nlp.util.Iterables.sample(java.lang.Iterable<T>, int, int, java.util.Random);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[], int, int);0.75
edu.stanford.nlp.io.IOUtilsTest.testReadWriteStreamFromString();edu.stanford.nlp.io.IOUtils.readStreamFromString(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadWriteStreamFromString();edu.stanford.nlp.io.IOUtils.writeStreamFromString(java.lang.String);0.9497354626655579
edu.stanford.nlp.util.StringUtilsTest.testEditDistance();edu.stanford.nlp.util.StringUtils.editDistance(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.getNext();0.75
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.8500000238418579
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.8500000238418579
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.8500000238418579
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8500000238418579
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.getNext();0.75
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.9285714626312256
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.9285714626312256
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.7916666269302368
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.getNext();0.75
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.9375
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.9375
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.9375
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9375
edu.stanford.nlp.international.spanish.SpanishUnknownWordSignaturesTest.testHasConditionalSuffix();edu.stanford.nlp.international.spanish.SpanishUnknownWordSignatures.hasConditionalSuffix(java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testDotProduct();edu.stanford.nlp.stats.Counters.dotProduct(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testDotProduct();edu.stanford.nlp.stats.Counters.optimizedDotProduct(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);0.7631579041481018
edu.stanford.nlp.process.TransformXMLTest.testTransformXML1();edu.stanford.nlp.process.TransformXML.transformXML(java.lang.String[], java.util.function.Function<java.lang.String, T>, java.io.InputStream, java.io.Writer);1.0
edu.stanford.nlp.process.TransformXMLTest.testTransformXML1();edu.stanford.nlp.process.TransformXML.transformXML(java.lang.String[], java.util.function.Function<java.lang.String, T>, java.io.InputStream, java.io.Writer, edu.stanford.nlp.process.TransformXML.edu.stanford.nlp.process.TransformXML$SAXInterface<T>);0.75
edu.stanford.nlp.util.IterablesTest.testFilter();edu.stanford.nlp.util.Iterables.filter(java.lang.Iterable<T>, java.util.function.Predicate<T>);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.setMatchType(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.<init>(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);0.7857142686843872
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.findTargetStringOffsets(java.lang.String, java.lang.String);0.760869562625885
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.setMatchType(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.<init>(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);0.9090909957885742
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.findTargetStringOffsets(java.lang.String, java.lang.String);0.8300395607948303
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.util.StringUtils.join(java.lang.Iterable<X>, java.lang.String);0.7703049778938293
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.join();1.0
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.<init>(int, edu.stanford.nlp.util.concurrent.ThreadsafeProcessor<I, O>, boolean);0.8333333730697632
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.buildThreadPool(int);0.8333333730697632
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.put(I);0.8333333730697632
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.join(boolean);0.75
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.peek();0.75
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.poll();0.75
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.join();1.0
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.<init>(int, edu.stanford.nlp.util.concurrent.ThreadsafeProcessor<I, O>);0.8571429252624512
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.<init>(int, edu.stanford.nlp.util.concurrent.ThreadsafeProcessor<I, O>, boolean);0.8571429252624512
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.CallableJob.call();0.8302412629127502
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.join(boolean);0.785714328289032
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.put(I);0.7619048357009888
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefWithParse();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefWithParse();edu.stanford.nlp.pipeline.StanfordCoreNLP.getNamedAnnotators();0.7916666269302368
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCoref();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCoref();edu.stanford.nlp.pipeline.StanfordCoreNLP.getNamedAnnotators();0.7916666269302368
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsOrderPreserving();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsOrderPreserving();edu.stanford.nlp.pipeline.StanfordCoreNLP.getNamedAnnotators();0.7916666269302368
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsRegexNERAfterNER();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsRegexNERAfterNER();edu.stanford.nlp.pipeline.StanfordCoreNLP.getNamedAnnotators();0.7916666269302368
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsBasic();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsBasic();edu.stanford.nlp.pipeline.StanfordCoreNLP.getNamedAnnotators();0.7916666269302368
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefBeforeOpenIE();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefBeforeOpenIE();edu.stanford.nlp.pipeline.StanfordCoreNLP.getNamedAnnotators();0.7916666269302368
edu.stanford.nlp.util.StringUtilsTest.testStringIsNullOrEmpty();edu.stanford.nlp.util.StringUtils.isNullOrEmpty(java.lang.String);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.7777777910232544
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.graph.DirectedMultiGraph<V, E>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.util.MapFactory<V, java.util.Map<V, java.util.List<E>>>, edu.stanford.nlp.util.MapFactory<V, java.util.List<E>>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.8793103694915771
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8390805125236511
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.8068965673446655
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.7805643081665039
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.containsVertex(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.<init>();0.7916666269302368
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.util.MapFactory<V, java.util.Map<V, java.util.List<E>>>, edu.stanford.nlp.util.MapFactory<V, java.util.List<E>>);0.7916666269302368
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.7916666269302368
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testGetAllVertices();edu.stanford.nlp.graph.DirectedMultiGraph.getAllVertices();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testGetAllVertices();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8333333134651184
edu.stanford.nlp.graph.DirectedMultiGraphTest.testGetAllVertices();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8888888359069824
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIsNeighbor();edu.stanford.nlp.graph.DirectedMultiGraph.isNeighbor(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIsNeighbor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>();0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIsNeighbor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.util.MapFactory<V, java.util.Map<V, java.util.List<E>>>, edu.stanford.nlp.util.MapFactory<V, java.util.List<E>>);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testNeighbors();edu.stanford.nlp.graph.DirectedMultiGraph.getNeighbors(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.7999999523162842
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.7777777910232544
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.7999999523162842
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.7777777910232544
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);0.7727272510528564
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.7999999523162842
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.7777777910232544
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);0.7727272510528564
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.75
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAdd();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);1.0
edu.stanford.nlp.math.ArrayMathTest.testInnerProduct();edu.stanford.nlp.math.ArrayMath.innerProduct(double[], double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(char[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(char[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(char[], int, int);1.0
edu.stanford.nlp.international.spanish.SpanishUnknownWordSignaturesTest.testHasImperfectErIrSuffix();edu.stanford.nlp.international.spanish.SpanishUnknownWordSignatures.hasImperfectErIrSuffix(java.lang.String);1.0
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.objectsList();1.0
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.<init>();0.9583333730697632
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.<init>(edu.stanford.nlp.util.Index<? extends E>);0.9583333730697632
edu.stanford.nlp.math.ArrayMathTest.testExpLog();edu.stanford.nlp.math.ArrayMath.exp(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLog();edu.stanford.nlp.math.ArrayMath.log(double[]);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testSequenceSampler();edu.stanford.nlp.sequences.SequenceSampler.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.math.ArrayMathTest.testNormalize();edu.stanford.nlp.math.ArrayMath.normalize(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmin();edu.stanford.nlp.math.ArrayMath.argmin(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmin();edu.stanford.nlp.math.ArrayMath.min(double[]);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicIterator();edu.stanford.nlp.util.TwoDimensionalMap.iterator();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicIterator();edu.stanford.nlp.util.TwoDimensionalMap.size();0.875
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicIterator();edu.stanford.nlp.util.TwoDimensionalMap.<init>();0.75
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicIterator();edu.stanford.nlp.util.TwoDimensionalMap.<init>(edu.stanford.nlp.util.MapFactory<K1, java.util.Map<K2, V>>, edu.stanford.nlp.util.MapFactory<K2, V>);0.75
edu.stanford.nlp.util.TwoDimensionalMapTest.testMapFactory();edu.stanford.nlp.util.TwoDimensionalMap.put(K1, K2, V);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testIterator();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.iterator();1.0
edu.stanford.nlp.math.ArrayMathTest.testPairwiseSubtract();edu.stanford.nlp.math.ArrayMath.pairwiseSubtract(double[], double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[], int, int[], int, int);1.0
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testIsPunc();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.isPunc(java.lang.String);1.0
edu.stanford.nlp.util.FunctionsTest.testCompose();edu.stanford.nlp.util.Functions.compose(java.util.function.Function<T1, T2>, java.util.function.Function<? super T2, T3>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(int[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(int[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(int[], int, int);1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testIsAfter();edu.stanford.nlp.ie.pascal.ISODateInstance.isAfter(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testTr();edu.stanford.nlp.util.StringUtils.tr(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.time.SUTimeTest.testResolveDowToDay();edu.stanford.nlp.time.JodaTimeUtils.resolveDowToDay(org.joda.time.Partial);0.9999999403953552
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.fixedIndex();edu.stanford.nlp.naturalli.NaturalLogicRelation.byFixedIndex(int);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.spotTestJoinTable();edu.stanford.nlp.naturalli.NaturalLogicRelation.join(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.spotTestJoinTable();edu.stanford.nlp.naturalli.NaturalLogicRelation.values();0.75
edu.stanford.nlp.util.ArrayUtilsTest.testAsSet();edu.stanford.nlp.util.ArrayUtils.asSet(T[]);1.0
edu.stanford.nlp.util.CoreMapTest.testEquality();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CoreMapTest.testEquality();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9000000357627869
edu.stanford.nlp.util.CoreMapTest.testEquality();edu.stanford.nlp.util.ArrayCoreMap.equals(edu.stanford.nlp.util.ArrayCoreMap);0.75
edu.stanford.nlp.util.XMLUtilsTest.testStripTags();edu.stanford.nlp.util.XMLUtils.stripTags(java.io.Reader, java.util.List<java.lang.Integer>, boolean);1.0
edu.stanford.nlp.math.SloppyMathTest.testArccos();edu.stanford.nlp.math.SloppyMath.acos(double);1.0
edu.stanford.nlp.util.StringUtilsTest.testExpandEnvironmentVariables();edu.stanford.nlp.util.StringUtils.expandEnvironmentVariables(java.lang.String, java.util.Map<java.lang.String, java.lang.String>);1.0
edu.stanford.nlp.util.ReflectionLoadingTest.testNoArgs();edu.stanford.nlp.util.ReflectionLoading.loadByReflection(java.lang.String, java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testInheritance();edu.stanford.nlp.util.MetaClass.create(java.lang.String);1.0
edu.stanford.nlp.util.MetaClassTest.testInheritance();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testInheritance();edu.stanford.nlp.util.MetaClass.<init>(java.lang.String);0.8333333134651184
edu.stanford.nlp.util.ReflectionLoadingTest.testOneArg();edu.stanford.nlp.util.ReflectionLoading.loadByReflection(java.lang.String, java.lang.Object[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIsSubList();edu.stanford.nlp.util.CollectionUtils.isSubList(java.util.List<T>, java.util.List<? super T>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteShortToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeShortToByteArr(byte[], int, short);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.9583332538604736
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.7619047164916992
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testRemove();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.CoreMapTest.testToShorterString();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.util.CoreMapTest.testToShorterString();edu.stanford.nlp.util.ArrayCoreMap.toShorterString(java.lang.String[]);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.size();0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testSimpleEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testSimpleEquals();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8333333730697632
edu.stanford.nlp.util.ArrayCoreMapTest.testSimpleEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(edu.stanford.nlp.util.ArrayCoreMap);0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ArrayCoreMap.size();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.8505746722221375
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.8505746722221375
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.766489565372467
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.size();0.875
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.75
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.equals(edu.stanford.nlp.util.ArrayCoreMap);0.75
edu.stanford.nlp.util.DeltaIndexTest.testSize();edu.stanford.nlp.util.DeltaIndex.size();1.0
edu.stanford.nlp.util.DeltaIndexTest.testSize();edu.stanford.nlp.util.HashIndex.size();0.763020396232605
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteAStringToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeAStringToByteArr(byte[], int, java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteAStringToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeAStringToByteArr(byte[], int, java.lang.String);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUString2();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[], int, int);0.75
edu.stanford.nlp.util.DeltaIndexTest.testIndex();edu.stanford.nlp.util.DeltaIndex.indexOf(E);1.0
edu.stanford.nlp.util.HashIndexTest.testIndexOf();edu.stanford.nlp.util.HashIndex.indexOf(E);1.0
edu.stanford.nlp.util.HashIndexTest.testIndexOf();edu.stanford.nlp.util.HashIndex.size();0.75
edu.stanford.nlp.tagger.maxent.TTagsTest.testPreservesIndex();edu.stanford.nlp.tagger.maxent.TTags.getIndex(java.lang.String);1.0
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSubsumesArray();edu.stanford.nlp.patterns.surface.SurfacePattern.subsumesArray(java.lang.Object[], java.lang.Object[]);1.0
edu.stanford.nlp.util.ComparatorsTest.testListComparator();edu.stanford.nlp.util.Comparators.getListComparator();1.0
edu.stanford.nlp.util.ComparatorsTest.testListComparator();edu.stanford.nlp.util.Comparators.compareLists(java.util.List<? extends X>, java.util.List<? extends X>);0.8541666269302368
edu.stanford.nlp.machinereading.structure.SpanTest.testUnion();edu.stanford.nlp.ie.machinereading.structure.Span.union(edu.stanford.nlp.ie.machinereading.structure.Span, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testSanitizeJSONString();edu.stanford.nlp.util.StringUtils.escapeJsonString(java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testEscapeJsonString();edu.stanford.nlp.util.StringUtils.escapeJsonString(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectBinaryTransition();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectBinaryTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testClosed();edu.stanford.nlp.tagger.maxent.TTags.isClosed(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testClosed();edu.stanford.nlp.tagger.maxent.TTags.markClosed(java.lang.String);0.9000000357627869
edu.stanford.nlp.tagger.maxent.TTagsTest.testCanCount();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testParseDouble();edu.stanford.nlp.math.SloppyMath.parseDouble(boolean, long, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testParseDouble();edu.stanford.nlp.math.SloppyMath.segmentDouble(double);0.807692289352417
edu.stanford.nlp.math.ArrayMathTest.testNorm_inf();edu.stanford.nlp.math.ArrayMath.norm_inf(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmax();edu.stanford.nlp.math.ArrayMath.argmax(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmax();edu.stanford.nlp.math.ArrayMath.max(double[]);1.0
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.next();1.0
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, T>);0.8333333730697632
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.hasNext();0.7857142686843872
edu.stanford.nlp.util.DeltaIndexTest.testGet();edu.stanford.nlp.util.DeltaIndex.get(int);1.0
edu.stanford.nlp.util.HashIndexTest.testGet();edu.stanford.nlp.util.HashIndex.get(int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testToList();edu.stanford.nlp.util.CollectionUtils.toList(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testToSet();edu.stanford.nlp.util.CollectionUtils.toSet(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testObjects();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.objects(int[]);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testConnectedComponents();edu.stanford.nlp.graph.DirectedMultiGraph.getConnectedComponents();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getEdges(V, V);0.96875
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getNeighbors(V);0.8125
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getParents(V);0.7999999523162842
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(byte[], int, short[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(byte[], int, float[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.safeMean(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.sum(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.mean(double[]);0.75
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.sum(double[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(float[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(float[], int, int);0.75
edu.stanford.nlp.math.ArrayMathTest.testHasNaN();edu.stanford.nlp.math.ArrayMath.hasNaN(double[]);1.0
edu.stanford.nlp.naturalli.PolarityTest.antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.additive_antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.noneProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.multiplicative_antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.additiveProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.upwardDownward();edu.stanford.nlp.naturalli.Polarity.isDownwards();1.0
edu.stanford.nlp.naturalli.PolarityTest.upwardDownward();edu.stanford.nlp.naturalli.Polarity.isUpwards();0.9583333730697632
edu.stanford.nlp.math.ArrayMathTest.testFliterInfinite();edu.stanford.nlp.math.ArrayMath.filterInfinite(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);0.8727810978889465
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.filterNaNAndInfinite(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);0.8643724918365479
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);0.7631579041481018
edu.stanford.nlp.util.StringUtilsTest.testGetBaseName();edu.stanford.nlp.util.StringUtils.getBaseName(java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testGetBaseName();edu.stanford.nlp.util.StringUtils.getBaseName(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testGetBaseName();edu.stanford.nlp.util.StringUtils.getBaseName(java.lang.String, java.lang.String, java.lang.String);0.75
edu.stanford.nlp.util.MapsTest.testAddAllWithFunction();edu.stanford.nlp.util.Maps.addAll(java.util.Map<K, V1>, java.util.Map<K, V2>, java.util.function.Function<V2, V1>);1.0
edu.stanford.nlp.util.BeamTest.testSize();edu.stanford.nlp.util.Beam.size();1.0
edu.stanford.nlp.util.IterablesTest.testZip();edu.stanford.nlp.util.Iterables.zip(T1[], T2[]);1.0
edu.stanford.nlp.util.IterablesTest.testZip();edu.stanford.nlp.util.Iterables.zip(java.util.Iterator<T1>, java.util.Iterator<T2>);1.0
edu.stanford.nlp.util.IterablesTest.testZip();edu.stanford.nlp.util.Iterables.zip(java.lang.Iterable<T1>, java.lang.Iterable<T2>);0.75
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmptyIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.stats.CountersTest.testMin();edu.stanford.nlp.stats.Counters.min(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatMultiIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatSingleIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr4();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteIntToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeIntToByteArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteFloatToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeFloatToByteArr(byte[], int, float);1.0
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.pop();1.0
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.peek();0.875
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.push(T);0.875
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.<init>();0.75
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.<init>(edu.stanford.nlp.util.TreeShapedStack<T>, T, int);0.75
edu.stanford.nlp.util.TreeShapedStackTest.testEquals();edu.stanford.nlp.util.TreeShapedStack.equals(java.lang.Object);1.0
edu.stanford.nlp.util.TreeShapedStackTest.testEquals();edu.stanford.nlp.util.TreeShapedStack.push(T);0.75
edu.stanford.nlp.util.ArrayMapTest.testClear();edu.stanford.nlp.util.ArrayMap.clear();1.0
edu.stanford.nlp.process.LexerUtilsTest.testIndexOfRegex();edu.stanford.nlp.process.LexerUtils.indexOfRegex(java.util.regex.Pattern, java.lang.String);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testBasic();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testFilterStopWords();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testStripCorp();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testToArray();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.contains(java.lang.Object);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testIndexOf();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.indexOf(E);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testIndexOf();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.size();0.75
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testTotalCount();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAString1();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[]);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testForm();edu.stanford.nlp.graph.DirectedMultiGraph.toString();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.removeZeroDegreeNodes();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8579545021057129
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.7734375
edu.stanford.nlp.util.SetsTest.testIntersection();edu.stanford.nlp.util.Sets.intersection(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testPowerset();edu.stanford.nlp.util.Sets.powerSet(java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testDiff();edu.stanford.nlp.util.Sets.diff(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testUnion();edu.stanford.nlp.util.Sets.union(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaN();edu.stanford.nlp.math.ArrayMath.filterNaN(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaN();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);0.78125
edu.stanford.nlp.optimization.GoldenSectionLineSearchTest.testEasy();edu.stanford.nlp.optimization.GoldenSectionLineSearch.minimize(java.util.function.DoubleUnaryOperator);1.0
edu.stanford.nlp.optimization.GoldenSectionLineSearchTest.testEasy();edu.stanford.nlp.optimization.GoldenSectionLineSearch.goldenMean(double, double);0.9411765336990356
edu.stanford.nlp.optimization.GoldenSectionLineSearchTest.testEasy();edu.stanford.nlp.util.Generics.newHashMap();0.8825029134750366
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(float[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[], int, int);0.75
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testGet();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.get(int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(short[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(short[], int, int);0.75
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(double, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(float, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(int, int);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testRemoveAt();edu.stanford.nlp.util.ArrayUtils.removeAt(java.lang.Object[], int);1.0
edu.stanford.nlp.util.StringUtilsTest.testDecodeArray();edu.stanford.nlp.util.StringUtils.decodeArray(java.lang.String);1.0
edu.stanford.nlp.math.ArrayMathTest.test2dAdd();edu.stanford.nlp.math.ArrayMath.addInPlace(double[][], double[][]);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testTimeNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedTimeString(java.lang.String, edu.stanford.nlp.time.Timex);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testTimeNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedTimeString(java.lang.String, java.lang.String, edu.stanford.nlp.time.Timex);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[], int, char[], int, int);1.0
edu.stanford.nlp.util.StringUtilsTest.testRegexGroups();edu.stanford.nlp.util.StringUtils.regexGroups(java.util.regex.Pattern, java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteUStringToByteArr2();edu.stanford.nlp.util.ConvertByteArray.writeUStringToByteArr(byte[], int, java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[], int, int);0.75
edu.stanford.nlp.math.ArrayMathTest.testPow();edu.stanford.nlp.math.ArrayMath.pow(double[], double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShort();edu.stanford.nlp.util.ConvertByteArray.byteArrToShort(byte[], int);1.0
edu.stanford.nlp.math.ArrayMathTest.testAddInPlace();edu.stanford.nlp.math.ArrayMath.addInPlace(double[], double);1.0
edu.stanford.nlp.util.XMLUtilsTest.testXMLTag();edu.stanford.nlp.util.XMLUtils.findSpace(java.lang.String, int);1.0
edu.stanford.nlp.util.XMLUtilsTest.testXMLTag();edu.stanford.nlp.util.XMLUtils.XMLTag.<init>(java.lang.String);0.8325554728507996
edu.stanford.nlp.util.XMLUtilsTest.testXMLTag();edu.stanford.nlp.util.Generics.newHashMap();0.7678600549697876
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(java.lang.String[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(java.lang.String[], int, int);0.75
edu.stanford.nlp.tagger.maxent.ExtractorFramesRareTest.testAllNumeric();edu.stanford.nlp.tagger.maxent.RareExtractor.allNumeric(java.lang.String);1.0
edu.stanford.nlp.math.ArrayMathTest.testJensenShannon();edu.stanford.nlp.math.ArrayMath.jensenShannonDivergence(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSumAndMean();edu.stanford.nlp.math.ArrayMath.mean(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSumAndMean();edu.stanford.nlp.math.ArrayMath.sum(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSumAndMean();edu.stanford.nlp.math.ArrayMath.sum(double[], int, int);0.75
edu.stanford.nlp.math.ArrayMathTest.testKLDivergence();edu.stanford.nlp.math.ArrayMath.klDivergence(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSum();edu.stanford.nlp.math.ArrayMath.sum(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSum();edu.stanford.nlp.math.ArrayMath.sum(double[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(java.lang.String[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(java.lang.String[], int, int);0.75
edu.stanford.nlp.math.ArrayMathTest.testCountNaN();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloat();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloat(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[], int, long[], int, int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testContainsAny();edu.stanford.nlp.util.CollectionUtils.containsAny(java.util.Collection<T>, java.util.Collection<T>);1.0
edu.stanford.nlp.neural.NeuralUtilsTest.testIsZero();edu.stanford.nlp.neural.NeuralUtils.isZero(org.ejml.simple.SimpleMatrix);1.0
edu.stanford.nlp.stats.CountersTest.testArgmin();edu.stanford.nlp.stats.Counters.argmin(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.util.HashIndexTest.testIterator();edu.stanford.nlp.util.HashIndex.iterator();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(double[], int, int);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(double[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(short[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testRound1();edu.stanford.nlp.math.SloppyMath.round(double);1.0
edu.stanford.nlp.math.SloppyMathTest.testRound2();edu.stanford.nlp.math.SloppyMath.round(double, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testRound2();edu.stanford.nlp.math.SloppyMath.round(double);0.75
edu.stanford.nlp.util.ConvertByteArrayTest.testStringAToByteArr1();edu.stanford.nlp.util.ConvertByteArray.stringUToByteArr(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteDoubleToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeDoubleToByteArr(byte[], int, double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(long[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(long[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(long[], int, int);0.75
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmpty();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testLogSum();edu.stanford.nlp.math.ArrayMath.logSum(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testLogSum();edu.stanford.nlp.math.ArrayMath.logSum(double[], int, int);0.75
edu.stanford.nlp.util.HashIndexTest.testToArray();edu.stanford.nlp.util.HashIndex.objectsList();1.0
edu.stanford.nlp.util.ArrayUtilsTest.testEqualContentsInt();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteLongToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeLongToByteArr(byte[], int, long);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[]);1.0
edu.stanford.nlp.math.SloppyMathTest.testIsDangerous();edu.stanford.nlp.math.SloppyMath.isDangerous(double);1.0
edu.stanford.nlp.math.SloppyMathTest.testIsVeryDangerous();edu.stanford.nlp.math.SloppyMath.isDangerous(double);1.0
edu.stanford.nlp.math.ArrayMathTest.testMultiplyInPlace();edu.stanford.nlp.math.ArrayMath.multiplyInPlace(double[], double);1.0
edu.stanford.nlp.math.SloppyMathTest.testPythonMod();edu.stanford.nlp.math.SloppyMath.pythonMod(int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testPowInPlace();edu.stanford.nlp.math.ArrayMath.powInPlace(double[], double);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testGetIndex();edu.stanford.nlp.util.CollectionUtils.getIndex(java.util.List<T>, T, int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testGetNGrams();edu.stanford.nlp.util.CollectionUtils.getNGrams(java.util.List<T>, int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testMin();edu.stanford.nlp.math.SloppyMath.min(int, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[], int, int);0.75
edu.stanford.nlp.util.HashIndexTest.testSize();edu.stanford.nlp.util.HashIndex.size();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(byte[], int, boolean[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAString2();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testMax();edu.stanford.nlp.math.SloppyMath.max(int, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteUStringToByteArr1();edu.stanford.nlp.util.ConvertByteArray.writeUStringToByteArr(byte[], int, java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(byte[], int, double[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[], int, float[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testParseInt();edu.stanford.nlp.math.SloppyMath.parseInt(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[], int, double[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testCountInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[], int, int);1.0
edu.stanford.nlp.util.StringUtilsTest.testSplitOnChar();edu.stanford.nlp.util.StringUtils.splitOnChar(java.lang.String, char);1.0
edu.stanford.nlp.util.StringUtilsTest.testGetCharacterNgrams();edu.stanford.nlp.util.StringUtils.getCharacterNgrams(java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBoolean();edu.stanford.nlp.util.ConvertByteArray.byteArrToBoolean(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testStringAToByteArr2();edu.stanford.nlp.util.ConvertByteArray.stringAToByteArr(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayTrivial();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testRealSentenceDoubleEscaped();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayEscape();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testRealSentence();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayQuote();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testSorted();edu.stanford.nlp.util.CollectionUtils.sorted(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(boolean[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUString1();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testPairwiseAdd();edu.stanford.nlp.math.ArrayMath.pairwiseAdd(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testNumRows();edu.stanford.nlp.math.ArrayMath.numRows(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testAdd();edu.stanford.nlp.math.ArrayMath.add(double[], double);1.0
edu.stanford.nlp.math.ArrayMathTest.testMultiply();edu.stanford.nlp.math.ArrayMath.multiply(double[], double);1.0
edu.stanford.nlp.math.SloppyMathTest.testLogAdd();edu.stanford.nlp.math.SloppyMath.logAdd(double, double);1.0
edu.stanford.nlp.util.StringUtilsTest.testValueSplit();edu.stanford.nlp.util.StringUtils.valueSplit(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testHoldsLotsOfStuff();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testUniqueness();edu.stanford.nlp.util.HashIndex.addToIndex(E);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testUniqueness();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);0.8021708130836487
edu.stanford.nlp.tagger.maxent.TTagsTest.testSameness();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testUnescape();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTree.unescape(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(byte[], int, int[], int, int);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testSize();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.size();1.0
edu.stanford.nlp.util.StringUtilsTest.testNormalize();edu.stanford.nlp.util.StringUtils.normalize(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[], int, short[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteBooleanToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeBooleanToByteArr(byte[], int, boolean);1.0
edu.stanford.nlp.math.ArrayMathTest.testHasInfinite();edu.stanford.nlp.math.ArrayMath.hasInfinite(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToInt();edu.stanford.nlp.util.ConvertByteArray.byteArrToInt(byte[], int);1.0
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testHasPunc();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.hasPunc(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.entailmentState();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testNamePattern();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.runNamePatternFalse(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testNamePattern();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.runNamePatternTrue(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testNodePattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testVariablePattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testRegexPattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.util.DeltaMapTest.testOriginalPreserved();edu.stanford.nlp.util.DeltaMap.get(java.lang.Object);1.0
