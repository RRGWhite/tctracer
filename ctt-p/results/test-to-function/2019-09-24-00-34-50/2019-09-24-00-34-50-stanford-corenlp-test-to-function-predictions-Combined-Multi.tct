test-class;tested-class;score
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);1.0
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8832216262817383
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCollapsed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8517221212387085
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCCprocessed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8358533978462219
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8063936829566956
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9969353079795837
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8406693339347839
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8388123512268066
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8351741433143616
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8132307529449463
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8126083016395569
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8014849424362183
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8004524111747742
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9969542026519775
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCCprocessed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9822819232940674
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.9691035747528076
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.9675140976905823
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9035030603408813
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8818579912185669
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.8807276487350464
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8726218342781067
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8559889793395996
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8533144593238831
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8354156613349915
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8284429311752319
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.<init>();1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.QPtransform(edu.stanford.nlp.trees.Tree);0.9945321083068848
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.<init>(boolean);0.885699450969696
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8264344930648804
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.9390684366226196
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8660987615585327
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.Tree.iterator();0.8227850794792175
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexMatcher.resetChildIter(edu.stanford.nlp.trees.Tree);0.8114581108093262
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testLink();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testLink();edu.stanford.nlp.trees.Tree.toString();0.9915112853050232
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCCprocessed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);1.0
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCollapsed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9816317558288574
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependencies(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9579765796661377
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8435313701629639
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8202176094055176
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8030408620834351
edu.stanford.nlp.trees.tregex.TregexTest.testHeadOfPhrase();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9967081546783447
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.allTypedDependencies();0.9435635209083557
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.928849995136261
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8698903322219849
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8559083938598633
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8313879370689392
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8303169012069702
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.829109251499176
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8261699080467224
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8132517337799072
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8121987581253052
edu.stanford.nlp.trees.tregex.TregexTest.testComplex();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.CoordinationTransformerTest.testMoveRB();edu.stanford.nlp.trees.CoordinationTransformer.moveRB(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9968254566192627
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.9134340286254883
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.allTypedDependencies();0.9031946063041687
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.86918705701828
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8416329026222229
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8325203061103821
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.8321462273597717
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8308494091033936
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8275589942932129
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8204525113105774
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8178723454475403
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9969828724861145
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8988632559776306
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8504694104194641
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.839239239692688
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8349928855895996
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8229416012763977
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8173429369926453
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.81000155210495
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.8086912631988525
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8044977784156799
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8029261231422424
edu.stanford.nlp.trees.tregex.TregexTest.testComplex2();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.Tree.iterator();0.805416464805603
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertWithNamedNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8022741675376892
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalRelations.values();0.8431942462921143
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalRelations.valuesLock();0.8414428234100342
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();0.8337797522544861
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseSemanticHeadFinder.ruleChanges();0.8208732604980469
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationWords();0.8122351169586182
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8067488670349121
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8026842474937439
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceWithRepeats();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);1.0
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalRelations.values();0.8608994483947754
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalRelations.valuesLock();0.8591480255126953
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseSemanticHeadFinder.ruleChanges();0.8521103262901306
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();0.8168443441390991
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8067488670349121
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoneyOrMore();edu.stanford.nlp.trees.QPTreeTransformer.QPtransform(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoneyOrMore();edu.stanford.nlp.trees.QPTreeTransformer.<init>();0.8960378170013428
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.9364959001541138
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.9364959001541138
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.934310793876648
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9341637492179871
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.853236973285675
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8530417680740356
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8497195243835449
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8430018424987793
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8062463998794556
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testIthChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testFirstLastChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testFirstLastChild();edu.stanford.nlp.trees.Tree.toString();0.804839551448822
edu.stanford.nlp.trees.tregex.TregexTest.testJo�oSilva();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testJo�oSilva();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9387694001197815
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9969523549079895
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8926878571510315
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.getExtraDeps(java.util.List<edu.stanford.nlp.trees.TypedDependency>, java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.873830258846283
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8530687093734741
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.correctDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8464925289154053
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependencies(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8455812931060791
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8318281173706055
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8317773938179016
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.8283310532569885
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.8070650696754456
edu.stanford.nlp.trees.tregex.TregexTest.testSegmentedAndEqualsExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testSegmentedAndEqualsExpressions();edu.stanford.nlp.trees.Tree.toString();0.8137074112892151
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.QPTreeTransformer.<init>();1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.QPTreeTransformer.<init>(boolean);0.8904469013214111
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testLemma();edu.stanford.nlp.ling.IndexedWord.setLemma(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapseDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>, boolean, edu.stanford.nlp.trees.GrammaticalStructure$Extras);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree);0.9813241958618164
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>);0.9813241958618164
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9780209064483643
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCollapsed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9100611209869385
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.9051175117492676
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8556732535362244
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.postProcessDependencies(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8474876284599304
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.getExtras(java.util.List<edu.stanford.nlp.trees.TypedDependency>);0.8366498947143555
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.extraTreeDepFilter();0.832563579082489
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.831155002117157
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.getDeps(java.util.function.Predicate<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8293601870536804
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.attachStrandedNodes(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, boolean, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.809450626373291
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalStructure.collapsePrepAndPoss(java.util.Collection<edu.stanford.nlp.trees.TypedDependency>);0.8079049587249756
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedingFollowingSister();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedesDescribedChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testTwoChildren();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.printTree(edu.stanford.nlp.trees.Tree, java.io.PrintWriter);1.0
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String);0.9991269111633301
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String, java.lang.String, edu.stanford.nlp.trees.TreebankLanguagePack);0.9991269111633301
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String, java.lang.String, edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.HeadFinder, edu.stanford.nlp.trees.HeadFinder);0.9991269111633301
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.propertyToBoolean(java.util.Properties, java.lang.String);0.9259189963340759
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testFind();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testFind();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.prettyPrint();0.8894635438919067
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testFind();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph, edu.stanford.nlp.semgraph.semgrex.Alignment, edu.stanford.nlp.semgraph.SemanticGraph);0.8422473669052124
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testFind();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph, boolean);0.8256453275680542
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testFind();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8133559226989746
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.9479669332504272
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8682398796081543
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(boolean, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.initFactory(edu.stanford.nlp.pipeline.TokenizerAnnotator$TokenizerType, java.util.Properties, java.lang.String);0.9654565453529358
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(boolean, java.util.Properties, java.lang.String);0.9545514583587646
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8584609627723694
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.9056320190429688
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNumericHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNumericHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9054746031761169
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testComplicatedGraph();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.patterns.surface.AnnotatedTextReaderTest.testParse();edu.stanford.nlp.patterns.surface.AnnotatedTextReader.parseFile(java.io.BufferedReader, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>>, boolean, java.lang.String);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testTwoSentences();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testTwoSentences();edu.stanford.nlp.process.WordToSentenceProcessor.wordsToSentences(java.util.List<? extends IN>);0.9022802114486694
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNotEquals();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getRelnString(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8211560249328613
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.936882734298706
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.<init>();0.9347137212753296
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.setRoot(edu.stanford.nlp.ling.IndexedWord);0.9275685548782349
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.IndexedWord.<init>(java.lang.String, int, int);0.8965063691139221
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8613589406013489
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.addVertex(edu.stanford.nlp.ling.IndexedWord);0.8361349701881409
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8228073120117188
edu.stanford.nlp.pipeline.ChunkAnnotationUtilsTest.testMergeChunks();edu.stanford.nlp.pipeline.ChunkAnnotationUtils.mergeChunks(java.util.List<edu.stanford.nlp.util.CoreMap>, java.lang.String, int, int);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9243308901786804
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8188983798027039
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.9306600689888
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.9026577472686768
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8448393940925598
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, boolean);0.9890270233154297
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);0.9657803773880005
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);0.8075648546218872
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testSimpleDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testSimpleDependency();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.8049175143241882
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9243308901786804
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8348341584205627
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9284735918045044
edu.stanford.nlp.process.WordToSentenceProcessorTest.testMr();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.topologicalSort();1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.vertexListSorted();0.9269599914550781
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.8861737847328186
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9735333323478699
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testExactDepthRelations();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testExactDepthRelations();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.81561678647995
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testIndex();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testIndex();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.9755407571792603
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testIndex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8123435378074646
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.SemanticGraph.setRoot(edu.stanford.nlp.ling.IndexedWord);0.9927835464477539
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.969237744808197
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.SemanticGraph.<init>();0.853030264377594
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8442543148994446
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.ling.IndexedWord.setValue(java.lang.String);0.8262612223625183
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8156470656394958
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.ling.IndexedWord.<init>(java.lang.String, int, int);0.813220202922821
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.ling.CoreLabel.toString();0.9355924129486084
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.process.WordToSentenceProcessor.wordsToSentences(java.util.List<? extends IN>);0.8723469376564026
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.8815944194793701
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8329123854637146
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8550692796707153
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.ling.CoreLabel.toString();0.8162124156951904
edu.stanford.nlp.process.WordToSentenceProcessorTest.testBlankLines();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testBlankLines();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);0.9579390287399292
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTwoDependencies();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8606712818145752
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.8241500854492188
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.8003352284431458
edu.stanford.nlp.process.WordToSentenceProcessorTest.testEdgeCases();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testChinese();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testXmlElements();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testXmlElements();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);0.9866904616355896
edu.stanford.nlp.process.WordToSentenceProcessorTest.testRegion();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMultipleDepths();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedDependency();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.8445521593093872
edu.stanford.nlp.patterns.CreatePatternsTest.test();edu.stanford.nlp.patterns.surface.CreatePatterns.CreatePatternsThread.call();0.9999999403953552
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.ling.CoreLabel.toString();1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8353369832038879
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.8167398571968079
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSimplerTokens();edu.stanford.nlp.patterns.surface.SurfacePattern.setToken(edu.stanford.nlp.patterns.surface.PatternToken);1.0
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSimplerTokens();edu.stanford.nlp.patterns.surface.SurfacePattern.setPrevContext(edu.stanford.nlp.patterns.surface.Token[]);0.873469352722168
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSimplerTokens();edu.stanford.nlp.patterns.surface.SurfacePattern.setNextContext(edu.stanford.nlp.patterns.surface.Token[]);0.8602041006088257
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSimplerTokens();edu.stanford.nlp.patterns.surface.SurfacePattern.toString();0.8142857551574707
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSsAllyBritain();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9601036310195923
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.Annotation.toString();0.922966718673706
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8906531929969788
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.util.Timing.report();0.8065273761749268
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama1();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9590179324150085
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.9332920908927917
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.Annotation.toString();0.927036702632904
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.util.Timing.report();0.8117110133171082
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9999999403953552
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8641765713691711
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.util.Timing.report();0.8384027481079102
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8130868077278137
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama2();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSAllyBritain();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9999999403953552
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.907204270362854
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8721697330474854
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCompoundPossessive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAmericanActorChrisPratt();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9144660234451294
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.pipeline.CoNLLOutputter.<init>();1.0
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation);0.9539076089859009
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9254144430160522
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9330015778541565
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.<init>(java.util.List<java.lang.String>);0.9999999403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.<init>(java.util.function.Function<java.lang.String, edu.stanford.nlp.simple.Document>, java.util.List<java.lang.String>, java.util.Properties);0.9999999403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.word(int);0.9879069328308105
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.9628620147705078
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.829544723033905
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Document.sentence(int);0.8265882730484009
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9526030421257019
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.9061187505722046
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8798346519470215
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8089314103126526
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9184519052505493
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8639509677886963
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9378392696380615
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.9015185832977295
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requires();0.9049468040466309
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.Annotation.toString();0.8277879953384399
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requires();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requirementsSatisfied();0.8968254327774048
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8699852228164673
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.8501688838005066
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.AnnotationPipeline.<init>();0.8016822338104248
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.AnnotationPipeline.<init>(java.util.List<edu.stanford.nlp.pipeline.Annotator>);0.8016822338104248
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getSerializedSize();1.0
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.writeTo(com.google.protobuf.CodedOutputStream);0.9919312596321106
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Sentence.serialize();0.8199506402015686
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();null.finalize();0.8127566576004028
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);0.9999999403953552
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.9445753693580627
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.8865666389465332
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.838132917881012
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.8366594314575195
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.9619929790496826
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.8994827270507812
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.8360390067100525
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.8248715996742249
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.removeMapping(K, V);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.add(K, V);0.8998779654502869
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.equals(java.lang.Object);0.8807525634765625
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.deltaCopy();0.8277207016944885
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(byte[], int, char[], int, int);1.0
edu.stanford.nlp.simple.SentenceTest.testCharacterOffsets();edu.stanford.nlp.simple.Sentence.characterOffsetEnd(int);1.0
edu.stanford.nlp.simple.SentenceTest.testCharacterOffsets();edu.stanford.nlp.simple.Sentence.characterOffsetBegin(int);0.9750000238418579
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.9949464797973633
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Document.sentence(int);0.9736356735229492
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.setText(java.lang.String);0.8453023433685303
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.8429374098777771
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizeSplitHyphens();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testOriginalText();edu.stanford.nlp.simple.Sentence.originalText(int);1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.util.CoreMap);1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.util.CoreMap);1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.lang.String, java.util.Properties);0.9435170292854309
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, edu.stanford.nlp.pipeline.CoreNLPProtos$Sentence$Builder, java.util.Properties);0.9435170292854309
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8823666572570801
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.util.Timing.report();0.8708784580230713
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Document.sentence(int);0.8683218955993652
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8524994254112244
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.8478294610977173
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.toProtoBuilder(edu.stanford.nlp.pipeline.Annotation);0.8459586501121521
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8179623484611511
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.8159021139144897
edu.stanford.nlp.simple.DocumentTest.testSentences();edu.stanford.nlp.simple.Document.sentences();1.0
edu.stanford.nlp.simple.SentenceTest.testLength();edu.stanford.nlp.simple.Sentence.length();1.0
edu.stanford.nlp.simple.SentenceTest.testWeirdTokens();edu.stanford.nlp.simple.Sentence.word(int);1.0
edu.stanford.nlp.simple.SentenceTest.testWeirdTokens();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);0.8010202646255493
edu.stanford.nlp.simple.SentenceTest.testWeirdTokens();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);0.8010202646255493
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Sentence.sentenceTokenOffsetEnd();1.0
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Sentence.sentenceTokenOffsetBegin();0.9796510934829712
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.8399882316589355
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.8399882316589355
edu.stanford.nlp.simple.SentenceTest.testText();edu.stanford.nlp.simple.Sentence.text();1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.<init>(java.util.List<java.lang.String>);0.9999999403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.<init>(java.util.function.Function<java.lang.String, edu.stanford.nlp.simple.Document>, java.util.List<java.lang.String>, java.util.Properties);0.9999999403953552
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.word(int);0.9921340942382812
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.9621149897575378
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.8263252973556519
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Document.sentence(int);0.8233092427253723
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.JSONOutputter.<init>();0.9999999403953552
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation);0.8217406868934631
edu.stanford.nlp.simple.SentenceTest.testSentenceIndex();edu.stanford.nlp.simple.Sentence.sentenceIndex();1.0
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.9974086284637451
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Sentence.equals(java.lang.Object);0.9502077698707581
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Document.sentence(int);0.8526893258094788
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.99657142162323
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.word(int);0.912228524684906
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.length();1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.text();0.9626486897468567
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.word(int);0.9530559778213501
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.988265335559845
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.9314591288566589
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.9211885929107666
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingToArray();edu.stanford.nlp.objectbank.ObjectBank.toArray(T[]);0.9999999403953552
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingToArray();edu.stanford.nlp.sequences.ObjectBankWrapper.<init>(edu.stanford.nlp.sequences.SeqClassifierFlags, edu.stanford.nlp.objectbank.ObjectBank<java.util.List<IN>>, java.util.Set<java.lang.String>);0.8984849452972412
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.process.PTBTokenizer.newPTBTokenizer(java.io.Reader, boolean, boolean);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.8361334800720215
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testCorp();edu.stanford.nlp.ling.CoreLabel.word();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testCorp();edu.stanford.nlp.process.PTBTokenizer.<init>(java.io.Reader, edu.stanford.nlp.process.LexedTokenFactory<T>, java.lang.String);0.9861594438552856
edu.stanford.nlp.process.PTBTokenizerTest.testCorp();edu.stanford.nlp.process.PTBTokenizer.ptb2Text(java.lang.String);0.8692916631698608
edu.stanford.nlp.process.PTBTokenizerTest.testCorp();edu.stanford.nlp.process.PTBTokenizer.getNext();0.8562370538711548
edu.stanford.nlp.process.PTBTokenizerTest.testHyphensQuoteAndBOM();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.getTokenizerFactory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.process.PTBTokenizer.factory();0.9886716604232788
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.process.PTBTokenizer.getNext();0.8484466075897217
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.process.PTBTokenizer.<init>(java.io.Reader, edu.stanford.nlp.process.LexedTokenFactory<T>, java.lang.String);0.8344182372093201
edu.stanford.nlp.process.PTBTokenizerTest.testFractions();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9473082423210144
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerCoreLabel();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerMT();edu.stanford.nlp.process.PTBTokenizer.factory();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testDateNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedDateString(java.lang.String, edu.stanford.nlp.time.Timex);1.0
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.CoNLLOutputter.<init>();1.0
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation, edu.stanford.nlp.pipeline.StanfordCoreNLP);0.972824215888977
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizePerLineSGML();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingIterator();edu.stanford.nlp.sequences.ObjectBankWrapper.iterator();1.0
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingIterator();edu.stanford.nlp.sequences.ObjectBankWrapper.<init>(edu.stanford.nlp.sequences.SeqClassifierFlags, edu.stanford.nlp.objectbank.ObjectBank<java.util.List<IN>>, java.util.Set<java.lang.String>);0.8055555820465088
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();0.9207265377044678
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.9110164046287537
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.9000364542007446
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.9863440990447998
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.9315965175628662
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.9213465452194214
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingEnhancedFor();edu.stanford.nlp.sequences.ObjectBankWrapper.iterator();1.0
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingEnhancedFor();edu.stanford.nlp.sequences.ObjectBankWrapper.<init>(edu.stanford.nlp.sequences.SeqClassifierFlags, edu.stanford.nlp.objectbank.ObjectBank<java.util.List<IN>>, java.util.Set<java.lang.String>);0.8388646245002747
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerWord();edu.stanford.nlp.process.PTBTokenizer.factory();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8537211418151855
edu.stanford.nlp.process.PTBTokenizerTest.testTweets();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.toString();1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.extractFields(java.lang.String);0.8833633661270142
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.<init>(java.lang.String);0.8706454038619995
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.getDateString();0.8031344413757324
edu.stanford.nlp.process.DocumentPreprocessorTest.testSetSentencePunctWords();edu.stanford.nlp.process.DocumentPreprocessor.setSentenceFinalPuncWords(java.lang.String[]);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testSetSentencePunctWords();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.8044686317443848
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testContext();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testContext();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8002476096153259
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Time.<init>(edu.stanford.nlp.time.SUTime$Time);1.0
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Time.<init>();0.9877089262008667
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.IsoDate.initBase();0.9017294645309448
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Temporal.toString();0.8584170937538147
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Time.<init>(edu.stanford.nlp.time.SUTime$Time);0.9999999403953552
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Time.<init>();0.9900081753730774
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.IsoDate.<init>(edu.stanford.nlp.time.SUTime$StandardTemporalType, int, int, int);0.8125430941581726
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.IsoDate.<init>(int, int, int);0.8125430941581726
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.PartialTime.<init>();0.8082306385040283
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.RelativeTime.<init>(edu.stanford.nlp.time.SUTime$Time, edu.stanford.nlp.time.SUTime$TemporalOp, edu.stanford.nlp.time.SUTime$Temporal);0.8062978982925415
edu.stanford.nlp.time.DurationTest.testDurationContainsDuration();edu.stanford.nlp.time.SUTime.Range.contains(edu.stanford.nlp.time.SUTime$Range);1.0
edu.stanford.nlp.util.MetaClassTest.testPrimitives();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testPrimitives();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.9912829399108887
edu.stanford.nlp.util.MetaClassTest.testBasic();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testBasic();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.8038613200187683
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.9197881817817688
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findClosestMatches(K[], int);0.870435357093811
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findClosestMatches(K[], int, boolean, boolean);0.870435357093811
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.ApproxMatch.toString();0.8665230870246887
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortedPathDirectionSensitiveEdges();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPathEdges(V, V, boolean);1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.<init>();1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.<init>(edu.stanford.nlp.util.MapFactory<E, edu.stanford.nlp.util.BinaryHeapPriorityQueue.edu.stanford.nlp.util.BinaryHeapPriorityQueue$Entry<E>>);1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.decreasePriority(E, double);0.9591070413589478
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.relaxPriority(E, double);0.8919904232025146
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionInsensitiveNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPath(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionSensitiveNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPath(V, V, boolean);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedString(edu.stanford.nlp.stats.Counter<T>, int, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedString(edu.stanford.nlp.stats.Counter<T>, int, java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedByKeysString(edu.stanford.nlp.stats.Counter<T>, java.lang.String, java.lang.String, java.lang.String);0.8187500238418579
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toString(edu.stanford.nlp.stats.Counter<E>, int);0.8152501583099365
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toVerticalString(edu.stanford.nlp.stats.Counter<E>, int);0.8046875
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionInsensitiveEdges();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPathEdges(V, V, boolean);1.0
edu.stanford.nlp.stats.CountersTest.testRetainTopMass();edu.stanford.nlp.stats.Counters.retainTopMass(edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testShortestPath();edu.stanford.nlp.semgraph.SemanticGraph.getShortestUndirectedPathEdges(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testShortestPath();edu.stanford.nlp.semgraph.SemanticGraph.getShortestUndirectedPathNodes(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.kBestSequences(edu.stanford.nlp.sequences.SequenceModel, int);0.9285714626312256
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.<init>();0.8703703880310059
edu.stanford.nlp.stats.CountersTest.testToSortedList();edu.stanford.nlp.stats.Counters.toSortedList(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedList();edu.stanford.nlp.stats.Counters.toSortedList(edu.stanford.nlp.stats.Counter<E>, boolean);0.9334745407104492
edu.stanford.nlp.stats.CountersTest.testRetainTop();edu.stanford.nlp.stats.Counters.retainTop(edu.stanford.nlp.stats.Counter<E>, int);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObjectPassive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObjectPassive();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8450338840484619
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObjectPassive();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8016071915626526
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPExtraction();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithAdverb();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPassiveNSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCatsAreCute();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testHeWasInaugurated();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.9395895600318909
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.8716064691543579
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreVBing();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.9177607297897339
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8555761575698853
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testrabbitsEatVegetables();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBG();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPassiveReflexive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveWithObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testFishLikeToSwimAlternateParse();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveNoNER();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testReflexive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testBlueCatsPlayQuietlyWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testMyCatsPlayWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9616748690605164
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.922315239906311
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8319739103317261
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8850905895233154
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.8746185302734375
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.8596341609954834
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisManningOfStanford();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaPresidentOfRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreWith();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPAttachment();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testIAmInFlorida();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposInObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaBornInRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testBlueCatsPlayWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreIn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPAttachmentTwo();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisIsOfStanford();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBGCollapsed();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBGCollapsed();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8184416890144348
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.8204055428504944
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8022581934928894
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObjInRelation();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveInEntity();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testFishLikeToSwim();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThrowAway();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9616748690605164
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.922315239906311
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8319739103317261
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.818035364151001
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.9319222569465637
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAllNominals();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9616748690605164
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.922315239906311
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8319739103317261
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testOfWhich();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.9716039896011353
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.8012076616287231
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPresidentObama();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph, java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>);0.9548302888870239
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.ie.util.IETestUtils.mkWord(java.lang.String, int);0.9544591307640076
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.9539712071418762
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.matcher(java.util.List<? extends edu.stanford.nlp.util.CoreMap>);0.8701798915863037
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>, boolean);0.8065692186355591
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisManningOfStanfordLong();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGeorgeBoydRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.9668728113174438
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.9388421773910522
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.toString();0.8679209351539612
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCatsHaveTails();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9621330499649048
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.9134142994880676
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(edu.stanford.nlp.ling.tokensregex.SequencePattern$PatternExpr);0.8774513602256775
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SequenceEndPatternExpr.<init>();0.8652058243751526
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SequenceStartPatternExpr.<init>();0.846603274345398
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8283811807632446
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SpecialNodePatternExpr.<init>(java.lang.String);0.8078897595405579
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SpecialNodePatternExpr.<init>(java.lang.String, edu.stanford.nlp.util.Factory<edu.stanford.nlp.ling.tokensregex.SequencePattern$State>);0.8078897595405579
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8059470653533936
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testNmodTmod();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPropagateCSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testDogsInheaven();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.9616748690605164
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.922315239906311
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8319739103317261
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8985480070114136
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.8823608756065369
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposAsSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaPresidentOfRegressionFull();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testMassOfIron();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.initialize(int);1.0
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.add(edu.stanford.nlp.ling.Datum<L, F>);0.9342842698097229
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numClasses();0.9324867129325867
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.size();0.9134718179702759
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numFeatures();0.9047540426254272
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numFeatureTypes();0.8985912203788757
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numFeatureTokens();0.881643533706665
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.<init>();0.8305225968360901
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.Dataset.<init>(int);0.8305225968360901
edu.stanford.nlp.optimization.MinimizerTest.testQNMinimizerRosenbrock();edu.stanford.nlp.optimization.QNMinimizer.minimize(edu.stanford.nlp.optimization.DiffFunction, double, double[]);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testNoErrors();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.Tree.iterator();0.8643239736557007
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.Tree.toString();0.8124405741691589
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testExtraSpan();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testChineseReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectShiftResultingTree();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectShiftTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtreesExtended();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedesFollows();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testDominateUnaryChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testBackReference();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.TreeTest.testTreeIterator();edu.stanford.nlp.trees.Tree.iterator();1.0
edu.stanford.nlp.trees.TreeTest.testTreeIterator();edu.stanford.nlp.trees.Tree.hashCode();0.8542835712432861
edu.stanford.nlp.trees.TreeTest.testTreeIterator();edu.stanford.nlp.trees.Tree.subTrees();0.8289775848388672
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);0.8275396227836609
edu.stanford.nlp.trees.tregex.TregexTest.testDominateDescribedChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.TreeTest.testDeeperCopy();edu.stanford.nlp.trees.Tree.deepCopy();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNamed();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNamed();edu.stanford.nlp.trees.Tree.toString();0.914444625377655
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatelyDominates();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMislabeledSpans();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.TreeTransformer.apply(edu.stanford.nlp.trees.Tree);0.8548477292060852
edu.stanford.nlp.trees.tregex.TregexTest.testDocExamples();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testParentEquals();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.Tree.toString();0.8926982879638672
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8105937838554382
edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinderTest.testFindTreeWithSmallestSpan();edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.findTreeWithSmallestSpan(edu.stanford.nlp.trees.Tree, int, int);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);0.9999999403953552
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.<init>(java.util.List<edu.stanford.nlp.trees.Tree>, boolean, java.util.Set<java.lang.String>);0.9887035489082336
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.goldTransition(int, edu.stanford.nlp.parser.shiftreduce.State);0.8215287923812866
edu.stanford.nlp.trees.tregex.TregexTest.testSister();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMissingSpan();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testChinese();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromGoldTagTree(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequence(edu.stanford.nlp.trees.Tree, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.8303226232528687
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromTaggedSentence(java.util.List<? extends edu.stanford.nlp.ling.HasWord>);0.8159612417221069
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.tregex.TregexMatcher.getVariableString(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.Tree.toString();0.8707759380340576
edu.stanford.nlp.trees.SemanticHeadFinderTest.testRegularSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCoindex();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCoindex();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8490424752235413
edu.stanford.nlp.trees.tregex.TregexTest.testOptional();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testOptional();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8175156712532043
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testRelabel();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testSeparators();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromGoldTagTree(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.SemanticHeadFinderTest.testCopulaHeadSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsert();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testMultiplePatterns();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatePrecedesFollows();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testTagErrors();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.<init>(java.util.List<edu.stanford.nlp.trees.Tree>, boolean, java.util.Set<java.lang.String>);0.9172936677932739
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.Tree.toString();0.8713481426239014
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8228794932365417
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.TreeTransformer.apply(edu.stanford.nlp.trees.Tree);0.8165680170059204
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.removeChild(int);1.0
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.TreeIterator.remove();0.947719395160675
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.toString();0.9363417625427246
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8878061175346375
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.equals(java.lang.Object);0.8828787207603455
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.iterator();0.8370549082756042
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.firstChild();0.8094471096992493
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testKeyword();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtrees();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtrees();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.processPattern(edu.stanford.nlp.trees.tregex.TregexPattern, edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonPattern, edu.stanford.nlp.trees.Tree);0.8079575300216675
edu.stanford.nlp.trees.tregex.TregexTest.testWordDisjunction();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testWordDisjunction();edu.stanford.nlp.trees.Tree.toString();0.8561462163925171
edu.stanford.nlp.trees.tregex.TregexTest.testDominates();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromGoldTagTree(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequence(edu.stanford.nlp.trees.Tree, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.8316231966018677
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromTaggedSentence(java.util.List<? extends edu.stanford.nlp.ling.HasWord>);0.817591667175293
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testExcise();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testExcise();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8310467600822449
edu.stanford.nlp.optimization.DiffFunctionTest.testXSquaredPlusOne();null.<init>(edu.stanford.nlp.optimization.DiffFunctionTest);1.0
edu.stanford.nlp.optimization.DiffFunctionTest.testXSquaredPlusOne();null.domainDimension();0.8947368264198303
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.pairwiseSubtract(double[], double[]);1.0
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.norm(double[]);0.8419395089149475
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.pearsonCorrelation(double[], double[]);0.8101981282234192
edu.stanford.nlp.ling.LabelsTest.testWord();edu.stanford.nlp.ling.StringLabel.toString();1.0
edu.stanford.nlp.ling.LabelsTest.testWord();edu.stanford.nlp.ling.StringLabel.setFromString(java.lang.String);0.8798454999923706
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.8861370086669922
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexMatcher.resetChildIter(edu.stanford.nlp.trees.Tree);0.885773241519928
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8509961366653442
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.Tree.iterator();0.8358448147773743
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(java.util.function.Function<java.lang.String, java.lang.String>);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(edu.stanford.nlp.trees.HeadFinder, java.util.function.Function<java.lang.String, java.lang.String>);0.9730133414268494
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);0.8965067863464355
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.Tree.toString();0.8309417963027954
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.Tree.iterator();0.8113836646080017
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyMatchRoot();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyMatchRoot();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.8173189163208008
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(java.util.function.Function<java.lang.String, java.lang.String>);0.9722447991371155
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(edu.stanford.nlp.trees.HeadFinder, java.util.function.Function<java.lang.String, java.lang.String>);0.9411582350730896
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPattern.setPatternString(java.lang.String);0.8669551014900208
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.Tree.toString();0.848800778388977
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.Tree.iterator();0.84564208984375
edu.stanford.nlp.trees.tregex.TregexTest.testOneResult();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testPrune();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTwoResults();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.Tree.toString();0.8926982879638672
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8105937838554382
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.Tree.toString();0.8695312738418579
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.Tree.toString();0.8865500688552856
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.Tree.iterator();0.8339201211929321
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.tregex.TregexMatcher.matchesAt(edu.stanford.nlp.trees.Tree);0.8220657110214233
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinWithNamedNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testForeign();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.semgraph.SemanticGraphUtilsTest.testCreateSemgrexPattern();edu.stanford.nlp.semgraph.SemanticGraphUtils.semgrexFromGraphOrderedNodes(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Collection<edu.stanford.nlp.ling.IndexedWord>, java.util.Map<edu.stanford.nlp.ling.IndexedWord, java.lang.String>, java.util.function.Function<edu.stanford.nlp.ling.IndexedWord, java.lang.String>);1.0
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.Generics.newHashMap();1.0
edu.stanford.nlp.naturalli.OpenIETest.testCComp();null.<init>(edu.stanford.nlp.naturalli.OpenIETest);0.9880892634391785
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.9698395133018494
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.ling.IndexedWord.hashCode();0.9626311659812927
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.naturalli.Util.cleanTree(edu.stanford.nlp.semgraph.SemanticGraph);0.9366396069526672
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.semgraph.SemanticGraph.addRoot(edu.stanford.nlp.ling.IndexedWord);0.894485592842102
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.HashIndex.addToIndex(E);0.8759415149688721
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.HashIndex.iterator();0.8668262958526611
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.Pair.<init>();0.8530930876731873
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem.search(java.util.function.Predicate<edu.stanford.nlp.util.Triple<java.lang.Double, java.util.List<edu.stanford.nlp.stats.Counter<java.lang.String>>, java.util.function.Supplier<edu.stanford.nlp.naturalli.SentenceFragment>>>, edu.stanford.nlp.classify.Classifier<edu.stanford.nlp.naturalli.ClauseSplitter$ClauseClassifierLabel, java.lang.String>, java.util.Map<java.lang.String, java.util.List<java.lang.String>>, java.util.function.Function<edu.stanford.nlp.util.Triple<edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$State, edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$Action, edu.stanford.nlp.naturalli.ClauseSplitterSearchProblem$State>, edu.stanford.nlp.stats.Counter<java.lang.String>>, int);0.847444474697113
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.8280581831932068
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.trees.GrammaticalRelation.isFromString();0.802767813205719
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.atbFactory();0.9999999403953552
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishHeadFinder.insertVerbs(java.lang.String[], java.lang.String[]);0.9816564917564392
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.startSymbols();0.9305147528648376
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.startSymbols();0.9268370270729065
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.punctuationWords();0.9250741600990295
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.punctuationWords();0.9213964343070984
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack.startSymbols();0.8964112997055054
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack.startSymbols();0.8964112997055054
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack.startSymbols();0.8964112997055054
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.punctuationTags();0.8956946134567261
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.punctuationTags();0.8920168280601501
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack.punctuationWords();0.8909706473350525
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack.punctuationWords();0.8909706473350525
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack.punctuationWords();0.8909706473350525
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.CollectionUtils.asSet(T[]);0.8761615753173828
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack.punctuationTags();0.861591100692749
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack.punctuationTags();0.861591100692749
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack.punctuationTags();0.861591100692749
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.HashIndex.size();0.8507229685783386
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.startSymbols();0.8442261219024658
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();null.noun();0.8401179313659668
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationWords();0.8387854695320129
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.getEncoding();0.8330123424530029
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams.setOutputEncoding(java.lang.String);0.8314593434333801
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.international.Language.values();0.8282328248023987
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.international.morph.MorphoFeatureSpecification.activate(edu.stanford.nlp.international.morph.MorphoFeatureSpecification$MorphoFeatureType);0.8276326656341553
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.Generics.newHashMap();0.8234191536903381
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.evalBIgnoredPunctuationTags();0.8107697367668152
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();0.8094058632850647
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.sentenceFinalPunctuationTags();0.8061569333076477
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.sentenceFinalPunctuationTags();0.8024791479110718
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonEdit.<init>();1.0
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.929519772529602
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.<init>(edu.stanford.nlp.semgraph.semgrex.SemgrexPattern);0.9284268617630005
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.<init>(java.lang.String, edu.stanford.nlp.semgraph.semgrex.SemgrexPattern);0.9284268617630005
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.SemanticGraph.toCompactString();0.9186575412750244
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.execute(edu.stanford.nlp.semgraph.SemanticGraph);0.9114707112312317
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern.addEdit(edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonEdit);0.875862717628479
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);0.8592881560325623
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonEdit.setOwningPattern(edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonPattern);0.827894926071167
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.naturalli.Util.cleanTree(edu.stanford.nlp.semgraph.SemanticGraph);1.0
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();null.<init>(edu.stanford.nlp.naturalli.OpenIETest);0.9775487780570984
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.HashIndex.size();0.8559910655021667
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.Generics.newArrayList(java.util.Collection<? extends E>);0.8108019232749939
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.Generics.newHashMap();0.8064814805984497
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.semgraph.SemanticGraph.getComments();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.9754105806350708
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.9754105806350708
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.9636189341545105
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.objectbank.DelimitRegExIterator.hasNext();0.9168253540992737
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.ling.IndexedWord.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8275414705276489
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.objectbank.DelimitRegExIterator.next();0.8270613551139832
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.semgraph.SemanticGraph.toCompactString(boolean);0.8167265057563782
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.semgraph.SemanticGraph.addRoot(edu.stanford.nlp.ling.IndexedWord);0.9999999403953552
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.8911890387535095
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();null.<init>(edu.stanford.nlp.naturalli.OpenIETest);0.8695040941238403
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.ling.IndexedWord.hashCode();0.8602586388587952
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.util.HashIndex.addToIndex(E);0.8152898550033569
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.semgraph.SemanticGraph.vertexListSorted();0.8118852972984314
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testIsAllCaps();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.isAllCaps(java.lang.String);1.0
edu.stanford.nlp.util.BeamTest.testContent();edu.stanford.nlp.util.Beam.iterator();1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.<init>(int, boolean);0.8703703880310059
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.<init>(int, boolean, boolean);0.8703703880310059
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.<init>();1.0
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.hashCode();0.9492084980010986
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.equals(java.lang.Object);0.9129288196563721
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSerialization();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.equals(java.lang.Object);0.9999999403953552
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.addPhrases(java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.findAllMatches(java.lang.String);0.9682784080505371
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.Phrase.getText();0.8743973970413208
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.lookupNormalized(java.lang.String);0.8667259216308594
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testFindMatches();edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(java.lang.String, int, int, boolean);1.0
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testIterator();edu.stanford.nlp.ling.tokensregex.PhraseTable.iterator();1.0
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);0.9999999403953552
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.ling.WordLemmaTag.lemma();0.8192676901817322
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.process.Morphology.lemmatizeStatic(edu.stanford.nlp.ling.WordTag);0.8181217908859253
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.process.Morphology.lemmatizeStatic(edu.stanford.nlp.ling.WordTag);1.0
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordTag.setWord(java.lang.String);0.9540440440177917
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordLemmaTag.lemma();0.9382428526878357
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);0.8289647102355957
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordTag.word();0.8107640743255615
edu.stanford.nlp.process.MorphologyTest.testStemStatic();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);1.0
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.ling.WordTag.word();1.0
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);0.9225273728370667
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.ling.WordTag.<init>(java.lang.String, java.lang.String);0.8902896046638489
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.ling.WordTag.setWord(java.lang.String);0.8511072397232056
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testRelativeDateCreation();edu.stanford.nlp.ie.pascal.ISODateInstance.getDateString();1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testRelativeDateCreation();edu.stanford.nlp.ie.pascal.ISODateInstance.extractFields(java.lang.String);0.8207042217254639
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testRelativeDateCreation();edu.stanford.nlp.ie.pascal.ISODateInstance.incrementDay(edu.stanford.nlp.ie.pascal.ISODateInstance, edu.stanford.nlp.util.Pair<edu.stanford.nlp.ie.pascal.ISODateInstance$DateField, java.lang.Integer>);0.8190875053405762
edu.stanford.nlp.util.ArraySetTest.testClear();edu.stanford.nlp.util.ArraySet.size();1.0
edu.stanford.nlp.util.ArraySetTest.testClear();edu.stanford.nlp.util.ArraySet.iterator();0.9808530807495117
edu.stanford.nlp.util.ArraySetTest.testRemove();edu.stanford.nlp.util.ArraySet.size();1.0
edu.stanford.nlp.util.ArraySetTest.testRemove();edu.stanford.nlp.util.ArraySet.iterator();0.922573447227478
edu.stanford.nlp.util.ArraySetTest.testEquals();edu.stanford.nlp.util.ArraySet.iterator();1.0
edu.stanford.nlp.util.ArraySetTest.testEquals();edu.stanford.nlp.util.ArraySet.size();0.9630396366119385
edu.stanford.nlp.util.ArraySetTest.testAdd();edu.stanford.nlp.util.ArraySet.add(E);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph, boolean);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.914328932762146
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.Env.bind(java.lang.String, java.lang.Object);0.8540790677070618
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8342100381851196
edu.stanford.nlp.trees.ModCollinsHeadFinderTest.testModCollinsHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testComplexJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testCollectionJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testNestedJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.unmodifiableView();1.0
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.addAll(java.util.Collection<? extends E>);0.8146787285804749
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.contains(java.lang.Object);0.8042620420455933
edu.stanford.nlp.ling.CategoryWordTagFactoryTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.category();0.9999999403953552
edu.stanford.nlp.ling.CategoryWordTagFactoryTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.word();0.8969296216964722
edu.stanford.nlp.ling.CategoryWordTagFactoryTest.testCopy();edu.stanford.nlp.ling.CategoryWordTagFactory.newLabel(edu.stanford.nlp.ling.Label);0.8294642567634583
edu.stanford.nlp.ling.CategoryWordTagTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.category();1.0
edu.stanford.nlp.ling.CategoryWordTagTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.word();0.9074708819389343
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);1.0
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.<init>();0.946422815322876
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.register(java.lang.String, java.util.Properties, edu.stanford.nlp.util.Lazy<edu.stanford.nlp.pipeline.Annotator>);0.9166951775550842
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9621825218200684
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMatchAll();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMatchAll();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.9933483600616455
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMatchAll();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8020206093788147
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testPrettyPrint();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.prettyPrint();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testMacro();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph, boolean);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.9278662800788879
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8816013932228088
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8205359578132629
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.CleanXmlAnnotator.setTokenBeginTokenEnd(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8319047689437866
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.pipeline.CleanXmlAnnotator.process(edu.stanford.nlp.pipeline.Annotation, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8381063938140869
edu.stanford.nlp.process.PTBTokenizerTest.testJacobEisensteinApostropheCase();edu.stanford.nlp.process.PTBTokenizer.newPTBTokenizer(java.io.Reader);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testAttributes();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.util.IterablesTest.testGroup();edu.stanford.nlp.util.Iterables.group(java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.readSVMLightFormat(java.io.File);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.writeSVMLightFormat(java.io.File);0.9847368001937866
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.<init>(int, edu.stanford.nlp.util.Index<F>, edu.stanford.nlp.util.Index<L>);0.8157142996788025
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.io.File, java.lang.Class<? extends java.io.InputStream>);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.io.File);0.9929388761520386
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.gapDecode(byte[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.gapEncode(int[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);0.9227582812309265
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.PairsHolder.add(edu.stanford.nlp.ling.WordTag);0.9999999403953552
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.PairsHolder.<init>();0.8471337556838989
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.HistoryTable.getIndex(edu.stanford.nlp.tagger.maxent.History);0.8443281650543213
edu.stanford.nlp.ling.LabelsTest.testWordTag();edu.stanford.nlp.ling.WordTag.tag();1.0
edu.stanford.nlp.ling.LabelsTest.testWordTag();edu.stanford.nlp.ling.WordTag.setTag(java.lang.String);0.828498899936676
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.entrySet();1.0
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.get(java.lang.Object);0.9372914433479309
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.containsKey(java.lang.Object);0.9112704992294312
edu.stanford.nlp.trees.international.negra.NegraPennLanguagePackTest.testBasicCategory();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.basicCategory(java.lang.String);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.contains(K1, K2);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.size();0.927557110786438
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.isEmpty();0.9098397493362427
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.get(K1, K2);0.8995541334152222
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.clear();0.8406793475151062
edu.stanford.nlp.time.DurationTest.testDurationContainsTime();edu.stanford.nlp.time.SUTime.Range.contains(edu.stanford.nlp.time.SUTime$Time);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.9911434054374695
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris4(java.lang.String, boolean, java.util.Collection<java.lang.String>);0.8849002122879028
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.9897313714027405
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris1(java.lang.String);0.8772856593132019
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.9911434054374695
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris2(java.lang.String, boolean, java.util.Collection<java.lang.String>);0.8700000047683716
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.9911434054374695
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShapeChris2(java.lang.String, boolean, java.util.Collection<java.lang.String>);0.824999988079071
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.9902793169021606
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShapeDigits(java.lang.String);0.9334270358085632
edu.stanford.nlp.util.IntervalTreeTest.testGetOverlapping();edu.stanford.nlp.util.IntervalTree.getOverlapping(T);1.0
edu.stanford.nlp.trees.TreeTest.testDominates();edu.stanford.nlp.trees.Tree.dominates(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testBuildParentMap();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.util.IterablesTest.testMerge3();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V>, java.lang.Iterable<V>, java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.util.IterablesTest.testTransform();edu.stanford.nlp.util.Iterables.transform(java.lang.Iterable<K>, java.util.function.Function<? super K, ? extends V>);1.0
edu.stanford.nlp.process.WhitespaceTokenizerTest.testWordTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.factory(boolean);1.0
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.toString();0.9999999403953552
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.ValueLabel.<init>();0.9785823822021484
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.<init>(java.lang.String);0.9465686082839966
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.setFromString(java.lang.String);0.9180219173431396
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.setValue(java.lang.String);0.9070357084274292
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.labelFactory();0.85342937707901
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.ValueLabel.equals(java.lang.Object);0.8243085741996765
edu.stanford.nlp.semgraph.SemanticGraphTest.testHasChildren();edu.stanford.nlp.semgraph.SemanticGraph.hasChildren(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.util.StringUtilsTest.testLongestCommonSubstring();edu.stanford.nlp.util.StringUtils.longestCommonSubstring(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.ConcatenationIteratorTest.testIterator();edu.stanford.nlp.util.ConcatenationIterator.next();1.0
edu.stanford.nlp.util.ConcatenationIteratorTest.testIterator();edu.stanford.nlp.util.ConcatenationIterator.hasNext();0.8809523582458496
edu.stanford.nlp.util.ConcatenationIteratorTest.testIterator();edu.stanford.nlp.util.ConcatenationIterator.<init>(java.util.Iterator<T>, java.util.Iterator<T>);0.8472222685813904
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testOrdinalNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedOrdinalString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.naturalli.UtilTest.extractNER();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.stats.CountersTest.testDivideInPlace();edu.stanford.nlp.stats.Counters.divideInPlace(edu.stanford.nlp.stats.TwoDimensionalCounter<A, B>, double);1.0
edu.stanford.nlp.naturalli.UtilTest.nerOverlap();edu.stanford.nlp.naturalli.Util.nerOverlap(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.stats.CountersTest.testJensenShannonDivergence();edu.stanford.nlp.stats.Counters.jensenShannonDivergence(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testFlatten();edu.stanford.nlp.stats.Counters.flatten(java.util.Map<E2, edu.stanford.nlp.stats.Counter<E>>);1.0
edu.stanford.nlp.stats.CountersTest.testHIndex();edu.stanford.nlp.stats.Counters.hIndex(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.argmin(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.min(edu.stanford.nlp.stats.Counter<E>);0.9686141014099121
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.subtractInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);0.9476243257522583
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.argmax(edu.stanford.nlp.stats.Counter<E>);0.945414662361145
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.mean(edu.stanford.nlp.stats.Counter<E>);0.9429346919059753
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.keysAt(edu.stanford.nlp.stats.Counter<E>, double);0.9256541728973389
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.keysAbove(edu.stanford.nlp.stats.Counter<E>, double);0.9085345268249512
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.keysBelow(edu.stanford.nlp.stats.Counter<E>, double);0.9085345268249512
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.retainNonZeros(edu.stanford.nlp.stats.Counter<E>);0.907107949256897
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.max(edu.stanford.nlp.stats.Counter<E>);0.8985296487808228
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.multiplyInPlace(edu.stanford.nlp.stats.Counter<E>, double);0.8854230642318726
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>, boolean, boolean);0.8794687390327454
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.totalCount();0.8742550015449524
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.addInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>, double);0.8714420795440674
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.divideInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);0.8595900535583496
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.addInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);0.8514508008956909
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.divideInPlace(edu.stanford.nlp.stats.Counter<E>, double);0.8511912226676941
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.defaultReturnValue();0.8288891315460205
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.ClassicCounter.containsKey(E);0.8273439407348633
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.ClassicCounter.totalCount();0.8021348714828491
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.setCount(E, double);0.8017673492431641
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.<init>();0.8875475525856018
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.968181848526001
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.9535714387893677
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.9515151381492615
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.936904788017273
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);0.925000011920929
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.predict(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.8309524059295654
edu.stanford.nlp.stats.CountersTest.testAddInPlaceCollection();edu.stanford.nlp.stats.Counters.addInPlace(edu.stanford.nlp.stats.Counter<E>, java.util.Collection<E>);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.setCount(K1, K2, double);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.getCount(K1, K2);0.896163821220398
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount(K1);0.8406062126159668
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount();0.833382785320282
edu.stanford.nlp.stats.CountersTest.testLogNormalize();edu.stanford.nlp.stats.Counters.logSum(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testLogNormalize();edu.stanford.nlp.stats.Counters.logNormalizeInPlace(edu.stanford.nlp.stats.Counter<E>);0.9893002510070801
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.IntCounter.getFactory();1.0
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.ClassicCounter.getFactory();0.9168692827224731
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.IntCounter.totalCount();0.8776064515113831
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.IntCounter.setCount(E, double);0.8511517643928528
edu.stanford.nlp.stats.CountersTest.testAbsoluteDifference();edu.stanford.nlp.stats.Counters.absoluteDifference(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testRemoveKeys();edu.stanford.nlp.stats.Counters.removeKeys(edu.stanford.nlp.stats.Counter<E>, java.util.Collection<E>);1.0
edu.stanford.nlp.naturalli.UtilTest.guessNERSpan();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.stats.CountersTest.testRetainAbove();edu.stanford.nlp.stats.Counters.retainAbove(edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.stats.CountersTest.testProduct();edu.stanford.nlp.stats.Counters.product(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testIntersection();edu.stanford.nlp.stats.Counters.intersection(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testToTiedRankCounter();edu.stanford.nlp.stats.Counters.toTiedRankCounter(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testEquals();edu.stanford.nlp.stats.Counters.equals(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testEquals();edu.stanford.nlp.stats.Counters.equals(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.stats.CountersTest.testL2Norm();edu.stanford.nlp.stats.Counters.L2Norm(C);1.0
edu.stanford.nlp.stats.CountersTest.testPearsonsCorrelationCoefficient();edu.stanford.nlp.stats.Counters.pearsonsCorrelationCoefficient(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.initialize(int);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.<init>();0.9513635635375977
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.<init>(int);0.9513635635375977
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.iterator();0.919614315032959
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.addAll(java.lang.Iterable<? extends edu.stanford.nlp.ling.Datum<L, F>>);0.8477503061294556
edu.stanford.nlp.stats.CountersTest.testUnion();edu.stanford.nlp.stats.Counters.union(C, C);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);0.97021484375
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.9582867622375488
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.9582867622375488
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.9302645325660706
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.9082918763160706
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.predict(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.8051060438156128
edu.stanford.nlp.sequences.IOBUtilsTest.testIOEResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.<init>();0.9283608198165894
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.add(edu.stanford.nlp.ling.Datum<L, F>);0.9093669056892395
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2Results();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBESResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testSerializeStringCounter();edu.stanford.nlp.stats.Counters.serializeStringCounter(edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testSerializeStringCounter();edu.stanford.nlp.stats.Counters.deserializeStringCounter(java.lang.String);0.8392857313156128
edu.stanford.nlp.stats.CountersTest.testTransformWithValuesAdd();edu.stanford.nlp.stats.Counters.transformWithValuesAdd(edu.stanford.nlp.stats.Counter<T1>, java.util.function.Function<T1, T2>);1.0
edu.stanford.nlp.naturalli.UtilTest.extractNERDifferingTypes();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.naturalli.UtilTest.guessNER();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testL2Normalize();edu.stanford.nlp.stats.Counters.L2Normalize(C);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testWeightingWorks();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();1.0
edu.stanford.nlp.stats.CountersTest.testPointwiseMutualInformation();edu.stanford.nlp.stats.Counters.pointwiseMutualInformation(edu.stanford.nlp.stats.Counter<T1>, edu.stanford.nlp.stats.Counter<T2>, edu.stanford.nlp.stats.Counter<edu.stanford.nlp.util.Pair<T1, T2>>, edu.stanford.nlp.util.Pair<T1, T2>);1.0
edu.stanford.nlp.stats.DistributionTest.testGetDistributionFromLogValues();edu.stanford.nlp.stats.Distribution.getDistributionFromLogValues(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.9937983751296997
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.9937983751296997
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);0.9918285012245178
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.9851425886154175
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.9851425886154175
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.predict(java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.8867649435997009
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.<init>();0.827885627746582
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.segment(K[]);0.9756258130073547
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.9488284587860107
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(java.lang.Iterable<K>, V);0.813762366771698
edu.stanford.nlp.util.DeltaIndexTest.testContains();edu.stanford.nlp.util.DeltaIndex.contains(java.lang.Object);1.0
edu.stanford.nlp.math.ArrayMathTest.testPairwiseMultiply();edu.stanford.nlp.math.ArrayMath.pairwiseMultiply(double[], double[]);1.0
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testRightTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.<init>(java.lang.String, edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side);1.0
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testRightTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.8811362385749817
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testInitialStateFromTagged();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromTaggedSentence(java.util.List<? extends edu.stanford.nlp.ling.HasWord>);1.0
edu.stanford.nlp.trees.TreeTest.testPennPrint();edu.stanford.nlp.trees.Tree.pennString();1.0
edu.stanford.nlp.trees.TreeTest.testPennPrint();edu.stanford.nlp.trees.Tree.pennPrint(java.io.PrintWriter);0.8452380895614624
edu.stanford.nlp.parser.shiftreduce.ShiftTransitionTest.testTransition();edu.stanford.nlp.parser.shiftreduce.ShiftTransition.<init>();1.0
edu.stanford.nlp.parser.shiftreduce.ShiftTransitionTest.testTransition();edu.stanford.nlp.parser.shiftreduce.ShiftTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.911243736743927
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testLeftTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.<init>(java.lang.String, edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side);1.0
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testLeftTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.9078630805015564
edu.stanford.nlp.trees.PennTreeReaderTest.testRead();edu.stanford.nlp.trees.PennTreeReader.readTree();1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtilsTest.testBinarySide();edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.getBinarySide(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.classify.GeneralDataset.labelIndex();1.0
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.classify.GeneralDataset.size();0.8772760629653931
edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModelTest.testGetSignature();edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModel.getSignature(java.lang.String, int);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNonsense();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.printTable();1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.setUseRealLabels(boolean);0.9523642063140869
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.add(U, U, int);0.9004920721054077
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.get(U, U);0.8112818002700806
edu.stanford.nlp.util.ConfusionMatrixTest.testBulkAdd();edu.stanford.nlp.util.ConfusionMatrix.add(U, U, int);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testBulkAdd();edu.stanford.nlp.util.ConfusionMatrix.printTable();0.8305617570877075
edu.stanford.nlp.util.ConfusionMatrixTest.testRealLabels();edu.stanford.nlp.util.ConfusionMatrix.setUseRealLabels(boolean);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testRealLabels();edu.stanford.nlp.util.ConfusionMatrix.printTable();0.9649650454521179
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.add(U, U);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.printTable();0.9334756135940552
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.<init>(java.util.Locale);0.9200345277786255
edu.stanford.nlp.sequences.BestSequenceFinderTest.testExactBestSequenceFinder();edu.stanford.nlp.sequences.ExactBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testExactBestSequenceFinder();edu.stanford.nlp.sequences.ExactBestSequenceFinder.<init>();0.8686572313308716
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9746135473251343
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.8888992667198181
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);0.9646727442741394
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.934945821762085
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.parseString(java.lang.String);0.8683648109436035
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.9932083487510681
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9728002548217773
edu.stanford.nlp.util.ArgumentParserTest.testFillStaticFieldFromProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.util.Properties);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsNoInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.testFillStaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticFieldFromProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.util.Properties);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.checkOptionsOverrideProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.util.Properties, java.lang.String[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[]);1.0
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.toSecondsString(long);1.0
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.<init>();0.920215368270874
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.reportNano();0.9166666269302368
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.report();0.828280508518219
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.WhitespaceTokenizerFactory.getTokenizer(java.io.Reader);1.0
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.WhitespaceTokenizerFactory.<init>(edu.stanford.nlp.process.LexedTokenFactory<T>, boolean);0.9459895491600037
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.setTokenizerFactory(edu.stanford.nlp.process.TokenizerFactory<? extends edu.stanford.nlp.ling.HasWord>);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.9421786069869995
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.setSentenceDelimiter(java.lang.String);0.9221000075340271
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.885989785194397
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.8782240152359009
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.setTokenizerFactory(edu.stanford.nlp.process.TokenizerFactory<? extends edu.stanford.nlp.ling.HasWord>);0.8665347099304199
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.setSentenceDelimiter(java.lang.String);0.8258098363876343
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.802763044834137
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.atbFactory();1.0
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.9485548138618469
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.ArabicTokenizerFactory.getTokenizer(java.io.Reader);0.8772510290145874
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.atbFactory();1.0
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.ArabicTokenizerFactory.setOptions(java.lang.String);0.8778963088989258
edu.stanford.nlp.process.PTBTokenizerTest.testEmoji();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9493812918663025
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.Tree.iterator();0.8256229162216187
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.tregex.TregexMatcher.resetChildIter(edu.stanford.nlp.trees.Tree);0.8178011775016785
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.getInDegree(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.getOutDegree(V);0.9366611242294312
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceInOrder();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceOutOfOrder();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.getPriority();1.0
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.toString();0.8476315140724182
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.toString(int);0.8476315140724182
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceNoIndices();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithEol();edu.stanford.nlp.io.IOUtils.getLineIterable(java.io.Reader, int, boolean);1.0
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithEol();edu.stanford.nlp.io.IOUtils.closeIgnoringExceptions(java.io.Closeable);0.8234292268753052
edu.stanford.nlp.trees.international.pennchinese.ChineseUtilsTest.testNormalize();edu.stanford.nlp.trees.international.pennchinese.ChineseUtils.normalize(java.lang.String, int, int, int);1.0
edu.stanford.nlp.util.IterablesTest.testChain();edu.stanford.nlp.util.Iterables.chain(java.lang.Iterable<T>[]);1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testIsCompatible();edu.stanford.nlp.ie.pascal.ISODateInstance.isCompatible(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);0.9999999403953552
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.classify(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.9332090616226196
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.io.BufferedReader, boolean, boolean, java.lang.String);0.8579352498054504
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.sequences.SeqClassifierFlags.setProperties(java.util.Properties, boolean);0.8153979182243347
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.classify(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8864036798477173
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.lang.String, boolean, boolean);0.818930447101593
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.lang.String, boolean, boolean, java.lang.String);0.818930447101593
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.lang.String, boolean, boolean);0.9214102625846863
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.<init>(java.lang.String, boolean, boolean, java.lang.String);0.9214102625846863
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.classify(java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.8193403482437134
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr4();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.ling.LabelsTest.testTaggedWord();edu.stanford.nlp.ling.TaggedWord.tag();1.0
edu.stanford.nlp.ling.LabelsTest.testTaggedWord();edu.stanford.nlp.ling.StringLabel.value();0.84796541929245
edu.stanford.nlp.simple.DocumentTest.testText();edu.stanford.nlp.simple.Document.text();1.0
edu.stanford.nlp.simple.DocumentTest.testDocid();edu.stanford.nlp.simple.Document.docid();1.0
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.setText(java.lang.String);0.9999999403953552
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.simple.Document.<init>(java.lang.String);0.9841648936271667
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.simple.Document.<init>(java.util.Properties, java.lang.String);0.9654725193977356
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.newBuilder();0.9542014002799988
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findNonOverlapping(K[]);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();0.9973778128623962
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.9522892832756042
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(java.lang.Iterable<K>, V);0.8239707350730896
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.Match.toString();0.8095533847808838
edu.stanford.nlp.util.IntervalTreeTest.testIteratorOrdered();edu.stanford.nlp.util.IntervalTree.iterator();1.0
edu.stanford.nlp.util.IntervalTreeTest.testIteratorOrdered();edu.stanford.nlp.util.IntervalTree.add(T);0.8033041954040527
edu.stanford.nlp.util.IntervalTreeTest.testIteratorRandom();edu.stanford.nlp.util.IntervalTree.iterator();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.949257493019104
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.9999999403953552
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.9594846963882446
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.9594846963882446
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.objectbank.DelimitRegExIterator.hasNext();0.9563932418823242
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.semgraph.SemanticGraph.containsEdge(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);0.8835420608520508
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.objectbank.DelimitRegExIterator.next();0.8449910879135132
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.semgraph.SemanticGraph.getNodeByIndex(int);0.8106380105018616
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.objectbank.DelimitRegExIterator.getFactory(java.lang.String, java.util.function.Function<java.lang.String, T>);0.8077847957611084
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.word();1.0
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.9320954084396362
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.918452262878418
edu.stanford.nlp.util.IntervalTest.testIntervalOverlaps();edu.stanford.nlp.util.Interval.overlaps(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalOverlaps();edu.stanford.nlp.util.Interval.toInterval(E, E);0.818771243095398
edu.stanford.nlp.util.IntervalTest.testIntervalOverlaps();edu.stanford.nlp.util.Interval.toInterval(E, E, int);0.8146275877952576
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.contains(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.toInterval(E, E);0.8085036277770996
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.toInterval(E, E, int);0.8049851059913635
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[]);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.incrementCount(K1, K2, double);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.getCount(K1, K2);0.9290498495101929
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount(K1);0.9145588874816895
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount();0.904589056968689
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.getCount(K1, K2);1.0
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>();0.9274193048477173
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>(edu.stanford.nlp.util.MapFactory<K1, edu.stanford.nlp.stats.IntCounter<K2>>, edu.stanford.nlp.util.MapFactory<K2, edu.stanford.nlp.util.MutableInteger>);0.9274193048477173
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>(edu.stanford.nlp.util.MapFactory<K1, edu.stanford.nlp.stats.IntCounter<K2>>, edu.stanford.nlp.util.MapFactory<K2, edu.stanford.nlp.util.MutableInteger>, int);0.9274193048477173
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.setCount(K1, K2, double);0.9032257795333862
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.incrementCount(K1, K2, double);0.8778802156448364
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.reverseIndexOrder(edu.stanford.nlp.stats.TwoDimensionalIntCounter<K1, K2>);0.8202087879180908
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testSameSemanticsForDifferentWordOrder();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.9779331088066101
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.9592611789703369
edu.stanford.nlp.util.EditDistanceTest.testModify();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testTranspose();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.combine(double, double);1.0
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.best();0.9464285373687744
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);0.9285714626312256
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.better(double, double);0.8214285373687744
edu.stanford.nlp.util.EditDistanceTest.testInsert();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testNumberNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedNumberString(java.lang.String, java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.util.EditDistanceTest.testEmpty();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testMoneyNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedMoneyString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testPercentNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedPercentString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.clear(int, int);0.8333333730697632
edu.stanford.nlp.util.StringUtilsTest.testArgsToProperties();edu.stanford.nlp.util.StringUtils.argsToProperties(java.lang.String[]);1.0
edu.stanford.nlp.util.StringUtilsTest.testArgsToProperties();edu.stanford.nlp.util.StringUtils.argsToProperties(java.lang.String[], java.util.Map<java.lang.String, java.lang.Integer>);1.0
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.createFactory(java.lang.Class<?>[]);0.917680025100708
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.8647265434265137
edu.stanford.nlp.ling.SentenceTest.testCoreLabelListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean);0.9999999403953552
edu.stanford.nlp.ling.SentenceTest.testCoreLabelListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean, java.lang.String);0.9999999403953552
edu.stanford.nlp.pipeline.AnnotationTest.testFromList();edu.stanford.nlp.pipeline.Annotation.toString();1.0
edu.stanford.nlp.pipeline.AnnotationTest.testFromList();edu.stanford.nlp.pipeline.Annotation.<init>(java.util.List<edu.stanford.nlp.util.CoreMap>);0.8724846839904785
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAuxiliaryTreeErrors();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.process.AmericanizeTest.testAmericanize();edu.stanford.nlp.process.Americanize.americanize(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithoutEol();edu.stanford.nlp.io.IOUtils.getLineIterable(java.io.Reader, int, boolean);1.0
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithoutEol();edu.stanford.nlp.io.IOUtils.closeIgnoringExceptions(java.io.Closeable);0.8304517269134521
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.AbstractCounter.incrementCount(E);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.incrementCount(E);0.9864861369132996
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.incrementCount(E);0.980403482913971
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.remove(E);0.9087012410163879
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.totalCount();0.8778300285339355
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.containsKey(E);0.8417959809303284
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.decrementCount(E, double);0.8358927965164185
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.AbstractCounter.decrementCount(E, double);0.8290359377861023
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.getCount(java.lang.Object);0.8273740410804749
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.remove(E);0.8091590404510498
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.getCount(java.lang.Object);0.8069618940353394
edu.stanford.nlp.trees.TreebankLanguagePackTest.testBasicCategory();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.basicCategory(java.lang.String);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.put(K[], V);0.9056687355041504
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.Match.toString();0.8978446125984192
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findAllMatches(K[]);0.8009713888168335
edu.stanford.nlp.pipeline.RelationExtractorAnnotatorTest.testModelName();edu.stanford.nlp.pipeline.RelationExtractorAnnotator.getModelName(java.util.Properties);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.getRelation(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.getRelationFlags(edu.stanford.nlp.util.Interval<E>);0.9602165818214417
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.toInterval(E, E);0.8570758700370789
edu.stanford.nlp.util.IterablesTest.testMerge();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V>, java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.util.SetsTest.testCross();edu.stanford.nlp.util.Sets.cross(java.util.Set<E>, java.util.Set<F>);1.0
edu.stanford.nlp.pipeline.RelationExtractorAnnotatorTest.testVerbose();edu.stanford.nlp.pipeline.RelationExtractorAnnotator.getVerbose(java.util.Properties);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testgetSubListIndex();edu.stanford.nlp.util.ArrayUtils.getSubListIndex(java.lang.Object[], java.lang.Object[]);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.keySet();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.size();0.986842155456543
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.containsKey(java.lang.Object);0.9500000476837158
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.get(K[]);0.9236842393875122
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.toFormattedString();0.9235293865203857
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.remove(K[]);0.9052631258964539
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.entrySet();0.8999999761581421
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.putAll(java.util.Map<? extends java.lang.Iterable<K>, ? extends V>);0.8605263233184814
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.<init>();0.8386468887329102
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.concurrent.SynchronizedInterner.globalIntern(T);0.9999999403953552
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.Interner.getGlobal();0.8607513308525085
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.concurrent.SynchronizedInterner.getGlobal();0.8220061659812927
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getAllEdges();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.edgeIterator();0.9970036745071411
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.9656437039375305
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.8934341073036194
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.EdgeIterator.remove();0.8626263737678528
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.equals(java.lang.Object);0.8404493927955627
edu.stanford.nlp.util.LazyTest.testOfCalledOnlyOnce();edu.stanford.nlp.util.Lazy.of(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testOfCalledOnlyOnce();edu.stanford.nlp.util.Lazy.getIfDefined();0.9384788870811462
edu.stanford.nlp.util.LazyTest.testOfCalledOnlyOnce();edu.stanford.nlp.util.Lazy.simulateGC();0.8681818246841431
edu.stanford.nlp.util.LazyTest.testOfCalledOnlyOnce();edu.stanford.nlp.util.Lazy.get();0.8248425126075745
edu.stanford.nlp.util.LazyTest.testCachedGC();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testLoadCollection();edu.stanford.nlp.util.CollectionUtils.loadCollection(java.io.File, java.lang.Class<T>, java.util.Collection<T>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testLoadCollection();edu.stanford.nlp.util.CollectionUtils.loadCollection(java.lang.String, java.lang.Class<T>, java.util.Collection<T>);0.9375
edu.stanford.nlp.util.ArrayCoreMapTest.testNoHanging();edu.stanford.nlp.util.ArrayCoreMap.toString();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testNoHanging();edu.stanford.nlp.util.ArrayCoreMap.hashCode();0.820991039276123
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoopEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoopEquals();edu.stanford.nlp.util.ArrayCoreMap.hashCode();0.8218364715576172
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.toString();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.hashCode();0.9788972735404968
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9075359106063843
edu.stanford.nlp.stats.CountersTest.testSerialization();edu.stanford.nlp.stats.ClassicCounter.equals(java.lang.Object);0.9999999403953552
edu.stanford.nlp.process.PTBTokenizerTest.testUntok();edu.stanford.nlp.process.PTBTokenizer.ptb2Text(java.lang.String);1.0
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();edu.stanford.nlp.stats.IntCounter.entrySet();1.0
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();edu.stanford.nlp.stats.ClassicCounter.entrySet();0.9249985218048096
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>, boolean, boolean);0.9948948621749878
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparatorDescending(edu.stanford.nlp.stats.Counter<E>);0.8839138746261597
edu.stanford.nlp.util.LazyTest.testCachedCalledOnlyOnce();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testCachedCalledOnlyOnce();edu.stanford.nlp.util.Lazy.getIfDefined();0.9022793769836426
edu.stanford.nlp.util.LazyTest.testOf();edu.stanford.nlp.util.Lazy.of(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testCached();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testFrom();edu.stanford.nlp.util.Lazy.from(E);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getIndex(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getSize();0.9946545958518982
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.<init>();0.9265589714050293
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getTag(int);0.925165057182312
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.isClosed(java.lang.String);0.925165057182312
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.read(java.lang.String);0.8741745948791504
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.save(java.lang.String, java.util.Map<java.lang.String, java.util.Set<java.lang.String>>);0.8741745948791504
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.markClosed(java.lang.String);0.8518269062042236
edu.stanford.nlp.semgraph.SemanticGraphTest.testIsAncestor();edu.stanford.nlp.semgraph.SemanticGraph.isAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetPathToRoot();edu.stanford.nlp.semgraph.SemanticGraph.getPathToRoot(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetSiblings();edu.stanford.nlp.semgraph.SemanticGraph.getSiblings(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetCommonAncestor();edu.stanford.nlp.semgraph.SemanticGraph.getCommonAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testCommonAncestor();edu.stanford.nlp.semgraph.SemanticGraph.commonAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testNoPrefixIO();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2IOBES();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2IOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1NoPrefix();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBESIOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2BILOU();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IOB2();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IO();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testBILOUIOBES();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.util.MetaClassTest.testCastSimple();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastCollection();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastRegression();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastFromString();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastEnum();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastMap();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastArray();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastStream();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastStringArray();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.containsKey(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.size();0.9639303684234619
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.values();0.9473834037780762
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.allValues();0.9265263080596924
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.isEmpty();0.8995879292488098
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.get(java.lang.Object);0.8967859745025635
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.entrySet();0.8943336009979248
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.keySet();0.889755368232727
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.clear();0.8443647623062134
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.removeAll(java.util.Collection<K>);0.8326696753501892
edu.stanford.nlp.naturalli.UtilTest.extractNERNoNER();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.dcoref.RulesTest.testIsAcronym();edu.stanford.nlp.dcoref.Rules.isAcronym(java.util.List<edu.stanford.nlp.ling.CoreLabel>, java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.deltaDecode(byte[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.deltaEncode(int[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);0.9196813106536865
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToChar();edu.stanford.nlp.util.ConvertByteArray.byteArrToChar(byte[], int);1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.hasNext();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.iterator();0.9622340202331543
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.next();0.841067910194397
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();0.8242087364196777
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.hasNext();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.iterator();0.9444883465766907
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.next();0.8600141406059265
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();0.8427751064300537
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(byte[], int, long[], int, int);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.edgeIterable();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.incomingEdgeIterable(V);0.9552661180496216
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.outgoingEdgeIterable(V);0.8832147121429443
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.getEdges(V, V);0.8779126405715942
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.8636994361877441
edu.stanford.nlp.graph.DirectedMultiGraphTest.testLoops();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testLoops();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.8170861005783081
edu.stanford.nlp.graph.DirectedMultiGraphTest.testLoops();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.8069380521774292
edu.stanford.nlp.neural.NeuralUtilsTest.testCosine();edu.stanford.nlp.neural.NeuralUtils.cosine(org.ejml.simple.SimpleMatrix, org.ejml.simple.SimpleMatrix);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(boolean[]);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File, java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File, java.util.regex.Pattern);1.0
edu.stanford.nlp.util.ComparatorsTest.testArrayComparator();edu.stanford.nlp.util.Comparators.getArrayComparator();1.0
edu.stanford.nlp.naturalli.OperatorTest.testValuesOrderedDesc();edu.stanford.nlp.naturalli.Operator.values();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.iterator();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.valueIterator();0.9029377698898315
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.size();0.8364172577857971
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.hashCode();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9725855588912964
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.9700781106948853
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);0.9449898600578308
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.<init>(edu.stanford.nlp.util.ArrayCoreMap);0.8640533685684204
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.ling.CoreLabel.setWord(java.lang.String);0.8154612183570862
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.<init>(edu.stanford.nlp.util.ArrayCoreMap);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9071052670478821
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.size();0.8867756128311157
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.875778079032898
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.8463296890258789
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.844528079032898
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);0.8314957618713379
edu.stanford.nlp.process.MorphologyTest.testDash();edu.stanford.nlp.process.Morphology.stem(java.lang.String);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testAddAll();edu.stanford.nlp.util.TwoDimensionalMap.addAll(edu.stanford.nlp.util.TwoDimensionalMap<? extends K1, ? extends K2, ? extends V2>, java.util.function.Function<V2, V>);1.0
edu.stanford.nlp.ling.SentenceTest.testTaggedWordListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean);0.9999999403953552
edu.stanford.nlp.ling.SentenceTest.testTaggedWordListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean, java.lang.String);0.9999999403953552
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[]);1.0
edu.stanford.nlp.util.IterableIteratorTest.testBasic();edu.stanford.nlp.util.IterableIterator.hasNext();1.0
edu.stanford.nlp.util.CoreMapsTest.testMaps();edu.stanford.nlp.util.CoreMaps.asMap(COLL, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<V>>);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>(edu.stanford.nlp.util.CollectionValuedMap<K, V>);0.8998039960861206
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>();0.8796573281288147
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean);0.8712273836135864
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean, java.util.Map<K, java.util.Collection<V>>);0.8712273836135864
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.addAll(java.util.Map<K, V>);0.870360255241394
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.add(K, V);0.8652773499488831
edu.stanford.nlp.util.CollectionValuedMapTest.testAddRemove();edu.stanford.nlp.util.CollectionValuedMap.remove(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testAddRemove();edu.stanford.nlp.util.CollectionValuedMap.add(K, V);0.8911052942276001
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDouble();edu.stanford.nlp.util.ConvertByteArray.byteArrToDouble(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLong();edu.stanford.nlp.util.ConvertByteArray.byteArrToLong(byte[], int);1.0
edu.stanford.nlp.naturalli.PolarityTest.equals();edu.stanford.nlp.naturalli.Polarity.equals(java.lang.Object);1.0
edu.stanford.nlp.naturalli.PolarityTest.equalsString();edu.stanford.nlp.naturalli.Polarity.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testMaxIndex();edu.stanford.nlp.util.CollectionUtils.maxIndex(java.util.List<T>);1.0
edu.stanford.nlp.util.StringUtilsTest.testCSV();edu.stanford.nlp.util.StringUtils.splitOnCharWithQuoting(java.lang.String, char, char, char);1.0
edu.stanford.nlp.tagger.maxent.ExtractorTest.testGetParenthesizedArg();edu.stanford.nlp.tagger.maxent.Extractor.getParenthesizedArg(java.lang.String, int);1.0
edu.stanford.nlp.tagger.maxent.ExtractorTest.testGetParenthesizedArg();edu.stanford.nlp.tagger.maxent.Extractor.getParenthesizedNum(java.lang.String, int);0.8453947305679321
edu.stanford.nlp.util.ArrayMapTest.testValues();edu.stanford.nlp.util.ArrayMap.entrySet();1.0
edu.stanford.nlp.util.ArrayMapTest.testValues();edu.stanford.nlp.util.ArrayMap.Entry.getValue();0.8621953725814819
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.put(K, V);1.0
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.clear();0.965681791305542
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.size();0.9310636520385742
edu.stanford.nlp.util.ArrayMapTest.testPutAll();edu.stanford.nlp.util.ArrayMap.put(K, V);1.0
edu.stanford.nlp.util.ArrayMapTest.testPutAll();edu.stanford.nlp.util.ArrayMap.isEmpty();0.8912540078163147
edu.stanford.nlp.util.ArrayMapTest.testEquals();edu.stanford.nlp.util.ArrayMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayMapTest.testEntrySet();edu.stanford.nlp.util.ArrayMap.entrySet();1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.9795928001403809
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File);0.8999176025390625
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File);0.8954964876174927
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetExists();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.8524171113967896
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.9849115014076233
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.9376522898674011
edu.stanford.nlp.io.IOUtilsTest.testTail();edu.stanford.nlp.io.IOUtils.tail(java.io.File, int);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);0.9668741226196289
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.9199851751327515
edu.stanford.nlp.io.IOUtilsTest.testCpRecursive();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpRecursive();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.9677858948707581
edu.stanford.nlp.io.IOUtilsTest.testCpRecursive();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.9467613697052002
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.9369201064109802
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File);0.9047017693519592
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[], int, boolean[], int, int);1.0
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.IntCounter.defaultReturnValue();1.0
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.ClassicCounter.defaultReturnValue();0.9357348680496216
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.IntCounter.setDefaultReturnValue(double);0.8743436336517334
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.next();1.0
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.<init>(java.io.Reader, java.util.function.Function<java.lang.String, X>);0.9444444179534912
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.setNext();0.9101731777191162
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.hasNext();0.8474025726318359
edu.stanford.nlp.time.SUTimeTest.parseDateTimeStandardInstantFormat();edu.stanford.nlp.time.SUTime.parseDateTime(java.lang.String, boolean);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someInsertionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someDeletionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyDeletion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.conjOrPeculiarities();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.conjOrPeculiarities();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String, boolean);0.9946327805519104
edu.stanford.nlp.dcoref.RulesTest.testMentionMatchesSpeakerAnnotation();edu.stanford.nlp.dcoref.Rules.antecedentMatchesMentionSpeakerAnnotation(edu.stanford.nlp.dcoref.Mention, edu.stanford.nlp.dcoref.Mention);1.0
edu.stanford.nlp.ie.ClassifierCombinerTest.testCombination();edu.stanford.nlp.ie.ClassifierCombiner.mergeTwoDocuments(java.util.List<INN>, java.util.List<INN>, java.util.Set<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.ie.ClassifierCombinerTest.testCombination();edu.stanford.nlp.ie.ClassifierCombiner.CombinationMode.<init>();0.8651447296142578
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.sequences.SeqClassifierFlags.<init>();0.9999999403953552
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.9911872148513794
edu.stanford.nlp.util.ArrayCoreMapTest.testToShortString();edu.stanford.nlp.util.ArrayCoreMap.toShortString(char, java.lang.String[]);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testToShortString();edu.stanford.nlp.util.ArrayCoreMap.toShortString(java.lang.String[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteCharToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeCharToByteArr(byte[], int, char);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testKeySet();edu.stanford.nlp.util.ArrayCoreMap.keySet();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testKeySet();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8101146221160889
edu.stanford.nlp.util.CoreMapTest.testCoreMap();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.CoreMapTest.testCoreMap();edu.stanford.nlp.util.ArrayCoreMap.containsKey(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8025893568992615
edu.stanford.nlp.tagger.maxent.TTagsTest.testPreservesString();edu.stanford.nlp.tagger.maxent.TTags.getTag(int);1.0
edu.stanford.nlp.util.IterableIteratorTest.testSpliteratorInParallel();edu.stanford.nlp.util.IterableIterator.spliterator();1.0
edu.stanford.nlp.util.IterableIteratorTest.testSpliteratorInSequence();edu.stanford.nlp.util.IterableIterator.spliterator();1.0
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.IntCounter.setCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.ClassicCounter.setCount(E, double);0.9156076908111572
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.IntCounter.totalCount();0.822792112827301
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.IntCounter.getCount(java.lang.Object);0.8171752095222473
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.ClassicCounter.logIncrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.AbstractCounter.logIncrementCount(E, double);0.9857309460639954
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.IntCounter.totalCount();0.887851357460022
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.ClassicCounter.totalCount();0.8078580498695374
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.IntCounter.incrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.AbstractCounter.incrementCount(E, double);0.9316697716712952
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.ClassicCounter.incrementCount(E, double);0.9051885604858398
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.IntCounter.totalCount();0.8120646476745605
edu.stanford.nlp.stats.CounterTestBase.testClear();edu.stanford.nlp.stats.IntCounter.clear();1.0
edu.stanford.nlp.stats.CounterTestBase.testClear();edu.stanford.nlp.stats.ClassicCounter.clear();0.9325057864189148
edu.stanford.nlp.naturalli.PolarityTest.multiplicativeTruth();edu.stanford.nlp.naturalli.Polarity.maintainsTruth(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.multiplicativeTruth();edu.stanford.nlp.naturalli.Polarity.negatesTruth(edu.stanford.nlp.naturalli.NaturalLogicRelation);0.9750498533248901
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testError();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testError();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.primeNext();0.8574993014335632
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcaatRemove();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcaatRemove();null.remove();0.842451274394989
edu.stanford.nlp.util.ComparatorsTest.testNullSafeComparator();edu.stanford.nlp.util.Comparators.nullSafeCompare(T, T);1.0
edu.stanford.nlp.util.ComparatorsTest.testNullSafeComparator();edu.stanford.nlp.util.Comparators.nullSafeNaturalComparator();0.8852380514144897
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectShift();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectShiftTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLogInplace();edu.stanford.nlp.math.ArrayMath.logInPlace(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLogInplace();edu.stanford.nlp.math.ArrayMath.expInPlace(double[]);0.9166666865348816
edu.stanford.nlp.util.IterablesTest.testSample();edu.stanford.nlp.util.Iterables.sample(java.lang.Iterable<T>, int, int, java.util.Random);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadWriteStreamFromString();edu.stanford.nlp.io.IOUtils.readStreamFromString(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadWriteStreamFromString();edu.stanford.nlp.io.IOUtils.writeStreamFromString(java.lang.String);0.885141134262085
edu.stanford.nlp.util.StringUtilsTest.testEditDistance();edu.stanford.nlp.util.StringUtils.editDistance(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.8910404443740845
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.8910404443740845
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.8910404443740845
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8837447166442871
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.9982855319976807
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9937809705734253
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.9166999459266663
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.9166999459266663
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.9166999459266663
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9107071757316589
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.9340624213218689
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.9340624213218689
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.9340624213218689
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9280696511268616
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.8844228982925415
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.8844228982925415
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.8844228982925415
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8786033391952515
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.92948317527771
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.92948317527771
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.92948317527771
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9233065843582153
edu.stanford.nlp.international.spanish.SpanishUnknownWordSignaturesTest.testHasConditionalSuffix();edu.stanford.nlp.international.spanish.SpanishUnknownWordSignatures.hasConditionalSuffix(java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testDotProduct();edu.stanford.nlp.stats.Counters.dotProduct(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.process.TransformXMLTest.testTransformXML1();edu.stanford.nlp.process.TransformXML.transformXML(java.lang.String[], java.util.function.Function<java.lang.String, T>, java.io.InputStream, java.io.Writer);1.0
edu.stanford.nlp.util.IterablesTest.testFilter();edu.stanford.nlp.util.Iterables.filter(java.lang.Iterable<T>, java.util.function.Predicate<T>);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.setMatchType(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.findTargetStringOffsets(java.lang.String, java.lang.String);0.9733868837356567
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.<init>(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);0.8017956018447876
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.setMatchType(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.findTargetStringOffsets(java.lang.String, java.lang.String);0.9965517520904541
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.<init>(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);0.8431034088134766
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.buildThreadPool(int);1.0
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.join();0.9737747311592102
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.peek();0.9673258662223816
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.<init>(int, edu.stanford.nlp.util.concurrent.ThreadsafeProcessor<I, O>, boolean);0.928632915019989
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.poll();0.8319002389907837
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.put(I);0.8093293309211731
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.CallableJob.call();0.8057908415794373
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.join();1.0
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.<init>(int, edu.stanford.nlp.util.concurrent.ThreadsafeProcessor<I, O>);0.9763336181640625
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.<init>(int, edu.stanford.nlp.util.concurrent.ThreadsafeProcessor<I, O>, boolean);0.9696969985961914
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.poll();0.939393937587738
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.buildThreadPool(int);0.9111111164093018
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.CallableJob.call();0.8805589079856873
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.put(I);0.8282828330993652
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.join(boolean);0.8030303716659546
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCoref();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsOrderPreserving();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefWithParse();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsRegexNERAfterNER();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefBeforeOpenIE();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsBasic();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.util.StringUtilsTest.testStringIsNullOrEmpty();edu.stanford.nlp.util.StringUtils.isNullOrEmpty(java.lang.String);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.8784456849098206
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8364150524139404
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertices(java.util.Collection<V>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.9384217262268066
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.919744074344635
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.9173927307128906
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8702630996704102
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.clear();0.8129843473434448
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIsNeighbor();edu.stanford.nlp.graph.DirectedMultiGraph.isNeighbor(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAdd();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.containsVertex(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.9260855913162231
edu.stanford.nlp.graph.DirectedMultiGraphTest.testGetAllVertices();edu.stanford.nlp.graph.DirectedMultiGraph.getAllVertices();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testNeighbors();edu.stanford.nlp.graph.DirectedMultiGraph.getNeighbors(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.9979358911514282
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.9941765069961548
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);0.9244678020477295
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.9167510271072388
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8969122767448425
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertices(java.util.Collection<V>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.9983420372009277
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.9924397468566895
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.9582968950271606
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.9229332804679871
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);0.9215972423553467
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.9190155267715454
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8694031238555908
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);0.8511902689933777
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.clear();0.8212287425994873
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.9502130746841431
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.graph.DirectedMultiGraph<V, E>);0.9210386276245117
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>();0.8659137487411499
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.util.MapFactory<V, java.util.Map<V, java.util.List<E>>>, edu.stanford.nlp.util.MapFactory<V, java.util.List<E>>);0.8524734377861023
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.8239409923553467
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8159276247024536
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertices(java.util.Collection<V>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.946128249168396
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.isEmpty();0.9458650946617126
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.9233505725860596
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.9202983379364014
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);0.9190820455551147
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.8891412019729614
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.8826115131378174
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.addVertex(V);0.8674333095550537
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.clear();0.813176155090332
edu.stanford.nlp.math.ArrayMathTest.testInnerProduct();edu.stanford.nlp.math.ArrayMath.innerProduct(double[], double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(char[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(char[], int, int);1.0
edu.stanford.nlp.international.spanish.SpanishUnknownWordSignaturesTest.testHasImperfectErIrSuffix();edu.stanford.nlp.international.spanish.SpanishUnknownWordSignatures.hasImperfectErIrSuffix(java.lang.String);1.0
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.objectsList();1.0
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.<init>(edu.stanford.nlp.util.Index<? extends E>);0.9215735197067261
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.<init>();0.8808290958404541
edu.stanford.nlp.math.ArrayMathTest.testExpLog();edu.stanford.nlp.math.ArrayMath.exp(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLog();edu.stanford.nlp.math.ArrayMath.log(double[]);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testSequenceSampler();edu.stanford.nlp.sequences.SequenceSampler.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testSequenceSampler();edu.stanford.nlp.sequences.SequenceSampler.<init>();0.8970339298248291
edu.stanford.nlp.math.ArrayMathTest.testNormalize();edu.stanford.nlp.math.ArrayMath.normalize(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmin();edu.stanford.nlp.math.ArrayMath.argmin(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmin();edu.stanford.nlp.math.ArrayMath.min(double[]);0.8026854991912842
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicIterator();edu.stanford.nlp.util.TwoDimensionalMap.iterator();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicIterator();edu.stanford.nlp.util.TwoDimensionalMap.size();0.8667557239532471
edu.stanford.nlp.util.TwoDimensionalMapTest.testMapFactory();edu.stanford.nlp.util.TwoDimensionalMap.put(K1, K2, V);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testMapFactory();edu.stanford.nlp.util.TwoDimensionalMap.size();0.9259609580039978
edu.stanford.nlp.util.TwoDimensionalMapTest.testMapFactory();edu.stanford.nlp.util.TwoDimensionalMap.<init>(edu.stanford.nlp.util.MapFactory<K1, java.util.Map<K2, V>>, edu.stanford.nlp.util.MapFactory<K2, V>);0.8518255949020386
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testIterator();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.iterator();1.0
edu.stanford.nlp.math.ArrayMathTest.testPairwiseSubtract();edu.stanford.nlp.math.ArrayMath.pairwiseSubtract(double[], double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[], int, int[], int, int);1.0
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testIsPunc();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.isPunc(java.lang.String);1.0
edu.stanford.nlp.util.FunctionsTest.testCompose();edu.stanford.nlp.util.Functions.compose(java.util.function.Function<T1, T2>, java.util.function.Function<? super T2, T3>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(int[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(int[], int, int);1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testIsAfter();edu.stanford.nlp.ie.pascal.ISODateInstance.isAfter(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testTr();edu.stanford.nlp.util.StringUtils.tr(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.time.SUTimeTest.testResolveDowToDay();edu.stanford.nlp.time.JodaTimeUtils.resolveDowToDay(org.joda.time.Partial);0.9999999403953552
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.spotTestJoinTable();edu.stanford.nlp.naturalli.NaturalLogicRelation.join(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.fixedIndex();edu.stanford.nlp.naturalli.NaturalLogicRelation.byFixedIndex(int);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testAsSet();edu.stanford.nlp.util.ArrayUtils.asSet(T[]);1.0
edu.stanford.nlp.util.CoreMapTest.testEquality();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.XMLUtilsTest.testStripTags();edu.stanford.nlp.util.XMLUtils.stripTags(java.io.Reader, java.util.List<java.lang.Integer>, boolean);1.0
edu.stanford.nlp.math.SloppyMathTest.testArccos();edu.stanford.nlp.math.SloppyMath.acos(double);1.0
edu.stanford.nlp.util.StringUtilsTest.testExpandEnvironmentVariables();edu.stanford.nlp.util.StringUtils.expandEnvironmentVariables(java.lang.String, java.util.Map<java.lang.String, java.lang.String>);1.0
edu.stanford.nlp.util.ReflectionLoadingTest.testOneArg();edu.stanford.nlp.util.ReflectionLoading.loadByReflection(java.lang.String, java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testInheritance();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testInheritance();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.8573822975158691
edu.stanford.nlp.util.ReflectionLoadingTest.testNoArgs();edu.stanford.nlp.util.ReflectionLoading.loadByReflection(java.lang.String, java.lang.Object[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIsSubList();edu.stanford.nlp.util.CollectionUtils.isSubList(java.util.List<T>, java.util.List<? super T>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteShortToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeShortToByteArr(byte[], int, short);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.9621551036834717
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8694745302200317
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.8661749362945557
edu.stanford.nlp.util.ArrayCoreMapTest.testRemove();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9215801954269409
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.size();0.8535170555114746
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ArrayCoreMap.size();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.8163362741470337
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.8122466802597046
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CoreMapTest.testToShorterString();edu.stanford.nlp.util.ArrayCoreMap.toShorterString(java.lang.String[]);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testSimpleEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.DeltaIndexTest.testSize();edu.stanford.nlp.util.DeltaIndex.size();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteAStringToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeAStringToByteArr(byte[], int, java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUString2();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, int);1.0
edu.stanford.nlp.util.HashIndexTest.testIndexOf();edu.stanford.nlp.util.HashIndex.indexOf(E);1.0
edu.stanford.nlp.util.DeltaIndexTest.testIndex();edu.stanford.nlp.util.DeltaIndex.indexOf(E);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testPreservesIndex();edu.stanford.nlp.tagger.maxent.TTags.getIndex(java.lang.String);1.0
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSubsumesArray();edu.stanford.nlp.patterns.surface.SurfacePattern.subsumesArray(java.lang.Object[], java.lang.Object[]);1.0
edu.stanford.nlp.util.ComparatorsTest.testListComparator();edu.stanford.nlp.util.Comparators.getListComparator();1.0
edu.stanford.nlp.util.ComparatorsTest.testListComparator();edu.stanford.nlp.util.Comparators.compareLists(java.util.List<? extends X>, java.util.List<? extends X>);0.9662414789199829
edu.stanford.nlp.machinereading.structure.SpanTest.testUnion();edu.stanford.nlp.ie.machinereading.structure.Span.union(edu.stanford.nlp.ie.machinereading.structure.Span, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testSanitizeJSONString();edu.stanford.nlp.util.StringUtils.escapeJsonString(java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testEscapeJsonString();edu.stanford.nlp.util.StringUtils.escapeJsonString(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectBinaryTransition();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectBinaryTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testClosed();edu.stanford.nlp.tagger.maxent.TTags.isClosed(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testClosed();edu.stanford.nlp.tagger.maxent.TTags.markClosed(java.lang.String);0.8666666746139526
edu.stanford.nlp.tagger.maxent.TTagsTest.testCanCount();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testCanCount();edu.stanford.nlp.tagger.maxent.TTags.getSize();0.9621496200561523
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testParseDouble();edu.stanford.nlp.math.SloppyMath.parseDouble(boolean, long, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testNorm_inf();edu.stanford.nlp.math.ArrayMath.norm_inf(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmax();edu.stanford.nlp.math.ArrayMath.argmax(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmax();edu.stanford.nlp.math.ArrayMath.max(double[]);0.8125
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.hasNext();1.0
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.defaultDelimitRegExIterator(java.io.Reader, java.lang.String);0.953889787197113
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.next();0.9312899112701416
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, T>);0.8104380965232849
edu.stanford.nlp.util.HashIndexTest.testGet();edu.stanford.nlp.util.HashIndex.get(int);1.0
edu.stanford.nlp.util.DeltaIndexTest.testGet();edu.stanford.nlp.util.DeltaIndex.get(int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testToList();edu.stanford.nlp.util.CollectionUtils.toList(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testToSet();edu.stanford.nlp.util.CollectionUtils.toSet(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testObjects();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.objects(int[]);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.isNeighbor(V, V);0.9967879056930542
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getEdges(V, V);0.9593832492828369
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getNeighbors(V);0.944124698638916
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getParents(V);0.8436861038208008
edu.stanford.nlp.graph.DirectedMultiGraphTest.testConnectedComponents();edu.stanford.nlp.graph.DirectedMultiGraph.getConnectedComponents();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(byte[], int, short[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(byte[], int, float[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.safeMean(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.sum(double[]);0.8969792127609253
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.filterNaNAndInfinite(double[]);0.8163644671440125
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(float[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testHasNaN();edu.stanford.nlp.math.ArrayMath.hasNaN(double[]);1.0
edu.stanford.nlp.naturalli.PolarityTest.antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.additiveProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.additive_antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.noneProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.multiplicative_antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.upwardDownward();edu.stanford.nlp.naturalli.Polarity.isDownwards();1.0
edu.stanford.nlp.naturalli.PolarityTest.upwardDownward();edu.stanford.nlp.naturalli.Polarity.isUpwards();0.9282699823379517
edu.stanford.nlp.math.ArrayMathTest.testFliterInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterInfinite();edu.stanford.nlp.math.ArrayMath.filterInfinite(double[]);0.9945077300071716
edu.stanford.nlp.math.ArrayMathTest.testFliterInfinite();edu.stanford.nlp.math.ArrayMath.numRows(double[]);0.8013530373573303
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.filterNaNAndInfinite(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);0.9592079520225525
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);0.8848714828491211
edu.stanford.nlp.util.StringUtilsTest.testGetBaseName();edu.stanford.nlp.util.StringUtils.getBaseName(java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testGetBaseName();edu.stanford.nlp.util.StringUtils.getBaseName(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.MapsTest.testAddAllWithFunction();edu.stanford.nlp.util.Maps.addAll(java.util.Map<K, V1>, java.util.Map<K, V2>, java.util.function.Function<V2, V1>);1.0
edu.stanford.nlp.util.BeamTest.testSize();edu.stanford.nlp.util.Beam.size();1.0
edu.stanford.nlp.util.IterablesTest.testZip();edu.stanford.nlp.util.Iterables.zip(T1[], T2[]);1.0
edu.stanford.nlp.util.IterablesTest.testZip();edu.stanford.nlp.util.Iterables.zip(java.util.Iterator<T1>, java.util.Iterator<T2>);0.9929388761520386
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmptyIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatMultiIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatSingleIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.stats.CountersTest.testMin();edu.stanford.nlp.stats.Counters.min(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteFloatToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeFloatToByteArr(byte[], int, float);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr4();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteIntToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeIntToByteArr(byte[], int, int);1.0
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.pop();1.0
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.peek();0.9791666865348816
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.<init>(edu.stanford.nlp.util.TreeShapedStack<T>, T, int);0.9535395503044128
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.push(T);0.935764729976654
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.<init>();0.8702062368392944
edu.stanford.nlp.util.TreeShapedStackTest.testEquals();edu.stanford.nlp.util.TreeShapedStack.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayMapTest.testClear();edu.stanford.nlp.util.ArrayMap.clear();1.0
edu.stanford.nlp.process.LexerUtilsTest.testIndexOfRegex();edu.stanford.nlp.process.LexerUtils.indexOfRegex(java.util.regex.Pattern, java.lang.String);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testStripCorp();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testFilterStopWords();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testBasic();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testIndexOf();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.indexOf(E);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testToArray();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.contains(java.lang.Object);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testToArray();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.objectsList();0.8327921628952026
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testTotalCount();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAString1();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[]);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.removeZeroDegreeNodes();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.9243184328079224
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.8938884735107422
edu.stanford.nlp.graph.DirectedMultiGraphTest.testForm();edu.stanford.nlp.graph.DirectedMultiGraph.toString();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testForm();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.9024603366851807
edu.stanford.nlp.graph.DirectedMultiGraphTest.testForm();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.8810766339302063
edu.stanford.nlp.util.SetsTest.testPowerset();edu.stanford.nlp.util.Sets.powerSet(java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testIntersection();edu.stanford.nlp.util.Sets.intersection(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testDiff();edu.stanford.nlp.util.Sets.diff(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testUnion();edu.stanford.nlp.util.Sets.union(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaN();edu.stanford.nlp.math.ArrayMath.filterNaN(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaN();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);0.9442067742347717
edu.stanford.nlp.math.ArrayMathTest.testFliterNaN();edu.stanford.nlp.math.ArrayMath.numRows(double[]);0.8161469101905823
edu.stanford.nlp.optimization.GoldenSectionLineSearchTest.testEasy();edu.stanford.nlp.optimization.GoldenSectionLineSearch.minimize(java.util.function.DoubleUnaryOperator);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(float[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[]);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testGet();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.get(int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(short[]);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(double, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(float, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(int, int);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testRemoveAt();edu.stanford.nlp.util.ArrayUtils.removeAt(java.lang.Object[], int);1.0
edu.stanford.nlp.util.StringUtilsTest.testDecodeArray();edu.stanford.nlp.util.StringUtils.decodeArray(java.lang.String);1.0
edu.stanford.nlp.math.ArrayMathTest.test2dAdd();edu.stanford.nlp.math.ArrayMath.addInPlace(double[][], double[][]);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testTimeNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedTimeString(java.lang.String, edu.stanford.nlp.time.Timex);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[], int, char[], int, int);1.0
edu.stanford.nlp.util.StringUtilsTest.testRegexGroups();edu.stanford.nlp.util.StringUtils.regexGroups(java.util.regex.Pattern, java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteUStringToByteArr2();edu.stanford.nlp.util.ConvertByteArray.writeUStringToByteArr(byte[], int, java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testPow();edu.stanford.nlp.math.ArrayMath.pow(double[], double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShort();edu.stanford.nlp.util.ConvertByteArray.byteArrToShort(byte[], int);1.0
edu.stanford.nlp.math.ArrayMathTest.testAddInPlace();edu.stanford.nlp.math.ArrayMath.addInPlace(double[], double);1.0
edu.stanford.nlp.util.XMLUtilsTest.testXMLTag();edu.stanford.nlp.util.XMLUtils.findSpace(java.lang.String, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(java.lang.String[]);1.0
edu.stanford.nlp.tagger.maxent.ExtractorFramesRareTest.testAllNumeric();edu.stanford.nlp.tagger.maxent.RareExtractor.allNumeric(java.lang.String);1.0
edu.stanford.nlp.math.ArrayMathTest.testKLDivergence();edu.stanford.nlp.math.ArrayMath.klDivergence(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSumAndMean();edu.stanford.nlp.math.ArrayMath.mean(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSumAndMean();edu.stanford.nlp.math.ArrayMath.sum(double[]);0.878528356552124
edu.stanford.nlp.math.ArrayMathTest.testJensenShannon();edu.stanford.nlp.math.ArrayMath.jensenShannonDivergence(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSum();edu.stanford.nlp.math.ArrayMath.sum(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(java.lang.String[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testCountNaN();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloat();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloat(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[], int, long[], int, int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testContainsAny();edu.stanford.nlp.util.CollectionUtils.containsAny(java.util.Collection<T>, java.util.Collection<T>);1.0
edu.stanford.nlp.neural.NeuralUtilsTest.testIsZero();edu.stanford.nlp.neural.NeuralUtils.isZero(org.ejml.simple.SimpleMatrix);1.0
edu.stanford.nlp.stats.CountersTest.testArgmin();edu.stanford.nlp.stats.Counters.argmin(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.util.HashIndexTest.testIterator();edu.stanford.nlp.util.HashIndex.iterator();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(double[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(short[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testRound2();edu.stanford.nlp.math.SloppyMath.round(double, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testRound1();edu.stanford.nlp.math.SloppyMath.round(double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testStringAToByteArr1();edu.stanford.nlp.util.ConvertByteArray.stringUToByteArr(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteDoubleToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeDoubleToByteArr(byte[], int, double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(long[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(long[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmpty();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testLogSum();edu.stanford.nlp.math.ArrayMath.logSum(double[]);1.0
edu.stanford.nlp.util.HashIndexTest.testToArray();edu.stanford.nlp.util.HashIndex.objectsList();1.0
edu.stanford.nlp.util.ArrayUtilsTest.testEqualContentsInt();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteLongToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeLongToByteArr(byte[], int, long);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[]);1.0
edu.stanford.nlp.math.SloppyMathTest.testIsVeryDangerous();edu.stanford.nlp.math.SloppyMath.isDangerous(double);1.0
edu.stanford.nlp.math.SloppyMathTest.testIsDangerous();edu.stanford.nlp.math.SloppyMath.isDangerous(double);1.0
edu.stanford.nlp.math.ArrayMathTest.testMultiplyInPlace();edu.stanford.nlp.math.ArrayMath.multiplyInPlace(double[], double);1.0
edu.stanford.nlp.math.SloppyMathTest.testPythonMod();edu.stanford.nlp.math.SloppyMath.pythonMod(int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testPowInPlace();edu.stanford.nlp.math.ArrayMath.powInPlace(double[], double);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testGetIndex();edu.stanford.nlp.util.CollectionUtils.getIndex(java.util.List<T>, T, int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testGetNGrams();edu.stanford.nlp.util.CollectionUtils.getNGrams(java.util.List<T>, int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testMin();edu.stanford.nlp.math.SloppyMath.min(int, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.HashIndexTest.testSize();edu.stanford.nlp.util.HashIndex.size();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(byte[], int, boolean[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAString2();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testMax();edu.stanford.nlp.math.SloppyMath.max(int, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteUStringToByteArr1();edu.stanford.nlp.util.ConvertByteArray.writeUStringToByteArr(byte[], int, java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(byte[], int, double[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[], int, float[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testParseInt();edu.stanford.nlp.math.SloppyMath.parseInt(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[], int, double[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testCountInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[], int, int);1.0
edu.stanford.nlp.util.StringUtilsTest.testSplitOnChar();edu.stanford.nlp.util.StringUtils.splitOnChar(java.lang.String, char);1.0
edu.stanford.nlp.util.StringUtilsTest.testGetCharacterNgrams();edu.stanford.nlp.util.StringUtils.getCharacterNgrams(java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBoolean();edu.stanford.nlp.util.ConvertByteArray.byteArrToBoolean(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testStringAToByteArr2();edu.stanford.nlp.util.ConvertByteArray.stringAToByteArr(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testRealSentenceDoubleEscaped();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayQuote();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testRealSentence();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayEscape();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayTrivial();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testSorted();edu.stanford.nlp.util.CollectionUtils.sorted(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(boolean[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUString1();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testAdd();edu.stanford.nlp.math.ArrayMath.add(double[], double);1.0
edu.stanford.nlp.math.ArrayMathTest.testPairwiseAdd();edu.stanford.nlp.math.ArrayMath.pairwiseAdd(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testNumRows();edu.stanford.nlp.math.ArrayMath.numRows(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testMultiply();edu.stanford.nlp.math.ArrayMath.multiply(double[], double);1.0
edu.stanford.nlp.math.SloppyMathTest.testLogAdd();edu.stanford.nlp.math.SloppyMath.logAdd(double, double);1.0
edu.stanford.nlp.util.StringUtilsTest.testValueSplit();edu.stanford.nlp.util.StringUtils.valueSplit(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSameness();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testUniqueness();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);0.9999999403953552
edu.stanford.nlp.tagger.maxent.TTagsTest.testHoldsLotsOfStuff();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testUnescape();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTree.unescape(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(byte[], int, int[], int, int);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testSize();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.size();1.0
edu.stanford.nlp.util.StringUtilsTest.testNormalize();edu.stanford.nlp.util.StringUtils.normalize(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[], int, short[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteBooleanToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeBooleanToByteArr(byte[], int, boolean);1.0
edu.stanford.nlp.math.ArrayMathTest.testHasInfinite();edu.stanford.nlp.math.ArrayMath.hasInfinite(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToInt();edu.stanford.nlp.util.ConvertByteArray.byteArrToInt(byte[], int);1.0
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testHasPunc();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.hasPunc(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.entailmentState();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testNamePattern();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.runNamePatternFalse(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testNamePattern();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.runNamePatternTrue(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testNodePattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testVariablePattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testRegexPattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.util.DeltaMapTest.testOriginalPreserved();edu.stanford.nlp.util.DeltaMap.get(java.lang.Object);1.0
