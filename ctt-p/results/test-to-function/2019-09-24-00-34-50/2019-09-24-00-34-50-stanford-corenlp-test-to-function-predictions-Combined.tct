test-class;tested-class;score
edu.stanford.nlp.trees.UniversalEnglishGrammaticalStructureTest.doTest();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9202039837837219
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertDelete();edu.stanford.nlp.util.Pair.<init>(T1, T2);0.8540293574333191
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.9385250806808472
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.9351896643638611
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationTags();0.9203682541847229
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8844738602638245
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationWords();0.879338264465332
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.evalBIgnoredPunctuationTags();0.854949414730072
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.Trees.setLeafTagsIfUnset(edu.stanford.nlp.trees.Tree);0.8343476057052612
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.ling.CoreLabel.factory();0.8181605935096741
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.Tree.isPreTerminal();0.8176926374435425
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.startSymbols();0.8108809590339661
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCCprocessed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9044561386108398
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.9037622809410095
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.Tree.isPreTerminal();0.8606263995170593
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8511478900909424
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationTags();0.8509778380393982
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.TreeGraphNode.percolateHeads(edu.stanford.nlp.trees.HeadFinder);0.8182882070541382
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCCProcessedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationWords();0.801227331161499
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.<init>();0.9042211174964905
edu.stanford.nlp.trees.QPTreeTransformerTest.testCompoundModifiers();edu.stanford.nlp.trees.QPTreeTransformer.QPtransform(edu.stanford.nlp.trees.Tree);0.8938089609146118
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9064324498176575
edu.stanford.nlp.trees.tregex.TregexTest.testParenthesizedExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8722134232521057
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceNode();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8037114143371582
edu.stanford.nlp.trees.tregex.TregexTest.testLink();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testLink();edu.stanford.nlp.trees.Tree.toString();0.8291375041007996
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCCprocessed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);1.0
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCollapsed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9632636308670044
edu.stanford.nlp.trees.GrammaticalStructureTest.testEnglishDependenciesByTree();edu.stanford.nlp.trees.GrammaticalStructure.typedDependencies(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.9159532189369202
edu.stanford.nlp.trees.tregex.TregexTest.testHeadOfPhrase();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);0.984538197517395
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.ChineseEmptyFilter.<init>();0.984538197517395
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.TreeTransformer.apply(edu.stanford.nlp.trees.Tree);0.8326380848884583
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.8236904144287109
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testFixSplitElement();edu.stanford.nlp.trees.Tree.toString();0.8065430521965027
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testImmediateSister();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.8877570629119873
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.TreeGraphNode.percolateHeads(edu.stanford.nlp.trees.HeadFinder);0.9576907157897949
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.9250648617744446
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.allTypedDependencies();0.9080783128738403
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.sentenceFinalPunctuationTags();0.8836415410041809
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8727967143058777
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.children();0.8613380789756775
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.84311443567276
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationTags();0.8413106203079224
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.evalBIgnoredPunctuationTags();0.821728527545929
edu.stanford.nlp.trees.tregex.TregexTest.testComplex();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.CoordinationTransformerTest.testMoveRB();edu.stanford.nlp.trees.CoordinationTransformer.moveRB(edu.stanford.nlp.trees.Tree);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.TreeGraphNode.percolateHeads(edu.stanford.nlp.trees.HeadFinder);0.9398207068443298
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.892292857170105
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8797235488891602
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.8696671724319458
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.trees.GrammaticalStructure.allTypedDependencies();0.8643757700920105
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.util.Generics.newHashSet(java.util.Collection<? extends E>);0.8636988401412964
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.util.Filters.collectionAcceptFilter(E[]);0.8590241074562073
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.util.Generics.newHashSet();0.8532083630561829
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testNonCollapsedSeparator();edu.stanford.nlp.util.MapFactory.hashMapFactory();0.8208732604980469
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.9389035105705261
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.evalBIgnoredPunctuationTags();0.8533170819282532
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8517847061157227
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testMoreBasicRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8421022295951843
edu.stanford.nlp.trees.tregex.TregexTest.testComplex2();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testMonthDayYear();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsertWithNamedNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.CoordinationTransformer.<init>(edu.stanford.nlp.trees.HeadFinder);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.EnglishGrammaticalStructure.<init>(edu.stanford.nlp.trees.Tree, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.trees.HeadFinder);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.SemanticHeadFinder.<init>(boolean);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.SemanticHeadFinder.<init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean);0.9999999403953552
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.9941796064376831
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationTags();0.9931273460388184
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.9889453053474426
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.TreeGraphNode.percolateHeads(edu.stanford.nlp.trees.HeadFinder);0.9860072731971741
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.9832015037536621
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationWords();0.980549693107605
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.Trees.setLeafTagsIfUnset(edu.stanford.nlp.trees.Tree);0.9800180792808533
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.9615709185600281
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.util.Filters.collectionAcceptFilter(E[]);0.9352145791053772
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.punctuationWordRejectFilter();0.8868503570556641
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreebankLanguagePack.sentenceFinalPunctuationTags();0.8812817335128784
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreebankLanguagePack.startSymbols();0.8788415789604187
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreeReaderFactory.<init>();0.8674196004867554
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreeReaderFactory.<init>(edu.stanford.nlp.trees.TreeFactory);0.8674196004867554
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreeReaderFactory.<init>(edu.stanford.nlp.trees.TreeFactory, edu.stanford.nlp.trees.TreeNormalizer);0.8674196004867554
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.util.Filters.acceptFilter();0.8626763820648193
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.PennTreebankLanguagePack.evalBIgnoredPunctuationTags();0.855549693107605
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.util.Generics.newHashMap();0.8472917079925537
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.Trees.setLeafLabels(edu.stanford.nlp.trees.Tree, java.util.List<edu.stanford.nlp.ling.Label>);0.8422969579696655
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.util.Generics.newHashSet(java.util.Collection<? extends E>);0.8365581631660461
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.trees.Tree.isPreTerminal();0.8306962847709656
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.util.Generics.newHashSet();0.824700117111206
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testBasicRelationsWithCopulaAsHead();edu.stanford.nlp.ling.CoreLabel.setTag(java.lang.String);0.8205534815788269
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();1.0
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationWords();0.962979257106781
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.evalBIgnoredPunctuationTags();0.940973699092865
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseSemanticHeadFinder.ruleChanges();0.9072515964508057
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.startSymbols();0.9012113213539124
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.sentenceFinalPunctuationTags();0.879266619682312
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalRelations.values();0.8562943339347839
edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalRelations.valuesLock();0.8532847762107849
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceWithRepeats();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();1.0
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationWords();0.962979257106781
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.evalBIgnoredPunctuationTags();0.940973699092865
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseSemanticHeadFinder.ruleChanges();0.9072515964508057
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.startSymbols();0.9012113213539124
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.sentenceFinalPunctuationTags();0.879266619682312
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalRelations.values();0.8562943339347839
edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalStructureTest.testBasicRelations();edu.stanford.nlp.trees.international.pennchinese.UniversalChineseGrammaticalRelations.valuesLock();0.8532847762107849
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoneyOrMore();edu.stanford.nlp.trees.QPTreeTransformer.QPtransform(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoneyOrMore();edu.stanford.nlp.trees.Tree.toString();0.8865883350372314
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoneyOrMore();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8388935923576355
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.indexNodes(edu.stanford.nlp.trees.TreeGraphNode);0.9970085620880127
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9882553219795227
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.9859759211540222
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructure.analyzeNode(edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.TreeGraphNode, java.util.Collection<edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.trees.HeadFinder, java.util.function.Predicate<java.lang.String>, java.util.function.Predicate<java.lang.String>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>, edu.stanford.nlp.graph.DirectedMultiGraph<edu.stanford.nlp.trees.TreeGraphNode, edu.stanford.nlp.trees.GrammaticalRelation>);0.8833580017089844
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();0.8703961372375488
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8602660298347473
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCopyNodes();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.8013202548027039
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.88459712266922
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.tregex.DescriptionPattern.DescriptionMatcher.getMatch();0.8365026116371155
edu.stanford.nlp.trees.tregex.TregexTest.testMoeCurlyLarry();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8093100190162659
edu.stanford.nlp.trees.tregex.TregexTest.testIthChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testFirstLastChild();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testJo�oSilva();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationTags();0.9065237641334534
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationWords();0.8656895160675049
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.8626785278320312
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.TreeGraphNode.percolateHeads(edu.stanford.nlp.trees.HeadFinder);0.8467336297035217
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.Trees.setLeafTagsIfUnset(edu.stanford.nlp.trees.Tree);0.8055771589279175
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testToBeRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.8028023838996887
edu.stanford.nlp.trees.tregex.TregexTest.testSegmentedAndEqualsExpressions();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.QPTreeTransformer.<init>();1.0
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.Tree.toString();0.9585371613502502
edu.stanford.nlp.trees.QPTreeTransformerTest.testMoney();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.833597719669342
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testLemma();edu.stanford.nlp.ling.IndexedWord.setLemma(java.lang.String);1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.SemanticHeadFinder.ruleChanges();1.0
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructureConversionUtils.dependenciesToString(edu.stanford.nlp.trees.GrammaticalStructure, java.util.Collection<edu.stanford.nlp.trees.TypedDependency>, edu.stanford.nlp.trees.Tree, boolean, boolean, boolean);0.9877503514289856
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.children();0.9588314890861511
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.TreeGraphNode.percolateHeads(edu.stanford.nlp.trees.HeadFinder);0.953199028968811
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.valuesLock();0.9443444013595581
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.EnglishGrammaticalRelations.values();0.9009121060371399
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.GrammaticalStructure.typedDependenciesCollapsed(edu.stanford.nlp.trees.GrammaticalStructure$Extras);0.8789939880371094
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.util.Filters.collectionAcceptFilter(E[]);0.8655843138694763
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.Trees.setLeafLabels(edu.stanford.nlp.trees.Tree, java.util.List<edu.stanford.nlp.ling.Label>);0.8522548079490662
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.evalBIgnoredPunctuationTags();0.8451229929924011
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationTags();0.8342649936676025
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.PennTreebankLanguagePack.sentenceFinalPunctuationTags();0.8296115398406982
edu.stanford.nlp.trees.EnglishGrammaticalStructureTest.testCollapsedRelations();edu.stanford.nlp.trees.LabeledScoredTreeNode.label();0.8231056928634644
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedingFollowingSister();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedesDescribedChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTwoChildren();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.punctuationTagRejectFilter();1.0
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.printTree(edu.stanford.nlp.trees.Tree, java.io.PrintWriter);0.972186267375946
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.Dependencies.DependentPuncTagRejectFilter.<init>(java.util.function.Predicate<java.lang.String>);0.9704645276069641
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.Dependencies.DependentPuncWordRejectFilter.<init>(java.util.function.Predicate<java.lang.String>);0.9704645276069641
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String);0.9704645276069641
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String, java.lang.String, edu.stanford.nlp.trees.TreebankLanguagePack);0.9704645276069641
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.<init>(java.lang.String, java.lang.String, edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.HeadFinder, edu.stanford.nlp.trees.HeadFinder);0.9704645276069641
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.util.Filters.collectionAcceptFilter(E[]);0.9205771088600159
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationWords();0.9151149988174438
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.generateOriginalDependencies();0.8864911794662476
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8715800046920776
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.PennTreebankLanguagePack.punctuationTags();0.8417508006095886
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.TreePrint.propertyToBoolean(java.util.Properties, java.lang.String);0.8260847926139832
edu.stanford.nlp.trees.TreePrintTest.testConll2007();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.punctuationWordRejectFilter();0.8018187284469604
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testFind();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedNode();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.8959338068962097
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.ling.CoreLabel.word();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.8970651626586914
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(boolean, java.lang.String, java.lang.String);0.8522418141365051
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.pipeline.TokenizerAnnotator.<init>(java.lang.String);0.8522418141365051
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNewVersion();edu.stanford.nlp.util.PropertiesUtils.getBool(java.util.Properties, java.lang.String, boolean);0.8223161101341248
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.ling.IndexedWord.toString();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();0.9937236905097961
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testInitialConditions();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.find();0.8055799603462219
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNumericHyphens();edu.stanford.nlp.ling.CoreLabel.toString();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNumericHyphens();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.883730947971344
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNumericHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8817284107208252
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testNumericHyphens();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8449326753616333
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testComplicatedGraph();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.patterns.surface.AnnotatedTextReaderTest.testParse();edu.stanford.nlp.patterns.surface.AnnotatedTextReader.parseFile(java.io.BufferedReader, java.util.Set<java.lang.String>, java.util.Map<java.lang.String, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>>, boolean, java.lang.String);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testTwoSentences();edu.stanford.nlp.ling.CoreLabel.toString();1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testTwoSentences();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);0.8224046230316162
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNotEquals();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getRelnString(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedRelation();edu.stanford.nlp.ling.IndexedWord.toString();0.8232824802398682
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.IndexedWord.<init>(java.lang.String, int, int);0.9313796162605286
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.<init>();0.9151841998100281
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.util.MapFactory<V, java.util.Map<V, java.util.List<E>>>, edu.stanford.nlp.util.MapFactory<V, java.util.List<E>>);0.9089273810386658
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.SemanticGraph.setRoot(edu.stanford.nlp.ling.IndexedWord);0.9030409455299377
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.ling.CoreLabel.<init>();0.8792016506195068
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8743193745613098
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.util.ArrayCoreMap.<init>();0.8651458621025085
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testPartition();edu.stanford.nlp.util.ArrayCoreMap.<init>(int);0.8610115647315979
edu.stanford.nlp.pipeline.ChunkAnnotationUtilsTest.testMergeChunks();edu.stanford.nlp.pipeline.ChunkAnnotationUtils.mergeChunks(java.util.List<edu.stanford.nlp.util.CoreMap>, java.lang.String, int, int);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedGovernor();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testReferencedRegex();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.9741511940956116
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, boolean);0.9780540466308594
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphStrategies();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);0.931560754776001
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testSimpleDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRegex();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.ling.CoreLabel.toString();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.9396496415138245
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.9024319052696228
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);0.900596022605896
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.util.Generics.newHashSet();0.8428126573562622
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.util.Timing.report();0.814672589302063
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.8112131357192993
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testHyphens();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.8009133338928223
edu.stanford.nlp.process.WordToSentenceProcessorTest.testMr();edu.stanford.nlp.ling.CoreLabel.word();1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testMr();edu.stanford.nlp.ling.CoreLabel.toString();0.8739762306213379
edu.stanford.nlp.process.WordToSentenceProcessorTest.testMr();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);0.8481260538101196
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.topologicalSort();1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testTopologicalSort();edu.stanford.nlp.semgraph.SemanticGraph.vertexListSorted();0.8539199829101562
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8038908243179321
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9836115837097168
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.ling.CoreLabel.toString();0.9821026921272278
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.9236642718315125
edu.stanford.nlp.process.WordToSentenceProcessorTest.testParagraphSeparator();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.9234700798988342
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testExactDepthRelations();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testIndex();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.SemanticGraph.setRoot(edu.stanford.nlp.ling.IndexedWord);0.9575513005256653
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testRelationType();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.8175860643386841
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNoSplitting();edu.stanford.nlp.ling.CoreLabel.toString();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testWordMatch();edu.stanford.nlp.semgraph.semgrex.NodePattern.NodeMatcher.getMatch();0.8627858757972717
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.ling.CoreLabel.toString();0.9751289486885071
edu.stanford.nlp.process.WordToSentenceProcessorTest.testNullSplitter();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.94347083568573
edu.stanford.nlp.process.WordToSentenceProcessorTest.testBlankLines();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testBlankLines();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);0.9158780574798584
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testTwoDependencies();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNodeNames();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.ling.IndexedWord.toString();0.9984129071235657
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testEqualsRelation();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.9272884130477905
edu.stanford.nlp.process.WordToSentenceProcessorTest.testEdgeCases();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testChinese();edu.stanford.nlp.process.WordToSentenceProcessor.process(java.util.List<? extends IN>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testChinese();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.8857700824737549
edu.stanford.nlp.process.WordToSentenceProcessorTest.testXmlElements();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testXmlElements();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);0.9733809232711792
edu.stanford.nlp.process.WordToSentenceProcessorTest.testXmlElements();edu.stanford.nlp.util.Generics.newHashSet(java.util.Collection<? extends E>);0.8176591992378235
edu.stanford.nlp.process.WordToSentenceProcessorTest.testRegion();edu.stanford.nlp.process.WordToSentenceProcessor.<init>(java.lang.String, java.lang.String, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>, java.lang.String, edu.stanford.nlp.process.WordToSentenceProcessor$NewlineIsSentenceBreak, edu.stanford.nlp.ling.tokensregex.SequencePattern<? super IN>, java.util.Set<java.lang.String>, boolean, boolean);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMultipleDepths();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMultipleDepths();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.8262202739715576
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedDependency();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testNamedDependency();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.8680967092514038
edu.stanford.nlp.patterns.CreatePatternsTest.test();edu.stanford.nlp.patterns.surface.CreatePatterns.CreatePatternsThread.call();1.0
edu.stanford.nlp.process.WordToSentenceProcessorTest.testExclamationPoint();edu.stanford.nlp.ling.CoreLabel.toString();1.0
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSimplerTokens();edu.stanford.nlp.patterns.surface.SurfacePattern.setToken(edu.stanford.nlp.patterns.surface.PatternToken);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSsAllyBritain();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.Annotation.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.9461659789085388
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.util.Timing.report();0.9160686731338501
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDatelineSeparation();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.8044065237045288
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama1();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.Annotation.toString();0.9873117804527283
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.util.Timing.report();0.9077585935592651
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.9046429395675659
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.util.Timing.start();0.8031991720199585
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSpanishDatelineSeparation();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8025366067886353
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.util.Timing.report();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.8808600902557373
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8400880098342896
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpWorks();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requires();0.808616042137146
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSPresidentObama2();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testUSAllyBritain();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.9156379103660583
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.util.Timing.start();0.8955540657043457
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requires();0.8729343414306641
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.util.Timing.report();0.8620771169662476
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8475860357284546
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.826557993888855
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8198232650756836
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testKbpSpanishWorks();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8083342909812927
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCompoundPossessive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAmericanActorChrisPratt();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9910236597061157
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.9691001772880554
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.9580240845680237
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.9426681399345398
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.util.Timing.start();0.9001296162605286
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.8909833431243896
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8772525787353516
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.8465757966041565
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8289321660995483
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTokenizeNLsDoesntChangeSsplitResults();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8199557662010193
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.generateOriginalDependencies();0.8447421789169312
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testSimpleSentence();edu.stanford.nlp.trees.PennTreebankLanguagePack.typedDependencyHeadFinder();0.8171426653862
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9999999403953552
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9908657670021057
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.9903935194015503
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.8555981516838074
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8508287668228149
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.8470621109008789
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.8416945338249207
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8416945338249207
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8362833261489868
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.Timing.start();0.8285262584686279
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.AnnotationPipeline.<init>();0.8002461791038513
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.AnnotationPipeline.<init>(java.util.List<edu.stanford.nlp.pipeline.Annotator>);0.8002461791038513
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(java.util.Properties);0.8002461791038513
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(java.util.Properties, boolean);0.8002461791038513
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(java.util.Properties, boolean, edu.stanford.nlp.pipeline.AnnotatorPool);0.8002461791038513
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9351522326469421
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9258384108543396
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.8969178199768066
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.8793728947639465
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.8651959896087646
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.Timing.start();0.843882143497467
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8285213708877563
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.AnnotationPipeline.<init>();0.8229330778121948
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.AnnotationPipeline.<init>(java.util.List<edu.stanford.nlp.pipeline.Annotator>);0.8229330778121948
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(java.util.Properties);0.8229330778121948
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(java.util.Properties, boolean);0.8229330778121948
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.StanfordCoreNLP.<init>(java.util.Properties, boolean, edu.stanford.nlp.pipeline.AnnotatorPool);0.8229330778121948
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.Timing.report();0.8229330778121948
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.util.Timing.<init>();0.8202216625213623
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8055000901222229
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.simple.Document.sentence(int);0.9947097897529602
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder.getTokenBuilder(int);0.9416857957839966
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder.getTokenCount();0.8885563015937805
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder.getValue();0.8573453426361084
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder.setValue(java.lang.String);0.851158082485199
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceWithSpaces();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.newBuilder();0.844698965549469
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAnnotator();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.9568027853965759
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.8439341187477112
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.8362254500389099
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testTwoNewlineIsSentenceBreakTokenizeNLs();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.8211396336555481
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testAlwaysNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.8026705384254456
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testKbpSectionMatching();edu.stanford.nlp.pipeline.Annotation.toString();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.CleanXmlAnnotator.requires();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.Timing.report();0.9979133605957031
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9515364170074463
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.9444984793663025
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.logging.Redwood.RedwoodChannels.info(java.lang.Object[]);0.9311173558235168
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.9032674431800842
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.ArraySet.iterator();0.9019900560379028
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.Timing.start();0.8958600163459778
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.util.PropertiesUtils.getBool(java.util.Properties, java.lang.String, boolean);0.8358792662620544
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.8333873748779297
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testViaCoreNlp();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8241280913352966
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8824344277381897
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testBadLanguage();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.8528261184692383
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();null.finalize();1.0
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.8506547212600708
edu.stanford.nlp.ling.SentenceTest.testTokenizedSentenceSize();edu.stanford.nlp.simple.Document.sentence(int);0.8482005596160889
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.XMLIterator.hasNext();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);0.8954677581787109
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLNoResults();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();0.8394225835800171
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);0.9999999403953552
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementInText();edu.stanford.nlp.process.DocumentPreprocessor.XMLIterator.next();0.8940136432647705
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.9561511874198914
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLBasic();edu.stanford.nlp.process.DocumentPreprocessor.XMLIterator.hasNext();0.8523585200309753
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.setElementDelimiter(java.lang.String);0.9999999403953552
edu.stanford.nlp.process.DocumentPreprocessorTest.testXMLElementNotInText();edu.stanford.nlp.process.DocumentPreprocessor.XMLIterator.next();0.8586500883102417
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.CollectionValuedMap.removeMapping(K, V);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.DeltaCollectionValuedMap.add(K, V);0.8681507110595703
edu.stanford.nlp.util.CollectionValuedMapTest.testRandomAddRemoveAndDelta();edu.stanford.nlp.util.DeltaCollectionValuedMap.removeMapping(K, V);0.8219178318977356
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(byte[], int, char[], int, int);1.0
edu.stanford.nlp.simple.SentenceTest.testCharacterOffsets();edu.stanford.nlp.simple.Sentence.characterOffsetEnd(int);1.0
edu.stanford.nlp.simple.SentenceTest.testCharacterOffsets();edu.stanford.nlp.simple.Sentence.characterOffsetBegin(int);0.949999988079071
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.setText(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testCreateFromText();edu.stanford.nlp.simple.Document.sentence(int);0.9939646124839783
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizeSplitHyphens();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.simple.SentenceTest.testOriginalText();edu.stanford.nlp.simple.Sentence.originalText(int);1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.util.Timing.report();0.9999999403953552
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9907811284065247
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9840869307518005
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.toProtoBuilder(edu.stanford.nlp.pipeline.Annotation);0.9676138758659363
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.9459010362625122
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.9392069578170776
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.8892644047737122
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.toProtoBuilder(edu.stanford.nlp.util.CoreMap);0.8827394843101501
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.85359126329422
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.StanfordCoreNLP.getDefaultAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8403106331825256
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.util.Generics.newHashSet();0.8239067196846008
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.simple.Document.sentence(int);0.8204144835472107
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.8059132099151611
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCrashCheck();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8049757480621338
edu.stanford.nlp.simple.DocumentTest.testSentences();edu.stanford.nlp.simple.Document.sentences();1.0
edu.stanford.nlp.simple.SentenceTest.testLength();edu.stanford.nlp.simple.Sentence.length();1.0
edu.stanford.nlp.simple.SentenceTest.testWeirdTokens();edu.stanford.nlp.simple.Sentence.word(int);1.0
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Sentence.sentenceTokenOffsetEnd();1.0
edu.stanford.nlp.simple.SentenceTest.testSentenceTokenOffsets();edu.stanford.nlp.simple.Sentence.sentenceTokenOffsetBegin();0.9593022465705872
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.util.Pair.first();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.semgraph.SemanticGraph.toCompactString(boolean);0.9682214856147766
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.9193841218948364
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.ling.IndexedWord.originalText();0.9053052663803101
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testMultiWords();edu.stanford.nlp.semgraph.SemanticGraph.vertexListSorted();0.833207905292511
edu.stanford.nlp.simple.SentenceTest.testText();edu.stanford.nlp.simple.Sentence.text();1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.simple.Document.sentence(int);0.9945822358131409
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder.getTokenBuilder(int);0.9843593835830688
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder.getValue();0.9275213479995728
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.newBuilder();0.8655843734741211
edu.stanford.nlp.simple.SentenceTest.testTokenizeWhitespaceSimple();edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder.setValue(java.lang.String);0.8515874147415161
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation);0.9999999403953552
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.9376858472824097
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.9083412289619446
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.util.Timing.report();0.887904942035675
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.8849862217903137
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.JSONOutputter.<init>();0.8415908217430115
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8143534660339355
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleDocument();edu.stanford.nlp.pipeline.AnnotationOutputter.<init>();0.8029645085334778
edu.stanford.nlp.simple.SentenceTest.testSentenceIndex();edu.stanford.nlp.simple.Sentence.sentenceIndex();1.0
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Document.sentence(int);0.9999999403953552
edu.stanford.nlp.simple.SentenceTest.testDocumentLinking();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);0.8255050182342529
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Document.sentence(int, java.util.Properties);1.0
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Document.sentence(int);0.9941417574882507
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String);0.9778698086738586
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(java.lang.String, java.util.Properties);0.9778698086738586
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.<init>(edu.stanford.nlp.simple.Document, java.util.Properties);0.9710884690284729
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Document.<init>(java.util.Properties, java.lang.String);0.9600634574890137
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.pipeline.AnnotationSerializer.<init>();0.9554343223571777
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.<init>(boolean);0.9554343223571777
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.setText(java.lang.String);0.925396203994751
edu.stanford.nlp.simple.SentenceTest.testBasicTokenization();edu.stanford.nlp.simple.Sentence.word(int);0.8042691349983215
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.length();1.0
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.util.Timing.report();0.9693413972854614
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9551482200622559
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9488986134529114
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.text();0.9252973794937134
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Sentence.word(int);0.9061118960380554
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.pipeline.ProtobufAnnotationSerializer.toProtoBuilder(edu.stanford.nlp.pipeline.Annotation);0.8510242104530334
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.simple.Document.sentence(int);0.8372040390968323
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8299153447151184
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8236658573150635
edu.stanford.nlp.simple.SentenceTest.testFromCoreMapCorrectnessCheck();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.8137008547782898
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentWriter.printSemanticGraph(edu.stanford.nlp.semgraph.SemanticGraph, edu.stanford.nlp.semgraph.SemanticGraph);1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentWriter.<init>();0.8367347121238708
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.8181926012039185
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.8181926012039185
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testSingleReadAndWrite(java.lang.String);edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.SentenceProcessor.<init>(edu.stanford.nlp.international.Language);0.8181926012039185
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();0.9479146599769592
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();0.9215418100357056
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.8629182577133179
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.8537082672119141
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.8423771262168884
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.hasNext();0.8253651261329651
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingToArray();edu.stanford.nlp.objectbank.ObjectBank.toArray(T[]);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.ling.CoreLabel.before();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.979422390460968
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.ling.CoreLabel.after();0.908574104309082
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.8152112364768982
edu.stanford.nlp.process.PTBTokenizerTest.testInvertible();edu.stanford.nlp.process.PTBTokenizer.newPTBTokenizer(java.io.Reader, boolean, boolean);0.8013874292373657
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9336711168289185
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.9241374135017395
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9109795689582825
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8324620723724365
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testExtractSpecificTag();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.8161554932594299
edu.stanford.nlp.process.PTBTokenizerTest.testCorp();edu.stanford.nlp.ling.CoreLabel.word();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testHyphensQuoteAndBOM();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerGerman();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.getTokenizerFactory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testFractions();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();1.0
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requirementsSatisfied();0.9638392329216003
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9549537897109985
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.requires();0.8603610992431641
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.854397177696228
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.8514755964279175
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8514755964279175
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.util.PropertiesUtils.asProperties(java.lang.String[]);0.8485052585601807
edu.stanford.nlp.pipeline.WordsToSentencesAnnotatorTest.testDefaultNewlineIsSentenceBreakSettings();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8312181234359741
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerCoreLabel();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerMT();edu.stanford.nlp.process.PTBTokenizer.factory();1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerMT();edu.stanford.nlp.process.PTBTokenizer.PTBTokenizerFactory.getTokenizer(java.io.Reader);0.8611061573028564
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.944756269454956
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.92585688829422
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testInvertible();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.8938934803009033
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testDateNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedDateString(java.lang.String, edu.stanford.nlp.time.Timex);1.0
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.AnnotationOutputter.print(edu.stanford.nlp.pipeline.Annotation, edu.stanford.nlp.pipeline.StanfordCoreNLP);0.9999999403953552
edu.stanford.nlp.pipeline.CoNLLOutputterTest.testCustomSimpleSentence();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();0.8946750164031982
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizePerLineSGML();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerTokenizePerLineSGML();edu.stanford.nlp.process.PTBTokenizer.PTBTokenizerFactory.newPTBTokenizerFactory(edu.stanford.nlp.process.LexedTokenFactory<T>, java.lang.String);0.8083348870277405
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingIterator();edu.stanford.nlp.sequences.ObjectBankWrapper.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testText();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.StanfordCoreNLP.getAnnotatorImplementations();1.0
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.TokenizerAnnotator.requirementsSatisfied();0.9231753945350647
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.util.PropertiesUtils.getBool(java.util.Properties, java.lang.String, boolean);0.903577983379364
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.StanfordCoreNLP.annotate(edu.stanford.nlp.pipeline.Annotation);0.8969126343727112
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.TokenizerAnnotator.requires();0.8969126343727112
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.StanfordCoreNLP.constructAnnotatorPool(java.util.Properties, edu.stanford.nlp.pipeline.AnnotatorImplementations);0.8189462423324585
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.StanfordCoreNLP.getRequiredProperty(java.util.Properties, java.lang.String);0.8108097910881042
edu.stanford.nlp.pipeline.TokenizerAnnotatorTest.testDefaultNoNLsPipeline();edu.stanford.nlp.pipeline.AnnotationPipeline.addAnnotator(edu.stanford.nlp.pipeline.Annotator);0.8036003112792969
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.9959983229637146
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();0.9178541302680969
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>);0.9061706066131592
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader);0.8594651818275452
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.<init>(java.io.Reader, edu.stanford.nlp.process.DocumentPreprocessor$DocType);0.839006245136261
edu.stanford.nlp.process.DocumentPreprocessorTest.testNearFinalPunctuation2();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.hasNext();0.8220623135566711
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.PTBTokenizerFactory.getTokenizer(java.io.Reader);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.PTBTokenizerFactory.newPTBTokenizerFactory(edu.stanford.nlp.process.LexedTokenFactory<T>, java.lang.String);0.9125332832336426
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerSGML();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);0.8920780420303345
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingEnhancedFor();edu.stanford.nlp.sequences.ObjectBankWrapper.iterator();0.9999999403953552
edu.stanford.nlp.sequences.ObjectBankWrapperTest.testUsingEnhancedFor();edu.stanford.nlp.sequences.ObjectBankWrapper.WrappedIterator.hasNext();0.8643792867660522
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerWord();edu.stanford.nlp.process.PTBTokenizer.factory();0.9999999403953552
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerWord();edu.stanford.nlp.process.PTBTokenizer.PTBTokenizerFactory.getTokenizer(java.io.Reader);0.8582573533058167
edu.stanford.nlp.process.PTBTokenizerTest.testPTBTokenizerWord();edu.stanford.nlp.process.PTBTokenizer.PTBTokenizerFactory.newTokenizerFactory();0.8479250073432922
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9999999403953552
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9456658363342285
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testRemoveXML();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9270777702331543
edu.stanford.nlp.process.PTBTokenizerTest.testTweets();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testDateNormalization();edu.stanford.nlp.ie.pascal.ISODateInstance.toString();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testSetSentencePunctWords();edu.stanford.nlp.process.DocumentPreprocessor.setSentenceFinalPuncWords(java.lang.String[]);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testContext();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);0.9999999403953552
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Temporal.toString();1.0
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.IsoDate.initBase();0.9740353226661682
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.util.Pair.first();0.8635545969009399
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.RelativeTime.<init>(edu.stanford.nlp.time.SUTime$Time, edu.stanford.nlp.time.SUTime$TemporalOp, edu.stanford.nlp.time.SUTime$Temporal);0.8083747625350952
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Temporal.<init>(edu.stanford.nlp.time.SUTime$Temporal);0.8083747625350952
edu.stanford.nlp.time.SUTimeTest.testThis();edu.stanford.nlp.time.SUTime.Time.<init>(edu.stanford.nlp.time.SUTime$Time);0.8083747625350952
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.RelativeTime.<init>(edu.stanford.nlp.time.SUTime$Time, edu.stanford.nlp.time.SUTime$TemporalOp, edu.stanford.nlp.time.SUTime$Temporal);1.0
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Temporal.<init>(edu.stanford.nlp.time.SUTime$Temporal);1.0
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Time.<init>(edu.stanford.nlp.time.SUTime$Time);1.0
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.IsoDate.<init>(edu.stanford.nlp.time.SUTime$StandardTemporalType, int, int, int);0.990136444568634
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.IsoDate.<init>(int, int, int);0.990136444568634
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.PartialTime.<init>();0.990136444568634
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Temporal.<init>();0.982445240020752
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.Time.<init>();0.982445240020752
edu.stanford.nlp.time.SUTimeTest.testNext();edu.stanford.nlp.time.SUTime.IsoDate.initBase();0.8440259695053101
edu.stanford.nlp.time.DurationTest.testDurationContainsDuration();edu.stanford.nlp.time.SUTime.Range.contains(edu.stanford.nlp.time.SUTime$Range);1.0
edu.stanford.nlp.util.MetaClassTest.testPrimitives();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testPrimitives();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.9825658798217773
edu.stanford.nlp.util.MetaClassTest.testBasic();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findClosestMatches(K[], int);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findClosestMatches(K[], int, boolean, boolean);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindClosest();edu.stanford.nlp.ling.tokensregex.matcher.ApproxMatch.toString();0.9537662267684937
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortedPathDirectionSensitiveEdges();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPathEdges(V, V, boolean);1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.<init>();1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.<init>(edu.stanford.nlp.util.MapFactory<E, edu.stanford.nlp.util.BinaryHeapPriorityQueue.edu.stanford.nlp.util.BinaryHeapPriorityQueue$Entry<E>>);1.0
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.MapFactory.hashMapFactory();0.948066234588623
edu.stanford.nlp.util.PriorityQueueTest.testBinaryHeapPriorityQueue();edu.stanford.nlp.util.BinaryHeapPriorityQueue.decreasePriority(E, double);0.9182140827178955
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionInsensitiveNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPath(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionSensitiveNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPath(V, V, boolean);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedString(edu.stanford.nlp.stats.Counter<T>, int, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedString();edu.stanford.nlp.stats.Counters.toSortedString(edu.stanford.nlp.stats.Counter<T>, int, java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testShortestPathDirectionInsensitiveEdges();edu.stanford.nlp.graph.DirectedMultiGraph.getShortestPathEdges(V, V, boolean);1.0
edu.stanford.nlp.stats.CountersTest.testRetainTopMass();edu.stanford.nlp.stats.Counters.retainTopMass(edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testShortestPath();edu.stanford.nlp.semgraph.SemanticGraph.getShortestUndirectedPathEdges(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testShortestPath();edu.stanford.nlp.semgraph.SemanticGraph.getShortestUndirectedPathNodes(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.KBestSequenceFinderTest.testPerStateBestSequenceFinder();edu.stanford.nlp.sequences.KBestSequenceFinder.kBestSequences(edu.stanford.nlp.sequences.SequenceModel, int);0.8571428656578064
edu.stanford.nlp.stats.CountersTest.testToSortedList();edu.stanford.nlp.stats.Counters.toSortedList(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testToSortedList();edu.stanford.nlp.stats.Counters.toSortedList(edu.stanford.nlp.stats.Counter<E>, boolean);0.8669490814208984
edu.stanford.nlp.stats.CountersTest.testRetainTop();edu.stanford.nlp.stats.Counters.retainTop(edu.stanford.nlp.stats.Counter<E>, int);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObjectPassive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPExtraction();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithAdverb();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPassiveNSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCatsAreCute();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testHeWasInaugurated();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.pattern();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testStateOfTheUnion();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>);0.8742287755012512
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreVBing();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAdvObject();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();0.8447158932685852
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testrabbitsEatVegetables();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBG();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPassiveReflexive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveWithObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testFishLikeToSwimAlternateParse();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveNoNER();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testReflexive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testBlueCatsPlayQuietlyWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testMyCatsPlayWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();null.compare(edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate, edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9434482455253601
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8924134373664856
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>();0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K2, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8672413229942322
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger3();edu.stanford.nlp.ling.SentenceUtils.toCoreLabelList(java.lang.String[]);0.8144752383232117
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclNoPP();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisManningOfStanford();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaPresidentOfRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreWith();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPAttachment();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testIAmInFlorida();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposInObject();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaBornInRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessive();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testBlueCatsPlayWithYarn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThereAreIn();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPPAttachmentTwo();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisIsOfStanford();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVBGCollapsed();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAclWithPP();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObjInRelation();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPossessiveInEntity();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testFishLikeToSwim();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testThrowAway();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();null.compare(edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate, edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9434482455253601
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8924134373664856
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>();0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K2, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8672413229942322
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger4();edu.stanford.nlp.ling.SentenceUtils.toCoreLabelList(java.lang.String[]);0.8144752383232117
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testXComp();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.938636064529419
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9293309450149536
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.naturalli.RelationTripleSegmenter.<init>(boolean);0.8638445138931274
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();null.<init>(edu.stanford.nlp.naturalli.RelationTripleSegmenter);0.8638445138931274
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();null.<init>(edu.stanford.nlp.naturalli.RelationTripleSegmenter, boolean);0.8638445138931274
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testVPOnlyReplacedWith();edu.stanford.nlp.semgraph.semgrex.NodePattern.NodeMatcher.matches();0.8142099380493164
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAllNominals();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();null.compare(edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate, edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9434482455253601
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8924134373664856
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>();0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K2, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8672413229942322
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger5();edu.stanford.nlp.ling.SentenceUtils.toCoreLabelList(java.lang.String[]);0.8144752383232117
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testOfWhich();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.segment(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Optional<java.lang.Double>);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.naturalli.RelationTripleSegmenter.extract(edu.stanford.nlp.semgraph.SemanticGraph, java.util.List<edu.stanford.nlp.ling.CoreLabel>);0.9432079792022705
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.pattern();0.9285493493080139
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCommaDoesntOvergenerate();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8060546517372131
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPresidentObama();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.ie.util.IETestUtils.mkWord(java.lang.String, int);1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.matcher(java.util.List<? extends edu.stanford.nlp.util.CoreMap>);0.9268673658370972
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.util.MapFactory.HashMapFactory.newSet();0.9153313040733337
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.9029423594474792
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testWh();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);0.8084262013435364
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testChrisManningOfStanfordLong();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGeorgeBoydRegression();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.9374493360519409
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testAcl();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.8845218420028687
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testCatsHaveTails();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(edu.stanford.nlp.ling.tokensregex.SequencePattern$PatternExpr);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();null.compare(edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate, edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate);0.9473150372505188
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.884587824344635
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.NodePattern.AnyNodePattern.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.MatchState.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SequenceEndPatternExpr.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SequenceStartPatternExpr.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SpecialNodePatternExpr.<init>(java.lang.String);0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.SpecialNodePatternExpr.<init>(java.lang.String, edu.stanford.nlp.util.Factory<edu.stanford.nlp.ling.tokensregex.SequencePattern$State>);0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.util.CollectionFactory.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.util.CollectionFactory.ArrayListFactory.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.util.CollectionFactory.HashSetFactory.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.util.CollectionFactory.LinkedListFactory.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.util.CollectionFactory.TreeSetFactory.<init>();0.8659091591835022
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8652437925338745
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8132241368293762
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.8132241368293762
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>();0.8132241368293762
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K2, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean);0.8132241368293762
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testNmodTmod();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testPropagateCSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testDogsInheaven();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();null.compare(edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate, edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9434482455253601
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8924134373664856
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger.<init>(java.util.Collection<? extends edu.stanford.nlp.ling.tokensregex.SequencePattern<edu.stanford.nlp.util.CoreMap>>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.<init>(edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher$NodePatternTrigger<T>);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>();0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.util.TwoDimensionalCollectionValuedMap.<init>(edu.stanford.nlp.util.MapFactory<K2, java.util.Collection<V>>, edu.stanford.nlp.util.CollectionFactory<V>, boolean);0.8689654469490051
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8672413229942322
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testOptionalTrigger2();edu.stanford.nlp.ling.SentenceUtils.toCoreLabelList(java.lang.String[]);0.8144752383232117
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();null.compare(edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate, edu.stanford.nlp.ling.tokensregex.CoreMapNodePatternTrigger$StringTriggerCandidate);1.0
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.MultiPatternMatcher.BasicSequencePatternTrigger.apply(java.util.List<? extends T>);0.9525316953659058
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.TokenSequencePattern.compile(java.lang.String);0.8930374979972839
edu.stanford.nlp.ling.tokensregex.SequencePatternTriggerTest.testSimpleTrigger();edu.stanford.nlp.ling.tokensregex.SequencePattern.findNodePatterns(java.util.function.Function<edu.stanford.nlp.ling.tokensregex.NodePattern<T>, OUT>, boolean, boolean);0.8292127847671509
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testApposAsSubj();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testObamaPresidentOfRegressionFull();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testMassOfIron();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numClasses();1.0
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.size();0.9680739045143127
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numFeatures();0.9534368515014648
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numFeatureTypes();0.943089485168457
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.GeneralDataset.numFeatureTokens();0.9146341681480408
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.util.MetaClass.create(java.lang.Class<?>);0.8983875513076782
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.util.MetaClass.create(java.lang.String);0.889373242855072
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.classify.LinearClassifier.classOf(edu.stanford.nlp.ling.Datum<L, F>);0.8826946020126343
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.ling.BasicDatum.setLabel(LabelType);0.8720908164978027
edu.stanford.nlp.classify.DatasetTest.testDataset();edu.stanford.nlp.stats.ClassicCounter.getCount(java.lang.Object);0.8374650478363037
edu.stanford.nlp.optimization.MinimizerTest.testQNMinimizerRosenbrock();edu.stanford.nlp.optimization.QNMinimizer.minimize(edu.stanford.nlp.optimization.DiffFunction, double, double[]);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testNoErrors();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testSubtreePattern();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testExtraSpan();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testChineseReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testChineseReplaceTree();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.918211042881012
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectShiftResultingTree();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectShiftTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtreesExtended();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testPrecedesFollows();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testDominateUnaryChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testBackReference();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.TreeTest.testTreeIterator();edu.stanford.nlp.trees.Tree.iterator();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9260544180870056
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.DescriptionPattern.DescriptionMatcher.getMatch();0.8519800901412964
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.TregexMatcher.getNode(java.lang.String);0.8102816343307495
edu.stanford.nlp.trees.tregex.TregexTest.testRepeatedVariables();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.8008572459220886
edu.stanford.nlp.trees.tregex.TregexTest.testDominateDescribedChain();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.TreeTest.testDeeperCopy();edu.stanford.nlp.trees.Tree.deepCopy();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNamed();edu.stanford.nlp.trees.tregex.TregexMatcher.find();1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.ChineseEmptyFilter.<init>();1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNothingLeftTree();edu.stanford.nlp.util.Filters.collectionAcceptFilter(E[]);0.8769854307174683
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatelyDominates();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testDisjunctionVariableAssignments();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8552016615867615
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMislabeledSpans();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMislabeledSpans();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);0.8096271753311157
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.TreeTransformer.apply(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.Tree.toString();0.8269035220146179
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);0.824561357498169
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testAnotherSplit();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.ChineseEmptyFilter.<init>();0.824561357498169
edu.stanford.nlp.trees.tregex.TregexTest.testDocExamples();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testParentEquals();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinH();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9175472855567932
edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinderTest.testFindTreeWithSmallestSpan();edu.stanford.nlp.dcoref.RuleBasedCorefMentionFinder.findTreeWithSmallestSpan(edu.stanford.nlp.trees.Tree, int, int);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.trees.Trees.leaves(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndSingleUnaries();edu.stanford.nlp.util.Generics.newArrayList(int);0.8097490072250366
edu.stanford.nlp.trees.tregex.TregexTest.testSister();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testIfExists();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.8905669450759888
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testMissingSpan();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testChinese();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testCompoundUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequence(edu.stanford.nlp.trees.Tree, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testVariableGroups();edu.stanford.nlp.trees.tregex.TregexMatcher.getVariableString(java.lang.String);1.0
edu.stanford.nlp.trees.SemanticHeadFinderTest.testRegularSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCoindex();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testOptional();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testRelabel();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testRelabel();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8214946389198303
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testSeparators();edu.stanford.nlp.util.CollectionUtils.transformAsList(java.util.Collection<? extends T1>, java.util.function.Function<T1, ? extends T2>);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testSeparators();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromGoldTagTree(edu.stanford.nlp.trees.Tree);0.8682558536529541
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testSeparators();edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequence(edu.stanford.nlp.trees.Tree, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);0.8246656060218811
edu.stanford.nlp.trees.SemanticHeadFinderTest.testCopulaHeadSemanticHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testInsert();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testMultiplePatterns();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testMultiplePatterns();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.86597740650177
edu.stanford.nlp.trees.tregex.TregexTest.testImmediatePrecedesFollows();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.parser.metrics.TreeSpanScoringTest.testTagErrors();edu.stanford.nlp.parser.metrics.TreeSpanScoring.countSpanErrors(edu.stanford.nlp.trees.TreebankLanguagePack, edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.trees.Trees.leaves(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);0.8688515424728394
edu.stanford.nlp.parser.shiftreduce.OracleTest.testEndToEndCompoundUnaries();edu.stanford.nlp.util.Generics.newArrayList(int);0.8600971102714539
edu.stanford.nlp.trees.tregex.TregexTest.testRootDisjunction();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.Tree.valueOf(java.lang.String);1.0
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.TreeTransformer.apply(edu.stanford.nlp.trees.Tree);0.9231373071670532
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.<init>(boolean, boolean, boolean, boolean);0.8159656524658203
edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizerTest.testNormalDelete();edu.stanford.nlp.trees.international.pennchinese.CTBErrorCorrectingTreeNormalizer.ChineseEmptyFilter.<init>();0.8159656524658203
edu.stanford.nlp.trees.TreeTest.testRemove();edu.stanford.nlp.trees.Tree.TreeIterator.remove();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testKeyword();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtrees();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testCreateSubtrees();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8393451571464539
edu.stanford.nlp.trees.tregex.TregexTest.testWordDisjunction();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testDominates();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testUnaryTransitions();edu.stanford.nlp.parser.shiftreduce.CreateTransitionSequence.createTransitionSequence(edu.stanford.nlp.trees.Tree, boolean, java.util.Set<java.lang.String>, java.util.Set<java.lang.String>);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testExcise();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.optimization.DiffFunctionTest.testXSquaredPlusOne();null.<init>(edu.stanford.nlp.optimization.DiffFunctionTest);1.0
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.pairwiseSubtract(double[], double[]);1.0
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.norm(double[]);0.8386557102203369
edu.stanford.nlp.optimization.MinimizerTest.testRosenbrock();edu.stanford.nlp.math.ArrayMath.pearsonCorrelation(double[], double[]);0.8062549233436584
edu.stanford.nlp.ling.LabelsTest.testWord();edu.stanford.nlp.ling.StringLabel.toString();1.0
edu.stanford.nlp.ling.LabelsTest.testWord();edu.stanford.nlp.ling.Word.labelFactory();0.824680745601654
edu.stanford.nlp.ling.LabelsTest.testWord();edu.stanford.nlp.ling.WordFactory.newLabelFromString(java.lang.String);0.824680745601654
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9999999403953552
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.PennTreeReader.readTree();0.8138757944107056
edu.stanford.nlp.trees.tregex.TregexTest.testReuse();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.812749445438385
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(java.util.function.Function<java.lang.String, java.lang.String>);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();null.<init>(edu.stanford.nlp.trees.tregex.TregexTest);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(edu.stanford.nlp.trees.HeadFinder, java.util.function.Function<java.lang.String, java.lang.String>);0.9577677845954895
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryDisjunction();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);0.8380406498908997
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyMatchRoot();edu.stanford.nlp.trees.tregex.DescriptionPattern.DescriptionMatcher.getMatch();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyMatchRoot();edu.stanford.nlp.trees.tregex.TregexPattern.matcher(edu.stanford.nlp.trees.Tree);0.9078035950660706
edu.stanford.nlp.trees.tregex.TregexTest.testOnlyMatchRoot();edu.stanford.nlp.trees.Tree.toString();0.8992933630943298
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(java.util.function.Function<java.lang.String, java.lang.String>);0.9565651416778564
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();null.<init>(edu.stanford.nlp.trees.tregex.TregexTest);0.9565651416778564
edu.stanford.nlp.trees.tregex.TregexTest.testCategoryFunctions();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.<init>(edu.stanford.nlp.trees.HeadFinder, java.util.function.Function<java.lang.String, java.lang.String>);0.9079169631004333
edu.stanford.nlp.trees.tregex.TregexTest.testOneResult();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testPrune();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testPrune();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9696428775787354
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testDelete();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testDelete();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9696428775787354
edu.stanford.nlp.trees.tregex.TregexTest.testTwoResults();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.TregexTest.testTest();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinF();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.9175472855567932
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceTree();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testReplaceTree();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.8037113547325134
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.Tree.toString();1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.tregex.TregexMatcher.find();0.8628899455070496
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoin();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.8176143169403076
edu.stanford.nlp.trees.tregex.TregexTest.testLeftRightMostDescendant();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinWithNamedNode();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAdjoinWithNamedNode();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);0.9744998216629028
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testForeign();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testForeign();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);0.9393451809883118
edu.stanford.nlp.semgraph.SemanticGraphUtilsTest.testCreateSemgrexPattern();edu.stanford.nlp.semgraph.SemanticGraphUtils.semgrexFromGraphOrderedNodes(edu.stanford.nlp.semgraph.SemanticGraph, java.util.Collection<edu.stanford.nlp.ling.IndexedWord>, java.util.Map<edu.stanford.nlp.ling.IndexedWord, java.lang.String>, java.util.function.Function<edu.stanford.nlp.ling.IndexedWord, java.lang.String>);1.0
edu.stanford.nlp.naturalli.OpenIETest.testCComp();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();1.0
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);0.9987635016441345
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.startSymbol();0.988735020160675
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack.startSymbols();0.9705117344856262
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack.startSymbols();0.9705117344856262
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack.startSymbols();0.9705117344856262
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.startSymbols();0.9705117344856262
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack.punctuationWords();0.9608010053634644
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack.punctuationWords();0.9608010053634644
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack.punctuationWords();0.9608010053634644
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.punctuationWords();0.9608010053634644
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.startSymbols();0.9402283430099487
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.startSymbols();0.9402283430099487
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.9364416599273682
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.punctuationWords();0.9305176138877869
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationWords();0.9305176138877869
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.parser.lexparser.AbstractTreebankParserParams.setOutputEncoding(java.lang.String);0.924813985824585
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.9125297665596008
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.arabic.ArabicTreebankLanguagePack.punctuationTags();0.9083627462387085
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.french.FrenchTreebankLanguagePack.punctuationTags();0.9083627462387085
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.hebrew.HebrewTreebankLanguagePack.punctuationTags();0.9083627462387085
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishTreebankLanguagePack.punctuationTags();0.9083627462387085
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.spanish.SpanishHeadFinder.insertVerbs(java.lang.String[], java.lang.String[]);0.8998879194259644
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.punctuationTags();0.8780792355537415
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.international.pennchinese.ChineseTreebankLanguagePack.punctuationTags();0.8780792355537415
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.trees.GrammaticalRelation.toString();0.8491571545600891
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.8302402496337891
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.HashIndex.size();0.8211677670478821
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.util.CollectionUtils.asSet(T[]);0.8159302473068237
edu.stanford.nlp.naturalli.OpenIETest.testXCompSubj();edu.stanford.nlp.international.Language.values();0.81513911485672
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.trees.tregex.TregexPatternCompiler.compile(java.lang.String);1.0
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9922935962677002
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.semgraph.SemanticGraph.toCompactString();0.875607430934906
edu.stanford.nlp.semgraph.semgrex.ssurgeon.SsurgeonTest.simpleTest();edu.stanford.nlp.ling.IndexedWord.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.804777979850769
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.naturalli.Util.cleanTree(edu.stanford.nlp.semgraph.SemanticGraph);1.0
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.MapFactory.HashMapFactory.newSet(java.util.Collection<K>);0.9793190956115723
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();edu.stanford.nlp.util.MapFactory.HashMapFactory.newSet();0.9071760773658752
edu.stanford.nlp.naturalli.OpenIETest.testNoClauses();null.<init>(edu.stanford.nlp.naturalli.OpenIETest);0.890625
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testComment();edu.stanford.nlp.semgraph.SemanticGraph.getComments();1.0
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.semgraph.SemanticGraph.addRoot(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap();0.9514145851135254
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.9339163899421692
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.util.MapFactory.hashMapFactory();0.9315674901008606
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.ling.IndexedWord.hashCode();0.8829464912414551
edu.stanford.nlp.naturalli.OpenIETest.testXCompObj();edu.stanford.nlp.trees.GrammaticalRelation.isFromString();0.8454810380935669
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testIsAllCaps();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.isAllCaps(java.lang.String);1.0
edu.stanford.nlp.util.BeamTest.testContent();edu.stanford.nlp.util.Beam.iterator();1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testBeamBestSequenceFinder();edu.stanford.nlp.sequences.BeamBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.<init>();1.0
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.hashCode();0.8984171152114868
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.LabeledScoredConstituent.<init>(int, int, edu.stanford.nlp.ling.Label, double);0.8707118034362793
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.Constituent.equals(java.lang.Object);0.8258576989173889
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.LabeledConstituent.<init>(int, int, edu.stanford.nlp.ling.Label);0.8258576989173889
edu.stanford.nlp.trees.ConstituentTest.testConstituents();edu.stanford.nlp.trees.SimpleConstituent.<init>(int, int);0.8258576989173889
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSerialization();edu.stanford.nlp.io.IOUtils.readObjectFromFile(java.io.File);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSerialization();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.equals(java.lang.Object);0.9744983315467834
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSerialization();edu.stanford.nlp.io.IOUtils.writeObjectToFile(java.lang.Object, java.io.File);0.8286443948745728
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.addPhrases(java.util.Collection<java.lang.String>);1.0
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.Phrase.getText();0.9874311685562134
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.ling.tokensregex.PhraseTable.findAllMatches(java.lang.String);0.9365567564964294
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testPhraseTable();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.8082373142242432
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testFindMatches();edu.stanford.nlp.ling.tokensregex.PhraseTable.findMatches(java.lang.String, int, int, boolean);1.0
edu.stanford.nlp.ling.tokensregex.PhraseTableTest.testIterator();edu.stanford.nlp.ling.tokensregex.PhraseTable.iterator();1.0
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.ling.WordLemmaTag.lemma();1.0
edu.stanford.nlp.process.MorphologyTest.testStem();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);0.8890273571014404
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordTag.setWord(java.lang.String);1.0
edu.stanford.nlp.process.MorphologyTest.testMorph();edu.stanford.nlp.ling.WordLemmaTag.lemma();0.9694430232048035
edu.stanford.nlp.process.MorphologyTest.testStemStatic();edu.stanford.nlp.process.Morphology.stemStatic(edu.stanford.nlp.ling.WordTag);1.0
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.ling.WordTag.word();0.9999999403953552
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.9577041268348694
edu.stanford.nlp.process.MorphologyTest.testDunno();edu.stanford.nlp.ling.WordTag.<init>(java.lang.String, java.lang.String);0.8307594656944275
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testRelativeDateCreation();edu.stanford.nlp.ie.pascal.ISODateInstance.getDateString();1.0
edu.stanford.nlp.util.ArraySetTest.testClear();edu.stanford.nlp.util.ArraySet.size();1.0
edu.stanford.nlp.util.ArraySetTest.testClear();edu.stanford.nlp.util.ArraySet.iterator();0.9617061614990234
edu.stanford.nlp.util.ArraySetTest.testRemove();edu.stanford.nlp.util.ArraySet.size();1.0
edu.stanford.nlp.util.ArraySetTest.testRemove();edu.stanford.nlp.util.ArraySet.iterator();0.8451469540596008
edu.stanford.nlp.util.ArraySetTest.testEquals();edu.stanford.nlp.util.ArraySet.iterator();1.0
edu.stanford.nlp.util.ArraySetTest.testEquals();edu.stanford.nlp.util.ArraySet.size();0.926079273223877
edu.stanford.nlp.util.ArraySetTest.testAdd();edu.stanford.nlp.util.ArraySet.add(E);0.9999999403953552
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.Env.bind(java.lang.String, java.lang.Object);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testEnv();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.8933344483375549
edu.stanford.nlp.trees.ModCollinsHeadFinderTest.testModCollinsHeadFinder();edu.stanford.nlp.trees.AbstractCollinsHeadFinder.determineHead(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testSimpleJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testComplexJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testCollectionJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testNestedJSON();edu.stanford.nlp.pipeline.JSONOutputter.JSONWriter.objectToJSON(java.util.function.Consumer<edu.stanford.nlp.pipeline.JSONOutputter$Writer>);1.0
edu.stanford.nlp.util.HashIndexTest.testUnmodifiableViewEtc();edu.stanford.nlp.util.HashIndex.unmodifiableView();1.0
edu.stanford.nlp.ling.CategoryWordTagFactoryTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.category();1.0
edu.stanford.nlp.ling.CategoryWordTagFactoryTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.word();0.8149417638778687
edu.stanford.nlp.ling.CategoryWordTagTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.category();1.0
edu.stanford.nlp.ling.CategoryWordTagTest.testCopy();edu.stanford.nlp.ling.CategoryWordTag.word();0.8149417638778687
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.get(java.lang.String);1.0
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.<init>();0.892845630645752
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.util.Lazy.<init>();0.8906146287918091
edu.stanford.nlp.pipeline.AnnotatorPoolTest.testSignature();edu.stanford.nlp.pipeline.AnnotatorPool.register(java.lang.String, java.util.Properties, edu.stanford.nlp.util.Lazy<edu.stanford.nlp.pipeline.Annotator>);0.8333903551101685
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.compile(java.lang.String);0.9243650436401367
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.SemanticGraph.valueOf(java.lang.String);0.8979694247245789
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.ling.IndexedWord.word();0.8960579037666321
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testSiblingPatterns();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.getNode(java.lang.String);0.8856977224349976
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMatchAll();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph);1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexTest.testMatchAll();edu.stanford.nlp.semgraph.semgrex.SemgrexMatcher.findNextMatchingNode();0.8130619525909424
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testPrettyPrint();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.prettyPrint();1.0
edu.stanford.nlp.semgraph.semgrex.SemgrexPatternTest.testMacro();edu.stanford.nlp.semgraph.semgrex.SemgrexPattern.matcher(edu.stanford.nlp.semgraph.SemanticGraph, boolean);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testOffsets();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9289000034332275
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.914910078048706
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9045761227607727
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testNestedTags();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.8965624570846558
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9413837194442749
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9213306903839111
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8519431352615356
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testMissingCloseTags();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.8166794776916504
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9395080804824829
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9188133478164673
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testSentenceSplitting();edu.stanford.nlp.pipeline.Annotation.<init>(java.lang.String);0.8788133859634399
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.ling.CoreLabel.word();1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.8748869895935059
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testEarlyEnd();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.811882734298706
edu.stanford.nlp.process.PTBTokenizerTest.testJacobEisensteinApostropheCase();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.9999999403953552
edu.stanford.nlp.process.PTBTokenizerTest.testJacobEisensteinApostropheCase();edu.stanford.nlp.process.PTBTokenizer.newPTBTokenizer(java.io.Reader);0.9477842450141907
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testAttributes();edu.stanford.nlp.pipeline.CleanXmlAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);1.0
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testAttributes();edu.stanford.nlp.pipeline.WordsToSentencesAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9495900273323059
edu.stanford.nlp.pipeline.CleanXmlAnnotatorTest.testAttributes();edu.stanford.nlp.pipeline.TokenizerAnnotator.annotate(edu.stanford.nlp.pipeline.Annotation);0.9323444366455078
edu.stanford.nlp.util.IterablesTest.testGroup();edu.stanford.nlp.util.Iterables.group(java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.readSVMLightFormat(java.io.File);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testSVMLightIntegerFormat();edu.stanford.nlp.classify.RVFDataset.writeSVMLightFormat(java.io.File);0.9694736003875732
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.io.File, java.lang.Class<? extends java.io.InputStream>);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadLines();edu.stanford.nlp.io.IOUtils.readLines(java.io.File);0.9858778119087219
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.gapDecode(byte[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.gapEncode(int[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testGaps();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);0.845516562461853
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.HistoryTable.getIndex(edu.stanford.nlp.tagger.maxent.History);1.0
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.HistoryTable.add(edu.stanford.nlp.tagger.maxent.History);0.8470588326454163
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.PairsHolder.add(edu.stanford.nlp.ling.WordTag);0.8470588326454163
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.Extractor.extract(edu.stanford.nlp.tagger.maxent.History);0.833613395690918
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.util.DataFilePaths.convert(java.lang.String);0.826890766620636
edu.stanford.nlp.tagger.maxent.PairsHolderTest.testPairsHolder();edu.stanford.nlp.tagger.maxent.Extractors.size();0.800000011920929
edu.stanford.nlp.ling.LabelsTest.testWordTag();edu.stanford.nlp.ling.WordTag.tag();1.0
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.entrySet();1.0
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.get(java.lang.Object);0.8745828866958618
edu.stanford.nlp.util.DeltaMapTest.testDeltaAccurate();edu.stanford.nlp.util.DeltaMap.containsKey(java.lang.Object);0.8225409984588623
edu.stanford.nlp.trees.international.negra.NegraPennLanguagePackTest.testBasicCategory();edu.stanford.nlp.trees.international.negra.NegraPennLanguagePack.basicCategory(java.lang.String);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.contains(K1, K2);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.size();0.8551142811775208
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicOperations();edu.stanford.nlp.util.TwoDimensionalMap.isEmpty();0.8196795582771301
edu.stanford.nlp.time.DurationTest.testDurationContainsTime();edu.stanford.nlp.time.SUTime.Range.contains(edu.stanford.nlp.time.SUTime$Time);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris4();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.982286810874939
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);0.895227313041687
edu.stanford.nlp.process.WordShapeClassifierTest.testChris1();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.8757660388946533
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris2();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.982286810874939
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testChris3();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.982286810874939
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int);1.0
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShape(java.lang.String, int, java.util.Collection<java.lang.String>);0.9805586934089661
edu.stanford.nlp.process.WordShapeClassifierTest.testDigits();edu.stanford.nlp.process.WordShapeClassifier.wordShapeDigits(java.lang.String);0.8668540716171265
edu.stanford.nlp.util.IntervalTreeTest.testGetOverlapping();edu.stanford.nlp.util.IntervalTree.getOverlapping(T);1.0
edu.stanford.nlp.trees.TreeTest.testDominates();edu.stanford.nlp.trees.Tree.dominates(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.parser.shiftreduce.OracleTest.testBuildParentMap();edu.stanford.nlp.parser.shiftreduce.Oracle.buildParentMap(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.util.IterablesTest.testMerge3();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V>, java.lang.Iterable<V>, java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.util.IterablesTest.testTransform();edu.stanford.nlp.util.Iterables.transform(java.lang.Iterable<K>, java.util.function.Function<? super K, ? extends V>);1.0
edu.stanford.nlp.process.WhitespaceTokenizerTest.testWordTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.factory(boolean);1.0
edu.stanford.nlp.process.WhitespaceTokenizerTest.testWordTokenizer();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.9971376657485962
edu.stanford.nlp.process.WhitespaceTokenizerTest.testWordTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.WhitespaceTokenizerFactory.getTokenizer(java.io.Reader);0.9125459790229797
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabelFactory.newLabel(edu.stanford.nlp.ling.Label);1.0
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabelFactory.newLabel(java.lang.String);1.0
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.toString();0.9071412682533264
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.StringLabel.<init>(java.lang.String);0.8085972666740417
edu.stanford.nlp.ling.LabelsTest.testStringLabel();edu.stanford.nlp.ling.ValueLabel.<init>();0.8048073053359985
edu.stanford.nlp.semgraph.SemanticGraphTest.testHasChildren();edu.stanford.nlp.semgraph.SemanticGraph.hasChildren(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.util.StringUtilsTest.testLongestCommonSubstring();edu.stanford.nlp.util.StringUtils.longestCommonSubstring(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.ConcatenationIteratorTest.testIterator();edu.stanford.nlp.util.ConcatenationIterator.next();1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testOrdinalNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedOrdinalString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.naturalli.UtilTest.extractNER();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.stats.CountersTest.testDivideInPlace();edu.stanford.nlp.stats.Counters.divideInPlace(edu.stanford.nlp.stats.TwoDimensionalCounter<A, B>, double);1.0
edu.stanford.nlp.naturalli.UtilTest.nerOverlap();edu.stanford.nlp.naturalli.Util.nerOverlap(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.stats.CountersTest.testJensenShannonDivergence();edu.stanford.nlp.stats.Counters.jensenShannonDivergence(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testFlatten();edu.stanford.nlp.stats.Counters.flatten(java.util.Map<E2, edu.stanford.nlp.stats.Counter<E>>);1.0
edu.stanford.nlp.stats.CountersTest.testHIndex();edu.stanford.nlp.stats.Counters.hIndex(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.argmin(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.ClassicCounter.containsKey(E);0.9597974419593811
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();null.totalCount();0.959236741065979
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.totalCount();0.9552714824676514
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.min(edu.stanford.nlp.stats.Counter<E>);0.9372282028198242
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();null.getCount(java.lang.Object);0.9340161085128784
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.ClassicCounter.totalCount();0.909379243850708
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.subtractInPlace(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);0.8952485918998718
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.argmax(edu.stanford.nlp.stats.Counter<E>);0.89082932472229
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.mean(edu.stanford.nlp.stats.Counter<E>);0.8858693838119507
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.ClassicCounter.getCount(java.lang.Object);0.8666954040527344
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.defaultReturnValue();0.8645398020744324
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();null.defaultReturnValue();0.8645398020744324
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.keysAt(edu.stanford.nlp.stats.Counter<E>, double);0.8513084053993225
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.ClassicCounter.defaultReturnValue();0.8418700695037842
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.keysAbove(edu.stanford.nlp.stats.Counter<E>, double);0.8170691132545471
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.keysBelow(edu.stanford.nlp.stats.Counter<E>, double);0.8170691132545471
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.Counters.retainNonZeros(edu.stanford.nlp.stats.Counter<E>);0.814215898513794
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.IntCounter.setCount(E, double);0.8102962374687195
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();null.setCount(E, double);0.8063310384750366
edu.stanford.nlp.stats.CounterTestBase.testClassicCounterHistoricalMain();edu.stanford.nlp.stats.ClassicCounter.setDefaultReturnValue(double);0.8058125972747803
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testMixedCompatibility();edu.stanford.nlp.classify.RVFDataset.initialize(int);0.9097070097923279
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.9363636374473572
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.9071428775787354
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.903030276298523
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.8738095164299011
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyNoRelation();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);0.8500000238418579
edu.stanford.nlp.stats.CountersTest.testAddInPlaceCollection();edu.stanford.nlp.stats.Counters.addInPlace(edu.stanford.nlp.stats.Counter<E>, java.util.Collection<E>);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testSetCount();edu.stanford.nlp.stats.TwoDimensionalCounter.setCount(K1, K2, double);1.0
edu.stanford.nlp.stats.CountersTest.testLogNormalize();edu.stanford.nlp.stats.Counters.logSum(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testLogNormalize();edu.stanford.nlp.stats.Counters.logNormalizeInPlace(edu.stanford.nlp.stats.Counter<E>);0.9786005020141602
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.IntCounter.getFactory();1.0
edu.stanford.nlp.stats.CounterTestBase.testFactory();null.getFactory();1.0
edu.stanford.nlp.stats.CounterTestBase.testFactory();edu.stanford.nlp.stats.ClassicCounter.getFactory();0.9492748975753784
edu.stanford.nlp.stats.CountersTest.testAbsoluteDifference();edu.stanford.nlp.stats.Counters.absoluteDifference(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testRemoveKeys();edu.stanford.nlp.stats.Counters.removeKeys(edu.stanford.nlp.stats.Counter<E>, java.util.Collection<E>);1.0
edu.stanford.nlp.naturalli.UtilTest.guessNERSpan();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.stats.CountersTest.testRetainAbove();edu.stanford.nlp.stats.Counters.retainAbove(edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.stats.CountersTest.testProduct();edu.stanford.nlp.stats.Counters.product(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testIntersection();edu.stanford.nlp.stats.Counters.intersection(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testToTiedRankCounter();edu.stanford.nlp.stats.Counters.toTiedRankCounter(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testEquals();edu.stanford.nlp.stats.Counters.equals(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CountersTest.testEquals();edu.stanford.nlp.stats.Counters.equals(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>, double);1.0
edu.stanford.nlp.stats.CountersTest.testL2Norm();edu.stanford.nlp.stats.Counters.L2Norm(C);1.0
edu.stanford.nlp.stats.CountersTest.testPearsonsCorrelationCoefficient();edu.stanford.nlp.stats.Counters.pearsonsCorrelationCoefficient(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.initialize(int);1.0
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.<init>();0.9027271270751953
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.<init>(int);0.9027271270751953
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.GeneralDataset.<init>();0.8919462561607361
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();edu.stanford.nlp.classify.RVFDataset.iterator();0.839228630065918
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();null.next();0.8251595497131348
edu.stanford.nlp.classify.RVFDatasetTest.testCombiningDatasets();null.hasNext();0.8090183734893799
edu.stanford.nlp.stats.CountersTest.testUnion();edu.stanford.nlp.stats.Counters.union(C, C);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);0.9999999403953552
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);0.9404296278953552
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.9165735840797424
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.9165735840797424
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.8605290651321411
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracySimple();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.8165837526321411
edu.stanford.nlp.sequences.IOBUtilsTest.testIOEResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.RVFDataset.initialize(int);0.9116244912147522
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.<init>();0.8567216396331787
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.RVFDataset.<init>();0.8399853706359863
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.RVFDataset.<init>(int);0.8399853706359863
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.GeneralDataset.<init>();0.8288445472717285
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testBackwardsCompatibility();edu.stanford.nlp.classify.WeightedRVFDataset.add(edu.stanford.nlp.ling.Datum<L, F>);0.818733811378479
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2Results();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBESResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testSerializeStringCounter();edu.stanford.nlp.stats.Counters.serializeStringCounter(edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testTransformWithValuesAdd();edu.stanford.nlp.stats.Counters.transformWithValuesAdd(edu.stanford.nlp.stats.Counter<T1>, java.util.function.Function<T1, T2>);1.0
edu.stanford.nlp.naturalli.UtilTest.extractNERDifferingTypes();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.naturalli.UtilTest.guessNER();edu.stanford.nlp.naturalli.Util.guessNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOResults();edu.stanford.nlp.sequences.IOBUtils.countEntityResults(java.util.List<? extends edu.stanford.nlp.util.CoreMap>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, edu.stanford.nlp.stats.Counter<java.lang.String>, java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testL2Normalize();edu.stanford.nlp.stats.Counters.L2Normalize(C);1.0
edu.stanford.nlp.classify.WeightedRVFDatasetTest.testWeightingWorks();edu.stanford.nlp.classify.WeightedRVFDataset.getWeights();1.0
edu.stanford.nlp.stats.CountersTest.testPointwiseMutualInformation();edu.stanford.nlp.stats.Counters.pointwiseMutualInformation(edu.stanford.nlp.stats.Counter<T1>, edu.stanford.nlp.stats.Counter<T2>, edu.stanford.nlp.stats.Counter<edu.stanford.nlp.util.Pair<T1, T2>>, edu.stanford.nlp.util.Pair<T1, T2>);1.0
edu.stanford.nlp.stats.DistributionTest.testGetDistributionFromLogValues();edu.stanford.nlp.stats.Distribution.getDistributionFromLogValues(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precision(java.lang.String);1.0
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMacro();0.9875968098640442
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.precisionMicro();0.9875968098640442
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recall(java.lang.String);0.9836570024490356
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMacro();0.9702851176261902
edu.stanford.nlp.ie.KBPRelationExtractorTest.testAccuracyTrueNegatives();edu.stanford.nlp.ie.KBPRelationExtractor.Accuracy.recallMicro();0.9702851176261902
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieSegment();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.segment(K[]);1.0
edu.stanford.nlp.util.DeltaIndexTest.testContains();edu.stanford.nlp.util.DeltaIndex.contains(java.lang.Object);1.0
edu.stanford.nlp.util.DeltaIndexTest.testContains();edu.stanford.nlp.util.HashIndex.contains(java.lang.Object);0.9876430630683899
edu.stanford.nlp.math.ArrayMathTest.testPairwiseMultiply();edu.stanford.nlp.math.ArrayMath.pairwiseMultiply(double[], double[]);1.0
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testRightTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.<init>(java.lang.String, edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side);1.0
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testRightTransition();edu.stanford.nlp.util.TreeShapedStack.size();0.975578248500824
edu.stanford.nlp.parser.shiftreduce.ShiftReduceParserTest.testInitialStateFromTagged();edu.stanford.nlp.parser.shiftreduce.ShiftReduceParser.initialStateFromTaggedSentence(java.util.List<? extends edu.stanford.nlp.ling.HasWord>);1.0
edu.stanford.nlp.trees.TreeTest.testPennPrint();edu.stanford.nlp.trees.Tree.pennString();1.0
edu.stanford.nlp.parser.shiftreduce.ShiftTransitionTest.testTransition();edu.stanford.nlp.parser.shiftreduce.ShiftTransition.<init>();1.0
edu.stanford.nlp.parser.shiftreduce.ShiftTransitionTest.testTransition();edu.stanford.nlp.ling.SentenceUtils.toTaggedList(java.util.List<java.lang.String>, java.util.List<java.lang.String>);0.9436124563217163
edu.stanford.nlp.parser.shiftreduce.ShiftTransitionTest.testTransition();edu.stanford.nlp.parser.shiftreduce.ShiftTransition.apply(edu.stanford.nlp.parser.shiftreduce.State);0.822487473487854
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testLeftTransition();edu.stanford.nlp.util.TreeShapedStack.size();0.9999999403953552
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testLeftTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.Side.<init>();0.9799340963363647
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testLeftTransition();edu.stanford.nlp.parser.shiftreduce.BinaryTransition.<init>(java.lang.String, edu.stanford.nlp.parser.shiftreduce.BinaryTransition$Side);0.9146401286125183
edu.stanford.nlp.parser.shiftreduce.BinaryTransitionTest.testLeftTransition();edu.stanford.nlp.trees.LabeledScoredTreeNode.children();0.8489425182342529
edu.stanford.nlp.trees.PennTreeReaderTest.testRead();edu.stanford.nlp.trees.PennTreeReader.readTree();1.0
edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtilsTest.testBinarySide();edu.stanford.nlp.parser.shiftreduce.ShiftReduceUtils.getBinarySide(edu.stanford.nlp.trees.Tree);1.0
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.ling.BasicDatum.label();1.0
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.classify.GeneralDataset.labelIndex();0.9204649925231934
edu.stanford.nlp.classify.GeneralDatasetTest.testCreateFolds();edu.stanford.nlp.util.HashIndex.equals(java.lang.Object);0.8724268674850464
edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModelTest.testGetSignature();edu.stanford.nlp.parser.lexparser.SpanishUnknownWordModel.getSignature(java.lang.String, int);1.0
edu.stanford.nlp.trees.tregex.TregexTest.testNonsense();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.printTable();1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.setUseRealLabels(boolean);0.9047284126281738
edu.stanford.nlp.util.ConfusionMatrixTest.testValueSort();edu.stanford.nlp.util.ConfusionMatrix.add(U, U, int);0.8009840846061707
edu.stanford.nlp.util.ConfusionMatrixTest.testBulkAdd();edu.stanford.nlp.util.ConfusionMatrix.add(U, U, int);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testRealLabels();edu.stanford.nlp.util.ConfusionMatrix.setUseRealLabels(boolean);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testRealLabels();edu.stanford.nlp.util.ConfusionMatrix.printTable();0.9299300909042358
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.add(U, U);1.0
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.printTable();0.8669512271881104
edu.stanford.nlp.util.ConfusionMatrixTest.testBasic();edu.stanford.nlp.util.ConfusionMatrix.<init>(java.util.Locale);0.840069055557251
edu.stanford.nlp.sequences.BestSequenceFinderTest.testExactBestSequenceFinder();edu.stanford.nlp.sequences.ExactBestSequenceFinder.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9492270946502686
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.9417767524719238
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testContainingTags();edu.stanford.nlp.util.AbstractIterator.<init>();0.9197338223457336
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);0.9293454885482788
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8698916435241699
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.8611674308776855
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNesting();edu.stanford.nlp.util.AbstractIterator.<init>();0.8353557586669922
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, boolean, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.9864166975021362
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9456005096435547
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.9376179575920105
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testInternalTags();edu.stanford.nlp.util.AbstractIterator.<init>();0.9140004515647888
edu.stanford.nlp.util.ArgumentParserTest.testFillStaticFieldFromProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.util.Properties);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillMixedFieldsNoInstanceGiven();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.testFillStaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Class<?>, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticFieldFromProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.util.Properties);1.0
edu.stanford.nlp.util.ArgumentParserTest.fillNonstaticField();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.lang.String[]);1.0
edu.stanford.nlp.util.ArgumentParserTest.checkOptionsOverrideProperties();edu.stanford.nlp.util.ArgumentParser.fillOptions(java.lang.Object, java.util.Properties, java.lang.String[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[]);1.0
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.toSecondsString(long);1.0
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.<init>();0.840430736541748
edu.stanford.nlp.util.TimingTest.testTiming();edu.stanford.nlp.util.Timing.reportNano();0.8333333134651184
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.AbstractTokenizer.tokenize();1.0
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.WhitespaceTokenizerFactory.getTokenizer(java.io.Reader);0.9912688732147217
edu.stanford.nlp.process.WhitespaceTokenizerTest.testCoreLabelTokenizer();edu.stanford.nlp.process.WhitespaceTokenizer.WhitespaceTokenizerFactory.<init>(edu.stanford.nlp.process.LexedTokenFactory<T>, boolean);0.9050695300102234
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.setTokenizerFactory(edu.stanford.nlp.process.TokenizerFactory<? extends edu.stanford.nlp.ling.HasWord>);1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.iterator();0.8843571543693542
edu.stanford.nlp.process.DocumentPreprocessorTest.testWhitespaceTokenization();edu.stanford.nlp.process.DocumentPreprocessor.setSentenceDelimiter(java.lang.String);0.8442000150680542
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.iterator();1.0
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.next();0.8284639716148376
edu.stanford.nlp.process.DocumentPreprocessorTest.testPlainTextIterator();edu.stanford.nlp.process.DocumentPreprocessor.PlainTextIterator.hasNext();0.8220759034156799
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.process.AbstractTokenizer.tokenize();1.0
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testArabicTokenizer();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.ArabicTokenizerFactory.getTokenizer(java.io.Reader);0.9167509078979492
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.international.arabic.process.ArabicTokenizer.ArabicTokenizerFactory.setOptions(java.lang.String);1.0
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.ling.CoreLabel.beginPosition();0.9195957183837891
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.ling.CoreLabel.endPosition();0.8940922021865845
edu.stanford.nlp.international.arabic.process.ArabicTokenizerTest.testCharOffsets();edu.stanford.nlp.process.AbstractTokenizer.tokenize();0.8162269592285156
edu.stanford.nlp.process.PTBTokenizerTest.testEmoji();edu.stanford.nlp.process.PTBTokenizer.coreLabelFactory(java.lang.String);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testEmoji();edu.stanford.nlp.ling.CoreLabel.endPosition();0.8185364007949829
edu.stanford.nlp.trees.tregex.TregexTest.testNoResults();edu.stanford.nlp.trees.tregex.TregexPattern.compile(java.lang.String);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.getInDegree(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDegree();edu.stanford.nlp.graph.DirectedMultiGraph.getOutDegree(V);0.8733223676681519
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceInOrder();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceOutOfOrder();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.util.PriorityQueueTest.testFixedPrioritiesPriorityQueue();edu.stanford.nlp.util.FixedPrioritiesPriorityQueue.getPriority();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testToSentenceNoIndices();edu.stanford.nlp.ie.util.RelationTriple.asSentence();1.0
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithEol();edu.stanford.nlp.io.IOUtils.getLineIterable(java.io.Reader, int, boolean);0.9999999403953552
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithEol();edu.stanford.nlp.io.IOUtils.EolPreservingLineReaderIterable.iterator();0.9056534171104431
edu.stanford.nlp.trees.international.pennchinese.ChineseUtilsTest.testNormalize();edu.stanford.nlp.trees.international.pennchinese.ChineseUtils.normalize(java.lang.String, int, int, int);1.0
edu.stanford.nlp.util.IterablesTest.testChain();edu.stanford.nlp.util.Iterables.chain(java.lang.Iterable<T>[]);1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testIsCompatible();edu.stanford.nlp.ie.pascal.ISODateInstance.isCompatible(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.sequences.SeqClassifierFlags.setProperties(java.util.Properties, boolean);1.0
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.util.Generics.newHashSet();0.8112208843231201
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testNEROverlaps();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);0.8044865131378174
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.9999999403953552
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);0.8490133881568909
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testCased();edu.stanford.nlp.process.CoreLabelTokenFactory.makeToken();0.8202370405197144
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.9999999403953552
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.util.Generics.newHashSet();0.9984387159347534
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);0.9793441891670227
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.process.CoreLabelTokenFactory.makeToken();0.9266711473464966
edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifierTest.testUncased();edu.stanford.nlp.ie.regexp.RegexNERSequenceClassifier.readEntries(java.io.BufferedReader, boolean);0.9216199517250061
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr4();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.ling.LabelsTest.testTaggedWord();edu.stanford.nlp.ling.TaggedWord.tag();1.0
edu.stanford.nlp.simple.DocumentTest.testText();edu.stanford.nlp.simple.Document.text();1.0
edu.stanford.nlp.simple.DocumentTest.testDocid();edu.stanford.nlp.simple.Document.docid();1.0
edu.stanford.nlp.simple.DocumentTest.testCreateFromText();edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.setText(java.lang.String);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindNonOverlapping();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findNonOverlapping(K[]);1.0
edu.stanford.nlp.util.IntervalTreeTest.testIteratorOrdered();edu.stanford.nlp.util.IntervalTree.iterator();1.0
edu.stanford.nlp.util.IntervalTreeTest.testIteratorRandom();edu.stanford.nlp.util.IntervalTree.iterator();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentWriter.<init>();1.0
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>();0.9777119159698486
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.<init>(edu.stanford.nlp.international.Language);0.9777119159698486
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.SentenceProcessor.<init>(edu.stanford.nlp.international.Language);0.9777119159698486
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentWriter.printSemanticGraph(edu.stanford.nlp.semgraph.SemanticGraph, edu.stanford.nlp.semgraph.SemanticGraph);0.9659090042114258
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testReadingAndWriting();edu.stanford.nlp.trees.ud.CoNLLUDocumentReader.getIterator(java.io.Reader);0.8773577213287354
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.semgraph.SemanticGraph.containsEdge(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);0.9999999403953552
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.objectbank.DelimitRegExIterator.hasNext();0.9799856543540955
edu.stanford.nlp.trees.ud.CoNLLUDocumentReaderWriterTest.testExtraDependencies();edu.stanford.nlp.semgraph.SemanticGraph.getNodeByIndex(int);0.874982476234436
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.word();1.0
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.CoreLabel.wordFromString(java.lang.String);0.8823363780975342
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.setWord(java.lang.String);0.8641907572746277
edu.stanford.nlp.ling.IndexedWordTest.testIndexedWordComparisons();edu.stanford.nlp.ling.IndexedWord.compareTo(edu.stanford.nlp.ling.IndexedWord);0.8369044661521912
edu.stanford.nlp.util.IntervalTest.testIntervalOverlaps();edu.stanford.nlp.util.Interval.overlaps(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalContains();edu.stanford.nlp.util.Interval.contains(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[]);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.incrementCount(K1, K2, double);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.getCount(K1, K2);0.8580997586250305
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount(K1);0.8291177749633789
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testIncrement();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount();0.8091780543327332
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.getCount(K1, K2);1.0
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.util.MapFactory.HashMapFactory.newMap(int);0.9002215266227722
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>();0.8548386693000793
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>(edu.stanford.nlp.util.MapFactory<K1, edu.stanford.nlp.stats.IntCounter<K2>>, edu.stanford.nlp.util.MapFactory<K2, edu.stanford.nlp.util.MutableInteger>);0.8548386693000793
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.<init>(edu.stanford.nlp.util.MapFactory<K1, edu.stanford.nlp.stats.IntCounter<K2>>, edu.stanford.nlp.util.MapFactory<K2, edu.stanford.nlp.util.MutableInteger>, int);0.8548386693000793
edu.stanford.nlp.stats.TwoDimensionalIntCounterTest.testTraditionalMain();edu.stanford.nlp.stats.TwoDimensionalIntCounter.setCount(K1, K2, double);0.8064516186714172
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testSameSemanticsForDifferentWordOrder();edu.stanford.nlp.ie.util.RelationTriple.toString();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.objectGloss();1.0
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.subjectGloss();0.9583333730697632
edu.stanford.nlp.naturalli.RelationTripleSegmenterTest.testGlosses();edu.stanford.nlp.ie.util.RelationTriple.relationGloss();0.9230769872665405
edu.stanford.nlp.util.EditDistanceTest.testModify();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testTranspose();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.combine(double, double);1.0
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.best();0.8928570747375488
edu.stanford.nlp.util.EditDistanceTest.testBig();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);0.8571428656578064
edu.stanford.nlp.util.EditDistanceTest.testInsert();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testNumberNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedNumberString(java.lang.String, java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.util.EditDistanceTest.testEmpty();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testMoneyNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedMoneyString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testPercentNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedPercentString(java.lang.String, java.lang.Number);1.0
edu.stanford.nlp.util.EditDistanceTest.testDelete();edu.stanford.nlp.util.EditDistance.score(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testArgsToProperties();edu.stanford.nlp.util.StringUtils.argsToProperties(java.lang.String[]);1.0
edu.stanford.nlp.util.StringUtilsTest.testArgsToProperties();edu.stanford.nlp.util.StringUtils.argsToProperties(java.lang.String[], java.util.Map<java.lang.String, java.lang.Integer>);1.0
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.createFactory(java.lang.Class<?>[]);0.8353601694107056
edu.stanford.nlp.util.MetaClassTest.testConsistencyWithJava();edu.stanford.nlp.util.MetaClass.ClassFactory.createInstance(java.lang.Object[]);0.8185011744499207
edu.stanford.nlp.ling.SentenceTest.testCoreLabelListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean);1.0
edu.stanford.nlp.ling.SentenceTest.testCoreLabelListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean, java.lang.String);1.0
edu.stanford.nlp.pipeline.AnnotationTest.testFromList();edu.stanford.nlp.pipeline.Annotation.toString();1.0
edu.stanford.nlp.pipeline.AnnotationTest.testFromList();edu.stanford.nlp.ling.SentenceUtils.toCoreLabelList(java.lang.String[]);0.8369494080543518
edu.stanford.nlp.trees.tregex.tsurgeon.TsurgeonTest.testAuxiliaryTreeErrors();edu.stanford.nlp.trees.tregex.tsurgeon.Tsurgeon.parseOperation(java.lang.String);1.0
edu.stanford.nlp.process.AmericanizeTest.testAmericanize();edu.stanford.nlp.process.Americanize.americanize(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithoutEol();edu.stanford.nlp.io.IOUtils.getLineIterable(java.io.Reader, int, boolean);0.9999999403953552
edu.stanford.nlp.io.IOUtilsTest.testLineIterableWithoutEol();edu.stanford.nlp.io.IOUtils.LineReaderIterable.iterator();0.9056532979011536
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.AbstractCounter.incrementCount(E);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.ClassicCounter.incrementCount(E);0.9430754780769348
edu.stanford.nlp.stats.CounterTestBase.testIncrement();edu.stanford.nlp.stats.IntCounter.incrementCount(E);0.8548898100852966
edu.stanford.nlp.trees.TreebankLanguagePackTest.testBasicCategory();edu.stanford.nlp.trees.AbstractTreebankLanguagePack.basicCategory(java.lang.String);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.Match.toString();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieFindAll();edu.stanford.nlp.ling.tokensregex.matcher.TrieMapMatcher.findAllMatches(K[]);0.8656101226806641
edu.stanford.nlp.pipeline.RelationExtractorAnnotatorTest.testModelName();edu.stanford.nlp.pipeline.RelationExtractorAnnotator.getModelName(java.util.Properties);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.getRelation(edu.stanford.nlp.util.Interval<E>);1.0
edu.stanford.nlp.util.IntervalTest.testIntervalRelations();edu.stanford.nlp.util.Interval.getRelationFlags(edu.stanford.nlp.util.Interval<E>);0.9204331636428833
edu.stanford.nlp.util.IterablesTest.testMerge();edu.stanford.nlp.util.Iterables.merge(java.lang.Iterable<V>, java.lang.Iterable<V>, java.util.Comparator<V>);1.0
edu.stanford.nlp.util.SetsTest.testCross();edu.stanford.nlp.util.Sets.cross(java.util.Set<E>, java.util.Set<F>);1.0
edu.stanford.nlp.pipeline.RelationExtractorAnnotatorTest.testVerbose();edu.stanford.nlp.pipeline.RelationExtractorAnnotator.getVerbose(java.util.Properties);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testgetSubListIndex();edu.stanford.nlp.util.ArrayUtils.getSubListIndex(java.lang.Object[], java.lang.Object[]);1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.keySet();1.0
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.size();0.9736842513084412
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.containsKey(java.lang.Object);0.9000000357627869
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.get(K[]);0.8473684191703796
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.toFormattedString();0.8470588326454163
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.remove(K[]);0.8105262517929077
edu.stanford.nlp.ling.tokensregex.matcher.TrieMapTest.testTrieBasic();edu.stanford.nlp.ling.tokensregex.matcher.TrieMap.entrySet();0.800000011920929
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.Interner.getGlobal();1.0
edu.stanford.nlp.util.concurrent.SynchronizedInternerTest.testGlobal();edu.stanford.nlp.util.concurrent.SynchronizedInterner.globalIntern(T);0.8614485859870911
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIteratorRemove();edu.stanford.nlp.graph.DirectedMultiGraph.EdgeIterator.remove();1.0
edu.stanford.nlp.util.LazyTest.testOfCalledOnlyOnce();edu.stanford.nlp.util.Lazy.of(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testOfCalledOnlyOnce();edu.stanford.nlp.util.Lazy.getIfDefined();0.8769577741622925
edu.stanford.nlp.util.LazyTest.testCachedGC();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testLoadCollection();edu.stanford.nlp.util.CollectionUtils.loadCollection(java.io.File, java.lang.Class<T>, java.util.Collection<T>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testLoadCollection();edu.stanford.nlp.util.CollectionUtils.loadCollection(java.lang.String, java.lang.Class<T>, java.util.Collection<T>);0.875
edu.stanford.nlp.util.ArrayCoreMapTest.testNoHanging();edu.stanford.nlp.util.ArrayCoreMap.toString();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoopEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.toString();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.hashCode();0.9577945470809937
edu.stanford.nlp.util.ArrayCoreMapTest.testObjectLoops();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8150717616081238
edu.stanford.nlp.stats.CountersTest.testSerialization();edu.stanford.nlp.stats.ClassicCounter.equals(java.lang.Object);1.0
edu.stanford.nlp.process.PTBTokenizerTest.testUntok();edu.stanford.nlp.process.PTBTokenizer.ptb2Text(java.lang.String);1.0
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();edu.stanford.nlp.stats.IntCounter.entrySet();1.0
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();null.entrySet();0.993375837802887
edu.stanford.nlp.stats.CounterTestBase.testEntrySet();edu.stanford.nlp.stats.ClassicCounter.entrySet();0.9638524055480957
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.stats.CounterTestBase.testComparators();edu.stanford.nlp.stats.Counters.toComparator(edu.stanford.nlp.stats.Counter<E>, boolean, boolean);0.9897897243499756
edu.stanford.nlp.util.LazyTest.testCachedCalledOnlyOnce();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testCachedCalledOnlyOnce();edu.stanford.nlp.util.Lazy.getIfDefined();0.8045588135719299
edu.stanford.nlp.util.LazyTest.testOf();edu.stanford.nlp.util.Lazy.of(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testCached();edu.stanford.nlp.util.Lazy.cache(java.util.function.Supplier<E>);1.0
edu.stanford.nlp.util.LazyTest.testFrom();edu.stanford.nlp.util.Lazy.from(E);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getIndex(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getSize();0.9893091917037964
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.<init>();0.8531179428100586
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.getTag(int);0.8503301739692688
edu.stanford.nlp.tagger.maxent.TTagsTest.testSerialization();edu.stanford.nlp.tagger.maxent.TTags.isClosed(java.lang.String);0.8503301739692688
edu.stanford.nlp.semgraph.SemanticGraphTest.testIsAncestor();edu.stanford.nlp.semgraph.SemanticGraph.isAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetPathToRoot();edu.stanford.nlp.semgraph.SemanticGraph.getPathToRoot(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetSiblings();edu.stanford.nlp.semgraph.SemanticGraph.getSiblings(edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testGetCommonAncestor();edu.stanford.nlp.semgraph.SemanticGraph.getCommonAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.semgraph.SemanticGraphTest.testCommonAncestor();edu.stanford.nlp.semgraph.SemanticGraph.commonAncestor(edu.stanford.nlp.ling.IndexedWord, edu.stanford.nlp.ling.IndexedWord);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testNoPrefixIO();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2IOBES();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2IOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1NoPrefix();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOBESIOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB2BILOU();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IOB1();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IOB2();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testIOB1IO();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.sequences.IOBUtilsTest.testBILOUIOBES();edu.stanford.nlp.sequences.IOBUtils.entitySubclassify(java.util.List<TOK>, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<java.lang.String>>, java.lang.String, java.lang.String, boolean);1.0
edu.stanford.nlp.util.MetaClassTest.testCastSimple();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastCollection();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastRegression();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastFromString();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastEnum();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastMap();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastArray();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastStream();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.MetaClassTest.testCastStringArray();edu.stanford.nlp.util.MetaClass.cast(java.lang.String, java.lang.reflect.Type);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.containsKey(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.size();0.927860677242279
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.values();0.8947667479515076
edu.stanford.nlp.util.CollectionValuedMapTest.testBasicOperations();edu.stanford.nlp.util.CollectionValuedMap.allValues();0.8530526757240295
edu.stanford.nlp.naturalli.UtilTest.extractNERNoNER();edu.stanford.nlp.naturalli.Util.extractNER(java.util.List<edu.stanford.nlp.ling.CoreLabel>, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.dcoref.RulesTest.testIsAcronym();edu.stanford.nlp.dcoref.Rules.isAcronym(java.util.List<edu.stanford.nlp.ling.CoreLabel>, java.util.List<edu.stanford.nlp.ling.CoreLabel>);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.deltaDecode(byte[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.deltaEncode(int[]);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testDelta();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);0.8393626809120178
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToChar();edu.stanford.nlp.util.ConvertByteArray.byteArrToChar(byte[], int);1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadNormal();edu.stanford.nlp.tagger.io.TSVTaggedFileReader.hasNext();0.8393837809562683
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();1.0
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testReadBackwards();edu.stanford.nlp.ling.Word.word();0.834373950958252
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(byte[], int, long[], int, int);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.edgeIterable();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIterables();edu.stanford.nlp.graph.DirectedMultiGraph.incomingEdgeIterable(V);0.9105322957038879
edu.stanford.nlp.graph.DirectedMultiGraphTest.testLoops();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);1.0
edu.stanford.nlp.neural.NeuralUtilsTest.testCosine();edu.stanford.nlp.neural.NeuralUtils.cosine(org.ejml.simple.SimpleMatrix, org.ejml.simple.SimpleMatrix);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(boolean[]);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File, java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testIterFilesRecursive();edu.stanford.nlp.io.IOUtils.iterFilesRecursive(java.io.File, java.util.regex.Pattern);1.0
edu.stanford.nlp.util.ComparatorsTest.testArrayComparator();edu.stanford.nlp.util.Comparators.getArrayComparator();1.0
edu.stanford.nlp.util.ComparatorsTest.testArrayComparator();edu.stanford.nlp.util.ArrayUtils.compareArrays(T[], T[]);0.9396922588348389
edu.stanford.nlp.naturalli.OperatorTest.testValuesOrderedDesc();edu.stanford.nlp.naturalli.Operator.values();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.iterator();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.MapFactory.treeMapFactory();0.8585359454154968
edu.stanford.nlp.util.TwoDimensionalMapTest.testTreeMapIterator();edu.stanford.nlp.util.TwoDimensionalMap.valueIterator();0.8058755397796631
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.ling.CoreLabel.setWord(java.lang.String);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCoreLabelSetWordBehavior();edu.stanford.nlp.util.ArrayCoreMap.hashCode();0.8467658758163452
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.<init>(edu.stanford.nlp.util.ArrayCoreMap);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCopyConstructor();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8142105340957642
edu.stanford.nlp.process.MorphologyTest.testDash();edu.stanford.nlp.process.Morphology.stem(java.lang.String);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testAddAll();edu.stanford.nlp.util.TwoDimensionalMap.addAll(edu.stanford.nlp.util.TwoDimensionalMap<? extends K1, ? extends K2, ? extends V2>, java.util.function.Function<V2, V>);1.0
edu.stanford.nlp.ling.SentenceTest.testTaggedWordListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean);1.0
edu.stanford.nlp.ling.SentenceTest.testTaggedWordListToString();edu.stanford.nlp.ling.SentenceUtils.listToString(java.util.List<T>, boolean, java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[]);1.0
edu.stanford.nlp.util.IterableIteratorTest.testBasic();edu.stanford.nlp.util.IterableIterator.hasNext();1.0
edu.stanford.nlp.util.CoreMapsTest.testMaps();edu.stanford.nlp.util.CoreMaps.asMap(COLL, java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<V>>);1.0
edu.stanford.nlp.util.CoreMapsTest.testMaps();null.containsKey(java.lang.Object);0.8121212124824524
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionValuedMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionValuedMapTest.testMergingOperations();edu.stanford.nlp.util.CollectionFactory.HashSetFactory.newEmptyCollection();0.8804651498794556
edu.stanford.nlp.util.CollectionValuedMapTest.testAddRemove();edu.stanford.nlp.util.CollectionValuedMap.remove(java.lang.Object);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDouble();edu.stanford.nlp.util.ConvertByteArray.byteArrToDouble(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLong();edu.stanford.nlp.util.ConvertByteArray.byteArrToLong(byte[], int);1.0
edu.stanford.nlp.naturalli.PolarityTest.equals();edu.stanford.nlp.naturalli.Polarity.equals(java.lang.Object);1.0
edu.stanford.nlp.naturalli.PolarityTest.equalsString();edu.stanford.nlp.naturalli.Polarity.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testMaxIndex();edu.stanford.nlp.util.CollectionUtils.maxIndex(java.util.List<T>);1.0
edu.stanford.nlp.util.StringUtilsTest.testCSV();edu.stanford.nlp.util.StringUtils.splitOnCharWithQuoting(java.lang.String, char, char, char);1.0
edu.stanford.nlp.tagger.maxent.ExtractorTest.testGetParenthesizedArg();edu.stanford.nlp.tagger.maxent.Extractor.getParenthesizedArg(java.lang.String, int);1.0
edu.stanford.nlp.util.ArrayMapTest.testValues();edu.stanford.nlp.util.ArrayMap.Entry.getValue();1.0
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.put(K, V);1.0
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.clear();0.9313635230064392
edu.stanford.nlp.util.ArrayMapTest.testPutDuplicateValues();edu.stanford.nlp.util.ArrayMap.size();0.8621273636817932
edu.stanford.nlp.util.ArrayMapTest.testPutAll();edu.stanford.nlp.util.ArrayMap.put(K, V);1.0
edu.stanford.nlp.util.ArrayMapTest.testEquals();edu.stanford.nlp.util.ArrayMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayMapTest.testEntrySet();edu.stanford.nlp.util.ArrayMap.entrySet();1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetNotExists();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.9591856002807617
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.io.File);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.9698230028152466
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetIsDir();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.8753045797348022
edu.stanford.nlp.io.IOUtilsTest.testTail();edu.stanford.nlp.io.IOUtils.tail(java.io.File, int);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);0.9337482452392578
edu.stanford.nlp.io.IOUtilsTest.testCpSourceDirTargetNotExists();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.8399702906608582
edu.stanford.nlp.io.IOUtilsTest.testCpRecursive();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpRecursive();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File, boolean);0.9355717897415161
edu.stanford.nlp.io.IOUtilsTest.testCpRecursive();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.8935227394104004
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.slurpFile(java.lang.String);1.0
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.writeStringToFile(java.lang.String, java.lang.String, java.lang.String);0.8738402128219604
edu.stanford.nlp.io.IOUtilsTest.testCpSourceFileTargetIsDir();edu.stanford.nlp.io.IOUtils.cp(java.io.File, java.io.File);0.8094035387039185
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[], int, boolean[], int, int);1.0
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.IntCounter.defaultReturnValue();1.0
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();null.defaultReturnValue();1.0
edu.stanford.nlp.stats.CounterTestBase.testReturnValue();edu.stanford.nlp.stats.ClassicCounter.defaultReturnValue();0.9831052422523499
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.next();1.0
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.<init>(java.io.Reader, java.util.function.Function<java.lang.String, X>);0.8888888359069824
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.8624287843704224
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.util.AbstractIterator.<init>();0.8388259410858154
edu.stanford.nlp.objectbank.LineIteratorTest.testLineIterator();edu.stanford.nlp.objectbank.LineIterator.setNext();0.8203462958335876
edu.stanford.nlp.time.SUTimeTest.parseDateTimeStandardInstantFormat();edu.stanford.nlp.time.SUTime.parseDateTime(java.lang.String, boolean);0.9999999403953552
edu.stanford.nlp.time.SUTimeTest.parseDateTimeStandardInstantFormat();edu.stanford.nlp.time.SUTime.GroundedTime.getJodaTimeInstant();0.974564790725708
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someInsertionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.someDeletionRelations();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyDeletion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.conjOrPeculiarities();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.conjOrPeculiarities();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String, boolean);0.9892655611038208
edu.stanford.nlp.dcoref.RulesTest.testMentionMatchesSpeakerAnnotation();edu.stanford.nlp.dcoref.Rules.antecedentMatchesMentionSpeakerAnnotation(edu.stanford.nlp.dcoref.Mention, edu.stanford.nlp.dcoref.Mention);1.0
edu.stanford.nlp.ie.ClassifierCombinerTest.testCombination();edu.stanford.nlp.ie.ClassifierCombiner.CombinationMode.<init>();1.0
edu.stanford.nlp.ie.ClassifierCombinerTest.testCombination();edu.stanford.nlp.ling.CoreUtilities.toCoreLabelList(java.lang.String[], java.lang.String[], java.lang.String[]);0.9132075309753418
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.9999999403953552
edu.stanford.nlp.wordseg.ChineseStringUtilsTest.testMultithreadedCombineSegmentedSentence();edu.stanford.nlp.sequences.SeqClassifierFlags.<init>();0.9894570708274841
edu.stanford.nlp.util.ArrayCoreMapTest.testToShortString();edu.stanford.nlp.util.ArrayCoreMap.toShortString(char, java.lang.String[]);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testToShortString();edu.stanford.nlp.util.ArrayCoreMap.toShortString(java.lang.String[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteCharToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeCharToByteArr(byte[], int, char);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testKeySet();edu.stanford.nlp.util.ArrayCoreMap.keySet();1.0
edu.stanford.nlp.util.CoreMapTest.testCoreMap();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testPreservesString();edu.stanford.nlp.tagger.maxent.TTags.getTag(int);1.0
edu.stanford.nlp.util.IterableIteratorTest.testSpliteratorInParallel();edu.stanford.nlp.util.IterableIterator.spliterator();1.0
edu.stanford.nlp.util.IterableIteratorTest.testSpliteratorInSequence();edu.stanford.nlp.util.IterableIterator.spliterator();1.0
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.IntCounter.setCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testSetCount();null.setCount(E, double);0.9965096116065979
edu.stanford.nlp.stats.CounterTestBase.testSetCount();edu.stanford.nlp.stats.ClassicCounter.setCount(E, double);0.9470124244689941
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.AbstractCounter.logIncrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testLogIncrement();edu.stanford.nlp.stats.ClassicCounter.logIncrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.AbstractCounter.incrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.IntCounter.incrementCount(E, double);1.0
edu.stanford.nlp.stats.CounterTestBase.testIncrement2();edu.stanford.nlp.stats.ClassicCounter.incrementCount(E, double);0.9283284544944763
edu.stanford.nlp.stats.CounterTestBase.testClear();edu.stanford.nlp.stats.IntCounter.clear();1.0
edu.stanford.nlp.stats.CounterTestBase.testClear();null.clear();1.0
edu.stanford.nlp.stats.CounterTestBase.testClear();edu.stanford.nlp.stats.ClassicCounter.clear();0.9773147106170654
edu.stanford.nlp.naturalli.PolarityTest.multiplicativeTruth();edu.stanford.nlp.naturalli.Polarity.maintainsTruth(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.multiplicativeTruth();edu.stanford.nlp.naturalli.Polarity.negatesTruth(edu.stanford.nlp.naturalli.NaturalLogicRelation);0.9500997066497803
edu.stanford.nlp.tagger.io.TSVTaggedFileReaderTest.testError();edu.stanford.nlp.tagger.io.TaggedFileRecord.reader();1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcaatRemove();null.remove();1.0
edu.stanford.nlp.util.ComparatorsTest.testNullSafeComparator();edu.stanford.nlp.util.Comparators.nullSafeCompare(T, T);1.0
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectShift();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectShiftTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLogInplace();edu.stanford.nlp.math.ArrayMath.logInPlace(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLogInplace();edu.stanford.nlp.math.ArrayMath.expInPlace(double[]);0.8333333730697632
edu.stanford.nlp.util.IterablesTest.testSample();edu.stanford.nlp.util.Iterables.sample(java.lang.Iterable<T>, int, int, java.util.Random);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.io.IOUtilsTest.testReadWriteStreamFromString();edu.stanford.nlp.io.IOUtils.readStreamFromString(java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testEditDistance();edu.stanford.nlp.util.StringUtils.editDistance(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTwoTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();0.9965710043907166
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.9875620007514954
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.9776073694229126
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testSingleTags();edu.stanford.nlp.util.AbstractIterator.<init>();0.9483303427696228
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.8333998918533325
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.8333998918533325
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.8333998918533325
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8214143514633179
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testNotFound();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.8118218779563904
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.8681248426437378
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.8681248426437378
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.8681248426437378
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8561393022537231
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.8465468287467957
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testEmpty();edu.stanford.nlp.util.AbstractIterator.<init>();0.8183349967002869
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testTagInText();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.setNext();1.0
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String);0.8589664101600647
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean);0.8589664101600647
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean);0.8589664101600647
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.XMLBeginEndIterator.<init>(java.io.Reader, java.lang.String, java.util.function.Function<java.lang.String, E>, boolean, boolean, boolean);0.8466132283210754
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.objectbank.IdentityFunction.<init>();0.8367264270782471
edu.stanford.nlp.objectbank.XMLBeginEndIteratorTest.testFound();edu.stanford.nlp.util.AbstractIterator.<init>();0.8076491355895996
edu.stanford.nlp.international.spanish.SpanishUnknownWordSignaturesTest.testHasConditionalSuffix();edu.stanford.nlp.international.spanish.SpanishUnknownWordSignatures.hasConditionalSuffix(java.lang.String);1.0
edu.stanford.nlp.stats.CountersTest.testDotProduct();edu.stanford.nlp.stats.Counters.dotProduct(edu.stanford.nlp.stats.Counter<E>, edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.process.TransformXMLTest.testTransformXML1();edu.stanford.nlp.process.TransformXML.transformXML(java.lang.String[], java.util.function.Function<java.lang.String, T>, java.io.InputStream, java.io.Writer);1.0
edu.stanford.nlp.util.IterablesTest.testFilter();edu.stanford.nlp.util.Iterables.filter(java.lang.Iterable<T>, java.util.function.Predicate<T>);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.setMatchType(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.findTargetStringOffsets(java.lang.String, java.lang.String);0.9467737674713135
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testExctWsMatching();edu.stanford.nlp.util.StringUtils.join(java.lang.Iterable<X>, java.lang.String);0.8176281452178955
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.setMatchType(edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher$MatchType);1.0
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcher.findTargetStringOffsets(java.lang.String, java.lang.String);0.9931035041809082
edu.stanford.nlp.ling.tokensregex.MultiWordStringMatcherTest.testLnrmMatching();edu.stanford.nlp.util.StringUtils.join(java.lang.Iterable<X>, java.lang.String);0.9142515659332275
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.CallableJob.call();1.0
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.8764509558677673
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testUnsynchronized();edu.stanford.nlp.util.concurrent.MulticoreWrapper.buildThreadPool(int);0.8031007647514343
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.CallableJob.call();1.0
edu.stanford.nlp.util.concurrent.MulticoreWrapperTest.testSynchronization();edu.stanford.nlp.util.concurrent.MulticoreWrapper.QueueItem.<init>(O, int);0.800000011920929
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCoref();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsOrderPreserving();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefWithParse();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsRegexNERAfterNER();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsCorefBeforeOpenIE();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.pipeline.StanfordCoreNLPTest.testPrereqAnnotatorsBasic();edu.stanford.nlp.pipeline.StanfordCoreNLP.ensurePrerequisiteAnnotators(java.lang.String[], java.util.Properties);1.0
edu.stanford.nlp.util.StringUtilsTest.testStringIsNullOrEmpty();edu.stanford.nlp.util.StringUtils.isNullOrEmpty(java.lang.String);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallRemoveVertex();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertices(java.util.Collection<V>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.8768434524536133
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8394882082939148
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove2();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.834785521030426
edu.stanford.nlp.graph.DirectedMultiGraphTest.testIsNeighbor();edu.stanford.nlp.graph.DirectedMultiGraph.isNeighbor(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAdd();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.containsVertex(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallContains();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.8521711826324463
edu.stanford.nlp.graph.DirectedMultiGraphTest.testGetAllVertices();edu.stanford.nlp.graph.DirectedMultiGraph.getAllVertices();0.9999999403953552
edu.stanford.nlp.graph.DirectedMultiGraphTest.testNeighbors();edu.stanford.nlp.graph.DirectedMultiGraph.getNeighbors(V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.9999999403953552
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.9958715438842773
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.98835289478302
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);0.8489354252815247
edu.stanford.nlp.graph.DirectedMultiGraphTest.testSmallAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.833501935005188
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertices(java.util.Collection<V>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdge(V, V, E);0.9966840744018555
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.9848795533180237
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.9165938496589661
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8458666205406189
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);0.8431944847106934
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.8380311727523804
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.util.MapFactory.hashMapFactory();0.9263090491294861
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.9004261493682861
edu.stanford.nlp.graph.DirectedMultiGraphTest.testCopyConstructor();edu.stanford.nlp.graph.DirectedMultiGraph.<init>(edu.stanford.nlp.graph.DirectedMultiGraph<V, E>);0.842077374458313
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertices(java.util.Collection<V>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.add(V, V, E);0.8922566175460815
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.isEmpty();0.8917302489280701
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8467012643814087
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.getNumVertices();0.8405966758728027
edu.stanford.nlp.graph.DirectedMultiGraphTest.testAddRemove3();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);0.838164210319519
edu.stanford.nlp.math.ArrayMathTest.testInnerProduct();edu.stanford.nlp.math.ArrayMath.innerProduct(double[], double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(char[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testCharArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.charArrToByteArr(char[], int, int);1.0
edu.stanford.nlp.international.spanish.SpanishUnknownWordSignaturesTest.testHasImperfectErIrSuffix();edu.stanford.nlp.international.spanish.SpanishUnknownWordSignatures.hasImperfectErIrSuffix(java.lang.String);1.0
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.objectsList();1.0
edu.stanford.nlp.util.HashIndexTest.testCopyConstructor();edu.stanford.nlp.util.HashIndex.<init>(edu.stanford.nlp.util.Index<? extends E>);0.8431469798088074
edu.stanford.nlp.math.ArrayMathTest.testExpLog();edu.stanford.nlp.math.ArrayMath.exp(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testExpLog();edu.stanford.nlp.math.ArrayMath.log(double[]);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testSequenceSampler();edu.stanford.nlp.sequences.SequenceSampler.bestSequence(edu.stanford.nlp.sequences.SequenceModel);1.0
edu.stanford.nlp.sequences.BestSequenceFinderTest.testSequenceSampler();edu.stanford.nlp.sequences.SequenceSampler.<init>();0.8125
edu.stanford.nlp.math.ArrayMathTest.testNormalize();edu.stanford.nlp.math.ArrayMath.normalize(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmin();edu.stanford.nlp.math.ArrayMath.argmin(double[]);1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testBasicIterator();edu.stanford.nlp.util.TwoDimensionalMap.iterator();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testMapFactory();edu.stanford.nlp.util.MapFactory.identityHashMapFactory();1.0
edu.stanford.nlp.util.TwoDimensionalMapTest.testMapFactory();edu.stanford.nlp.util.TwoDimensionalMap.put(K1, K2, V);0.8102428317070007
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testIterator();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.iterator();1.0
edu.stanford.nlp.math.ArrayMathTest.testPairwiseSubtract();edu.stanford.nlp.math.ArrayMath.pairwiseSubtract(double[], double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[], int, int[], int, int);1.0
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testIsPunc();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.isPunc(java.lang.String);1.0
edu.stanford.nlp.util.FunctionsTest.testCompose();edu.stanford.nlp.util.Functions.compose(java.util.function.Function<T1, T2>, java.util.function.Function<? super T2, T3>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(int[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(int[], int, int);1.0
edu.stanford.nlp.ie.pascal.ISODateInstanceTest.testIsAfter();edu.stanford.nlp.ie.pascal.ISODateInstance.isAfter(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testTr();edu.stanford.nlp.util.StringUtils.tr(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.time.SUTimeTest.testResolveDowToDay();edu.stanford.nlp.time.JodaTimeUtils.resolveDowToDay(org.joda.time.Partial);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.spotTestJoinTable();edu.stanford.nlp.naturalli.NaturalLogicRelation.join(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.fixedIndex();edu.stanford.nlp.naturalli.NaturalLogicRelation.byFixedIndex(int);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testAsSet();edu.stanford.nlp.util.ArrayUtils.asSet(T[]);1.0
edu.stanford.nlp.util.CoreMapTest.testEquality();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);0.9999999403953552
edu.stanford.nlp.util.XMLUtilsTest.testStripTags();edu.stanford.nlp.util.XMLUtils.stripTags(java.io.Reader, java.util.List<java.lang.Integer>, boolean);1.0
edu.stanford.nlp.math.SloppyMathTest.testArccos();edu.stanford.nlp.math.SloppyMath.acos(double);1.0
edu.stanford.nlp.util.StringUtilsTest.testExpandEnvironmentVariables();edu.stanford.nlp.util.StringUtils.expandEnvironmentVariables(java.lang.String, java.util.Map<java.lang.String, java.lang.String>);1.0
edu.stanford.nlp.util.ReflectionLoadingTest.testOneArg();edu.stanford.nlp.util.ReflectionLoading.loadByReflection(java.lang.String, java.lang.Object[]);1.0
edu.stanford.nlp.util.MetaClassTest.testInheritance();edu.stanford.nlp.util.MetaClass.createInstance(java.lang.Object[]);1.0
edu.stanford.nlp.util.ReflectionLoadingTest.testNoArgs();edu.stanford.nlp.util.ReflectionLoading.loadByReflection(java.lang.String, java.lang.Object[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIsSubList();edu.stanford.nlp.util.CollectionUtils.isSubList(java.util.List<T>, java.util.List<? super T>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteShortToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeShortToByteArr(byte[], int, short);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeEdges(V, V);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testRemove();edu.stanford.nlp.graph.DirectedMultiGraph.removeVertex(V);0.9243102073669434
edu.stanford.nlp.util.ArrayCoreMapTest.testRemove();edu.stanford.nlp.util.ArrayCoreMap.remove(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.get(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testGetAndSet();edu.stanford.nlp.util.ArrayCoreMap.set(java.lang.Class<? extends edu.stanford.nlp.util.TypesafeMap.edu.stanford.nlp.util.TypesafeMap$Key<VALUE>>, VALUE);0.8431603312492371
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ArrayCoreMap.size();1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testCreate();edu.stanford.nlp.util.ErasureUtils.uncheckedCast(java.lang.Object);0.815031886100769
edu.stanford.nlp.util.ArrayCoreMapTest.testEqualsReversedInsertOrder();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.CoreMapTest.testToShorterString();edu.stanford.nlp.util.ArrayCoreMap.toShorterString(java.lang.String[]);1.0
edu.stanford.nlp.util.ArrayCoreMapTest.testSimpleEquals();edu.stanford.nlp.util.ArrayCoreMap.equals(java.lang.Object);1.0
edu.stanford.nlp.util.DeltaIndexTest.testSize();edu.stanford.nlp.util.DeltaIndex.size();1.0
edu.stanford.nlp.util.DeltaIndexTest.testSize();edu.stanford.nlp.util.HashIndex.size();0.9534058570861816
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteAStringToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeAStringToByteArr(byte[], int, java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUString2();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[], int, int);1.0
edu.stanford.nlp.util.HashIndexTest.testIndexOf();edu.stanford.nlp.util.HashIndex.indexOf(E);1.0
edu.stanford.nlp.util.DeltaIndexTest.testIndex();edu.stanford.nlp.util.DeltaIndex.indexOf(E);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testPreservesIndex();edu.stanford.nlp.tagger.maxent.TTags.getIndex(java.lang.String);1.0
edu.stanford.nlp.patterns.surface.SurfacePatternTest.testSubsumesArray();edu.stanford.nlp.patterns.surface.SurfacePattern.subsumesArray(java.lang.Object[], java.lang.Object[]);1.0
edu.stanford.nlp.util.ComparatorsTest.testListComparator();edu.stanford.nlp.util.Comparators.getListComparator();1.0
edu.stanford.nlp.util.ComparatorsTest.testListComparator();edu.stanford.nlp.util.Comparators.compareLists(java.util.List<? extends X>, java.util.List<? extends X>);0.9324830174446106
edu.stanford.nlp.machinereading.structure.SpanTest.testUnion();edu.stanford.nlp.ie.machinereading.structure.Span.union(edu.stanford.nlp.ie.machinereading.structure.Span, edu.stanford.nlp.ie.machinereading.structure.Span);1.0
edu.stanford.nlp.pipeline.JSONOutputterTest.testSanitizeJSONString();edu.stanford.nlp.util.StringUtils.escapeJsonString(java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testEscapeJsonString();edu.stanford.nlp.util.StringUtils.escapeJsonString(java.lang.String);1.0
edu.stanford.nlp.parser.shiftreduce.ReorderingOracleTest.testReorderIncorrectBinaryTransition();edu.stanford.nlp.parser.shiftreduce.ReorderingOracle.reorderIncorrectBinaryTransition(java.util.List<edu.stanford.nlp.parser.shiftreduce.Transition>);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testClosed();edu.stanford.nlp.tagger.maxent.TTags.isClosed(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testCanCount();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testCanCount();edu.stanford.nlp.tagger.maxent.TTags.getSize();0.9242992997169495
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToIntArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToIntArr(byte[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testParseDouble();edu.stanford.nlp.math.SloppyMath.parseDouble(boolean, long, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testNorm_inf();edu.stanford.nlp.math.ArrayMath.norm_inf(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testArgmax();edu.stanford.nlp.math.ArrayMath.argmax(double[]);1.0
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.hasNext();1.0
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.defaultDelimitRegExIterator(java.io.Reader, java.lang.String);0.9077795743942261
edu.stanford.nlp.objectbank.DelimitRegExIteratorTest.testFunctionality();edu.stanford.nlp.objectbank.DelimitRegExIterator.next();0.8625797629356384
edu.stanford.nlp.util.HashIndexTest.testGet();edu.stanford.nlp.util.HashIndex.get(int);0.9999999403953552
edu.stanford.nlp.util.DeltaIndexTest.testGet();edu.stanford.nlp.util.DeltaIndex.get(int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testToList();edu.stanford.nlp.util.CollectionUtils.toList(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testToSet();edu.stanford.nlp.util.CollectionUtils.toSet(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testObjects();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.objects(int[]);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.util.CollectionUtils.sorted(java.lang.Iterable<T>);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.isEdge(V, V);0.9203177094459534
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.isNeighbor(V, V);0.9141494631767273
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getEdges(V, V);0.8423206210136414
edu.stanford.nlp.graph.DirectedMultiGraphTest.testEdgesNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getNeighbors(V);0.813019335269928
edu.stanford.nlp.graph.DirectedMultiGraphTest.testConnectedComponents();edu.stanford.nlp.graph.DirectedMultiGraph.getConnectedComponents();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(byte[], int, short[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(byte[], int, float[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testSafeSumAndMean();edu.stanford.nlp.math.ArrayMath.safeMean(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(float[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testHasNaN();edu.stanford.nlp.math.ArrayMath.hasNaN(double[]);1.0
edu.stanford.nlp.naturalli.PolarityTest.antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.additiveProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.additive_antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.noneProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.multiplicative_antimultiplicativeProject();edu.stanford.nlp.naturalli.Polarity.projectLexicalRelation(edu.stanford.nlp.naturalli.NaturalLogicRelation);1.0
edu.stanford.nlp.naturalli.PolarityTest.upwardDownward();edu.stanford.nlp.naturalli.Polarity.isDownwards();1.0
edu.stanford.nlp.naturalli.PolarityTest.upwardDownward();edu.stanford.nlp.naturalli.Polarity.isUpwards();0.8565399646759033
edu.stanford.nlp.math.ArrayMathTest.testFliterInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterInfinite();edu.stanford.nlp.math.ArrayMath.filterInfinite(double[]);0.9890154600143433
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.filterNaNAndInfinite(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaNAndInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);0.918415904045105
edu.stanford.nlp.util.StringUtilsTest.testGetBaseName();edu.stanford.nlp.util.StringUtils.getBaseName(java.lang.String);1.0
edu.stanford.nlp.util.StringUtilsTest.testGetBaseName();edu.stanford.nlp.util.StringUtils.getBaseName(java.lang.String, java.lang.String);1.0
edu.stanford.nlp.util.MapsTest.testAddAllWithFunction();edu.stanford.nlp.util.Maps.addAll(java.util.Map<K, V1>, java.util.Map<K, V2>, java.util.function.Function<V2, V1>);1.0
edu.stanford.nlp.util.BeamTest.testSize();edu.stanford.nlp.util.Beam.size();1.0
edu.stanford.nlp.util.IterablesTest.testZip();edu.stanford.nlp.util.Iterables.zip(T1[], T2[]);1.0
edu.stanford.nlp.util.IterablesTest.testZip();edu.stanford.nlp.util.Iterables.zip(java.util.Iterator<T1>, java.util.Iterator<T2>);0.9858778119087219
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmptyIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmptyIter();null.<init>(edu.stanford.nlp.util.CollectionUtilsTest);0.8526179194450378
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmptyIter();null.hasNext();0.8341732025146484
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmptyIter();null.next();0.8336683511734009
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatMultiIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatMultiIter();null.<init>(edu.stanford.nlp.util.CollectionUtilsTest);0.8562803864479065
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatSingleIter();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatSingleIter();null.hasNext();0.9130822420120239
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatSingleIter();null.<init>(edu.stanford.nlp.util.CollectionUtilsTest);0.8690003752708435
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatSingleIter();null.next();0.8213814496994019
edu.stanford.nlp.stats.CountersTest.testMin();edu.stanford.nlp.stats.Counters.min(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteFloatToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeFloatToByteArr(byte[], int, float);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr4();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteIntToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeIntToByteArr(byte[], int, int);1.0
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.pop();1.0
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.peek();0.9583333730697632
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.<init>(edu.stanford.nlp.util.TreeShapedStack<T>, T, int);0.9070791006088257
edu.stanford.nlp.util.TreeShapedStackTest.testBasicOperations();edu.stanford.nlp.util.TreeShapedStack.push(T);0.8715294599533081
edu.stanford.nlp.util.TreeShapedStackTest.testEquals();edu.stanford.nlp.util.TreeShapedStack.equals(java.lang.Object);1.0
edu.stanford.nlp.util.ArrayMapTest.testClear();edu.stanford.nlp.util.ArrayMap.clear();1.0
edu.stanford.nlp.process.LexerUtilsTest.testIndexOfRegex();edu.stanford.nlp.process.LexerUtils.indexOfRegex(java.util.regex.Pattern, java.lang.String);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testStripCorp();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testFilterStopWords();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);1.0
edu.stanford.nlp.util.AcronymMatcherTest.testBasic();edu.stanford.nlp.util.AcronymMatcher.isAcronym(java.lang.String, java.lang.String[]);0.9999999403953552
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testIndexOf();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.indexOf(E);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testToArray();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.contains(java.lang.Object);1.0
edu.stanford.nlp.stats.TwoDimensionalCounterTest.testTotalCount();edu.stanford.nlp.stats.TwoDimensionalCounter.totalCount();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAString1();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUStringArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToUStringArr(byte[]);1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.removeZeroDegreeNodes();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testDelZeroDegreeNodes();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8486369252204895
edu.stanford.nlp.graph.DirectedMultiGraphTest.testForm();edu.stanford.nlp.graph.DirectedMultiGraph.toString();1.0
edu.stanford.nlp.graph.DirectedMultiGraphTest.testForm();edu.stanford.nlp.graph.DirectedMultiGraph.getNumEdges();0.8049206733703613
edu.stanford.nlp.util.SetsTest.testPowerset();edu.stanford.nlp.util.Sets.powerSet(java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testIntersection();edu.stanford.nlp.util.Sets.intersection(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testDiff();edu.stanford.nlp.util.Sets.diff(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.util.SetsTest.testUnion();edu.stanford.nlp.util.Sets.union(java.util.Set<E>, java.util.Set<E>);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaN();edu.stanford.nlp.math.ArrayMath.filterNaN(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testFliterNaN();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);0.8884135484695435
edu.stanford.nlp.optimization.GoldenSectionLineSearchTest.testEasy();edu.stanford.nlp.optimization.GoldenSectionLineSearch.minimize(java.util.function.DoubleUnaryOperator);1.0
edu.stanford.nlp.optimization.GoldenSectionLineSearchTest.testEasy();edu.stanford.nlp.util.Generics.newHashMap();0.9849902987480164
edu.stanford.nlp.optimization.GoldenSectionLineSearchTest.testEasy();edu.stanford.nlp.util.logging.Redwood.channels(java.lang.Object[]);0.9124175310134888
edu.stanford.nlp.util.ConvertByteArrayTest.testFloatArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.floatArrToByteArr(float[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[]);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testGet();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.get(int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(short[]);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(double, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(float, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testIntPow();edu.stanford.nlp.math.SloppyMath.intPow(int, int);1.0
edu.stanford.nlp.util.ArrayUtilsTest.testRemoveAt();edu.stanford.nlp.util.ArrayUtils.removeAt(java.lang.Object[], int);1.0
edu.stanford.nlp.util.StringUtilsTest.testDecodeArray();edu.stanford.nlp.util.StringUtils.decodeArray(java.lang.String);1.0
edu.stanford.nlp.math.ArrayMathTest.test2dAdd();edu.stanford.nlp.math.ArrayMath.addInPlace(double[][], double[][]);1.0
edu.stanford.nlp.ie.QuantifiableEntityNormalizerTest.testTimeNormalization();edu.stanford.nlp.ie.QuantifiableEntityNormalizer.normalizedTimeString(java.lang.String, edu.stanford.nlp.time.Timex);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[], int, char[], int, int);1.0
edu.stanford.nlp.util.StringUtilsTest.testRegexGroups();edu.stanford.nlp.util.StringUtils.regexGroups(java.util.regex.Pattern, java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteUStringToByteArr2();edu.stanford.nlp.util.ConvertByteArray.writeUStringToByteArr(byte[], int, java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToCharArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToCharArr(byte[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testPow();edu.stanford.nlp.math.ArrayMath.pow(double[], double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShort();edu.stanford.nlp.util.ConvertByteArray.byteArrToShort(byte[], int);1.0
edu.stanford.nlp.math.ArrayMathTest.testAddInPlace();edu.stanford.nlp.math.ArrayMath.addInPlace(double[], double);1.0
edu.stanford.nlp.util.XMLUtilsTest.testXMLTag();edu.stanford.nlp.util.XMLUtils.findSpace(java.lang.String, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testAStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.aStringArrToByteArr(java.lang.String[]);1.0
edu.stanford.nlp.tagger.maxent.ExtractorFramesRareTest.testAllNumeric();edu.stanford.nlp.tagger.maxent.RareExtractor.allNumeric(java.lang.String);1.0
edu.stanford.nlp.math.ArrayMathTest.testKLDivergence();edu.stanford.nlp.math.ArrayMath.klDivergence(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSumAndMean();edu.stanford.nlp.math.ArrayMath.mean(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testJensenShannon();edu.stanford.nlp.math.ArrayMath.jensenShannonDivergence(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testSum();edu.stanford.nlp.math.ArrayMath.sum(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testUStringArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.uStringArrToByteArr(java.lang.String[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testCountNaN();edu.stanford.nlp.math.ArrayMath.countNaN(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloat();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloat(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[], int, long[], int, int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testContainsAny();edu.stanford.nlp.util.CollectionUtils.containsAny(java.util.Collection<T>, java.util.Collection<T>);1.0
edu.stanford.nlp.neural.NeuralUtilsTest.testIsZero();edu.stanford.nlp.neural.NeuralUtils.isZero(org.ejml.simple.SimpleMatrix);1.0
edu.stanford.nlp.stats.CountersTest.testArgmin();edu.stanford.nlp.stats.Counters.argmin(edu.stanford.nlp.stats.Counter<E>);1.0
edu.stanford.nlp.util.HashIndexTest.testIterator();edu.stanford.nlp.util.HashIndex.iterator();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(double[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testShortArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.shortArrToByteArr(short[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testRound2();edu.stanford.nlp.math.SloppyMath.round(double, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testRound1();edu.stanford.nlp.math.SloppyMath.round(double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testStringAToByteArr1();edu.stanford.nlp.util.ConvertByteArray.stringUToByteArr(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteDoubleToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeDoubleToByteArr(byte[], int, double);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToLongArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToLongArr(byte[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(long[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testLongArrToByteArr1();edu.stanford.nlp.util.ConvertByteArray.longArrToByteArr(long[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmpty();edu.stanford.nlp.util.CollectionUtils.concatIterators(java.util.Iterator<E>[]);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testIteratorConcatEmpty();null.hasNext();0.9326120615005493
edu.stanford.nlp.math.ArrayMathTest.testLogSum();edu.stanford.nlp.math.ArrayMath.logSum(double[]);1.0
edu.stanford.nlp.util.HashIndexTest.testToArray();edu.stanford.nlp.util.HashIndex.objectsList();1.0
edu.stanford.nlp.util.ArrayUtilsTest.testEqualContentsInt();edu.stanford.nlp.util.ArrayUtils.equalContents(int[], int[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteLongToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeLongToByteArr(byte[], int, long);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr1();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[]);1.0
edu.stanford.nlp.math.SloppyMathTest.testIsVeryDangerous();edu.stanford.nlp.math.SloppyMath.isDangerous(double);1.0
edu.stanford.nlp.math.SloppyMathTest.testIsDangerous();edu.stanford.nlp.math.SloppyMath.isDangerous(double);1.0
edu.stanford.nlp.math.ArrayMathTest.testMultiplyInPlace();edu.stanford.nlp.math.ArrayMath.multiplyInPlace(double[], double);1.0
edu.stanford.nlp.math.SloppyMathTest.testPythonMod();edu.stanford.nlp.math.SloppyMath.pythonMod(int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testPowInPlace();edu.stanford.nlp.math.ArrayMath.powInPlace(double[], double);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testGetIndex();edu.stanford.nlp.util.CollectionUtils.getIndex(java.util.List<T>, T, int);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testGetNGrams();edu.stanford.nlp.util.CollectionUtils.getNGrams(java.util.List<T>, int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testMin();edu.stanford.nlp.math.SloppyMath.min(int, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr4();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAStringArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToAStringArr(byte[], int, java.lang.String[], int, int);1.0
edu.stanford.nlp.util.HashIndexTest.testSize();edu.stanford.nlp.util.HashIndex.size();1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(byte[], int, boolean[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToAString2();edu.stanford.nlp.util.ConvertByteArray.byteArrToAString(byte[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testMax();edu.stanford.nlp.math.SloppyMath.max(int, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteUStringToByteArr1();edu.stanford.nlp.util.ConvertByteArray.writeUStringToByteArr(byte[], int, java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testDoubleArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.doubleArrToByteArr(byte[], int, double[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToFloatArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToFloatArr(byte[], int, float[], int, int);1.0
edu.stanford.nlp.math.SloppyMathTest.testParseInt();edu.stanford.nlp.math.SloppyMath.parseInt(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToDoubleArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToDoubleArr(byte[], int, double[], int, int);1.0
edu.stanford.nlp.math.ArrayMathTest.testCountInfinite();edu.stanford.nlp.math.ArrayMath.countInfinite(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBooleanArr2();edu.stanford.nlp.util.ConvertByteArray.byteArrToBooleanArr(byte[], int, int);1.0
edu.stanford.nlp.util.StringUtilsTest.testSplitOnChar();edu.stanford.nlp.util.StringUtils.splitOnChar(java.lang.String, char);1.0
edu.stanford.nlp.util.StringUtilsTest.testGetCharacterNgrams();edu.stanford.nlp.util.StringUtils.getCharacterNgrams(java.lang.String, int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToBoolean();edu.stanford.nlp.util.ConvertByteArray.byteArrToBoolean(byte[], int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testStringAToByteArr2();edu.stanford.nlp.util.ConvertByteArray.stringAToByteArr(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testRealSentenceDoubleEscaped();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayQuote();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testRealSentence();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayEscape();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.process.TSVUtilsTest.testParseArrayTrivial();edu.stanford.nlp.process.TSVUtils.parseArray(java.lang.String);1.0
edu.stanford.nlp.util.CollectionUtilsTest.testSorted();edu.stanford.nlp.util.CollectionUtils.sorted(java.lang.Iterable<T>);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testBooleanArrToByteArr2();edu.stanford.nlp.util.ConvertByteArray.booleanArrToByteArr(boolean[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToUString1();edu.stanford.nlp.util.ConvertByteArray.byteArrToUString(byte[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testAdd();edu.stanford.nlp.math.ArrayMath.add(double[], double);1.0
edu.stanford.nlp.math.ArrayMathTest.testPairwiseAdd();edu.stanford.nlp.math.ArrayMath.pairwiseAdd(double[], double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testNumRows();edu.stanford.nlp.math.ArrayMath.numRows(double[]);1.0
edu.stanford.nlp.math.ArrayMathTest.testMultiply();edu.stanford.nlp.math.ArrayMath.multiply(double[], double);1.0
edu.stanford.nlp.math.SloppyMathTest.testLogAdd();edu.stanford.nlp.math.SloppyMath.logAdd(double, double);1.0
edu.stanford.nlp.util.StringUtilsTest.testValueSplit();edu.stanford.nlp.util.StringUtils.valueSplit(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testSameness();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testUniqueness();edu.stanford.nlp.util.HashIndex.addToIndex(E);1.0
edu.stanford.nlp.tagger.maxent.TTagsTest.testHoldsLotsOfStuff();edu.stanford.nlp.tagger.maxent.TTags.add(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testUnescape();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTree.unescape(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testIntArrToByteArr3();edu.stanford.nlp.util.ConvertByteArray.intArrToByteArr(byte[], int, int[], int, int);1.0
edu.stanford.nlp.util.concurrent.ConcurrentHashIndexTest.testSize();edu.stanford.nlp.util.concurrent.ConcurrentHashIndex.size();1.0
edu.stanford.nlp.util.StringUtilsTest.testNormalize();edu.stanford.nlp.util.StringUtils.normalize(java.lang.String);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToShortArr3();edu.stanford.nlp.util.ConvertByteArray.byteArrToShortArr(byte[], int, short[], int, int);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testWriteBooleanToByteArr();edu.stanford.nlp.util.ConvertByteArray.writeBooleanToByteArr(byte[], int, boolean);1.0
edu.stanford.nlp.math.ArrayMathTest.testHasInfinite();edu.stanford.nlp.math.ArrayMath.hasInfinite(double[]);1.0
edu.stanford.nlp.util.ConvertByteArrayTest.testByteArrToInt();edu.stanford.nlp.util.ConvertByteArray.byteArrToInt(byte[], int);1.0
edu.stanford.nlp.international.french.FrenchUnknownWordSignaturesTest.testHasPunc();edu.stanford.nlp.international.french.FrenchUnknownWordSignatures.hasPunc(java.lang.String);1.0
edu.stanford.nlp.naturalli.NaturalLogicRelationTest.entailmentState();edu.stanford.nlp.naturalli.NaturalLogicRelation.forDependencyInsertion(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testNamePattern();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.runNamePatternFalse(java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.testNamePattern();edu.stanford.nlp.trees.tregex.tsurgeon.AuxiliaryTreeTest.runNamePatternTrue(java.lang.String, java.lang.String, java.lang.String);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testNodePattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testVariablePattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.testRegexPattern();edu.stanford.nlp.trees.tregex.tsurgeon.RelabelNodeTest.runPatternTest(java.util.regex.Pattern, java.lang.String[], java.lang.String[], int, int);1.0
edu.stanford.nlp.util.DeltaMapTest.testOriginalPreserved();edu.stanford.nlp.util.DeltaMap.get(java.lang.Object);1.0
