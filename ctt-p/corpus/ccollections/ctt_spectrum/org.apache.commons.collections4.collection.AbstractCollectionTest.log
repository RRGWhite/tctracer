{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeObject()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeObject()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.tailMap(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestTailMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.tailMap(K)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeObject()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inFromRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isFromInclusive()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestSubMap.makeObject()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.subMap(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.subMap(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeObject()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 4,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inRange(K)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.ceilingEntry(K)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getToKey()": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.isToInclusive()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.getFromKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.getKeyAnalyzer()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isExternalNode()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.inToRange(K, boolean)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestViewMap.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 2
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.headMap(K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie\u003cK, V\u003e.RangeMap)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.\u003cinit\u003e(K, boolean, K, boolean)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.headMap(K)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap.createEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeMap.entrySet()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 5,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.TestHeadMap.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isRemoveSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapKeySet.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 6,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getCollection()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getFullElements()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.collection.AbstractCollectionTest.getConfirmed()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.contains(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeObject()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapValues.makeFullCollection()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionSize()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContains()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionClear()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionContainsAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testUnsupportedAdd()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherValues()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeEntryArray(K[], V[])": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getOtherElements()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullNonNullElements()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.getFullElements()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 0,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionAddAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isAddSupported()": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIsEmpty()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 0,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 7,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray2()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.hashCode()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.hashCode()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyValues()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyEntrySet()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.verify()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 0,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.verify()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyKeySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.containsKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.size()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.values()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.verifyMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.makeConfirmedCollection()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.verify()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToString()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 6,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.toString()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 5,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRemoveAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionToArray()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getConfirmed()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.set.AbstractSetTest.getCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.keySet()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getConfirmed()": 2,
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.size()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.equals(java.lang.Object)",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()",
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.resetFull()",
        "org.apache.commons.collections4.set.AbstractSetTest.getConfirmed()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionIteratorFailFast()",
      "hitSet": {},
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testCollectionRetainAll()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isRemoveSupported()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.isRemoveSupported()": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.collection.AbstractCollectionTest",
      "test": "testSerializeDeserializeThenCompare()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.isTestSerialization()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.entrySet()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 5,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 4,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeObject()": 0,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 4,
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 5
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.TestMapEntrySet.makeFullCollection()"
      ],
      "groundTruth": []
    }
  ]
}