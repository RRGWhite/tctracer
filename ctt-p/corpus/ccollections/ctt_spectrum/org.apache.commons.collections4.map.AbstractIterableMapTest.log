{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.map.AbstractIterableMapTest",
      "test": "testFailFastEntrySet()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.next()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isFailFastExpected()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 2,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 5
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.AbstractIterableMapTest",
      "test": "testFailFastKeySet()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isFailFastExpected()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 2,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 5
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.AbstractIterableMapTest",
      "test": "testFailFastValues()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setKeyValue(K, V)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getValue()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.setValue(V)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isFailFastExpected()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$Values)": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.values()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.remove(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.clear()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator.next()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isInternalNode()": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isRemoveSupported()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 4,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 2,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.decrementSize()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 5
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()"
      ],
      "groundTruth": []
    }
  ]
}