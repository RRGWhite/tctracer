{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorTest",
      "test": "testMapIteratorOrder()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 3,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 3,
        "org.apache.commons.collections4.comparators.ComparableComparator.\u003cinit\u003e()": 7,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 7,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()": 0,
        "org.apache.commons.collections4.iterators.AbstractIteratorTest.supportsFullIterator()": 0,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.InnerTestOrderedMapIterator.makeObject()": 0,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 8,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 3,
        "org.apache.commons.collections4.comparators.ComparableComparator.comparableComparator()": 7,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie$KeySet)": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.next()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.previous()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 7,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 10,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 7,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 6,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.mapIterator()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 7,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.size()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.previousEntry()": 1,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.InnerTestOrderedMapIterator.getMap()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 8,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.hasPrevious()": 0,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.iterator()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.nextEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 9,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 6
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.hasPrevious()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator.next()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()",
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.InnerTestOrderedMapIterator.makeObject()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator.previous()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieIterator.hasNext()"
      ],
      "groundTruth": []
    }
  ]
}