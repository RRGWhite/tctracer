{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyRemoveAll1()",
      "hitSet": {
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 8,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.mapIterator()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.remove()": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 3,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.hasNext()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 3,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyPutWithNullKey()",
      "hitSet": {
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, V)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 1,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 1,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.setValue(V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 1
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testLRUMultiKeyMap()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, V)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.clone()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.multiKeyMap(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 1,
        "org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyRemoveAll4()",
      "hitSet": {
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 8,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.mapIterator()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.remove()": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 3,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.hasNext()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 3,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.keyvalue.MultiKey.size()",
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyContainsKey()",
      "hitSet": {
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 8,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 4,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 5,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 7,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 5,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 7,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 7,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyRemoveAll2()",
      "hitSet": {
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 8,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.mapIterator()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.remove()": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 3,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.hasNext()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 3,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyRemoveAll3()",
      "hitSet": {
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 8,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.mapIterator()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.removeAll(java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.remove()": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 3,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.mapIterator()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.hasNext()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 3,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 8,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 5,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 7,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 7,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 7,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()",
        "org.apache.commons.collections4.map.MultiKeyMap.removeMultiKey(java.lang.Object, java.lang.Object, java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyPut()",
      "hitSet": {
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, K, K, K, V)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, V)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, V)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 3,
        "org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.setValue(V)": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, K, K, V)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 0,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, K, V)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, K, V)",
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, K, K, K, V)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()",
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, V)",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.put(K, K, K, K, V)",
        "org.apache.commons.collections4.map.MultiKeyMap.containsKey(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testNullHandling()",
      "hitSet": {
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 0,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.containsValue(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003c?, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 5,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.values()": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 0,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.values()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.containsValue(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 7,
        "org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.AbstractMapDecorator.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.containsValue(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapDecorator.remove(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testClone()",
      "hitSet": {
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.map.MultiKeyMap.clone()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 0,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 0,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 0,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.get(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()",
        "org.apache.commons.collections4.map.AbstractMapDecorator.get(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.MultiKeyMapTest",
      "test": "testMultiKeyGet()",
      "hitSet": {
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.equals(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 8,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.keyvalue.MultiKey.getKey(int)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.keyvalue.MultiKey.hashCode()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.put(org.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V)": 4,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.size()": 4,
        "org.apache.commons.collections4.map.MultiKeyMap.checkKey(org.apache.commons.collections4.keyvalue.MultiKey\u003c?\u003e)": 5,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float, int)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 7,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.decorated()": 1,
        "org.apache.commons.collections4.map.AbstractMapDecorator.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 5,
        "org.apache.commons.collections4.map.AbstractMapDecorator.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.calculateHashCode(java.lang.Object[])": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K, K, K, K, K)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.HashedMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.init()": 4,
        "org.apache.commons.collections4.keyvalue.MultiKey.\u003cinit\u003e(K[], boolean)": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.hash(java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractIterableMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapDecorator.decorated()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 7,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 2,
        "org.apache.commons.collections4.map.AbstractMapDecorator.entrySet()": 2,
        "org.apache.commons.collections4.keyvalue.MultiKey.size()": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.MultiKeyMap.\u003cinit\u003e()": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.MultiKeyMap.isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003corg.apache.commons.collections4.keyvalue.MultiKey\u003c? extends K\u003e, V\u003e, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 3,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 7,
        "org.apache.commons.collections4.map.AbstractMapDecorator.\u003cinit\u003e(java.util.Map\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 10,
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)",
        "org.apache.commons.collections4.map.MultiKeyMap.get(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"
      ],
      "groundTruth": []
    }
  ]
}