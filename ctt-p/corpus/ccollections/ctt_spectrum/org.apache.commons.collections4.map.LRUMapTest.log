{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testSynchronizedRemoveFromEntrySet()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.String, java.util.Map)": 0,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "null.run()": -1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 1,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.ThreadGroup, java.lang.String, java.util.Map, int[])": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.remove()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator.next()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntrySetIterator()": 1,
        "org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testSynchronizedRemoveFromMapIterator()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.String, java.util.Map)": 0,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator.getValue()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "null.run()": -1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.remove()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.currentEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 2,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.ThreadGroup, java.lang.String, org.apache.commons.collections4.map.LRUMap, int[])": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testInternalState_Buckets()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object, boolean)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 0,
        "org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testInternalState_getEntry_int()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(int)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testSynchronizedRemoveFromKeySet()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, ?\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.String, java.util.Map)": 0,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "null.run()": -1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 1,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.ThreadGroup, java.lang.String, java.util.Map, int[])": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.remove()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()": 0,
        "org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testRemoveLRUFirstBlocksRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.LRUMap.maxSize()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.LRUMap.maxSize()",
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testSynchronizedRemoveFromValues()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.String, java.util.Map)": 0,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "null.run()": -1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 2,
        "null.\u003cinit\u003e(org.apache.commons.collections4.map.LRUMapTest, java.lang.ThreadGroup, java.lang.String, java.util.Map, int[])": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.remove()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.values()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.remove(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003c?, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003c?, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.next()": 0,
        "org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testRemoveLRUBlocksRemoveScan()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.LRUMap.maxSize()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.LRUMap.maxSize()",
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testRemoveLRUBlocksRemove()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.LRUMap.maxSize()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.LRUMap.maxSize()",
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testAccessOrder()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 1,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.comparators.ComparableComparator.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.comparators.ComparableComparator.comparableComparator()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.setValue(V)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003c?, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003c?, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, ?\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 0,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 3,
        "org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.values()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.iterator()": 0,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 0,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object, boolean)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.next()": 0,
        "org.apache.commons.collections4.map.LRUMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()",
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.next()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testReset()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.iterators.AbstractEmptyIterator.reset()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 9,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 6,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 9,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 8,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 8,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, ?\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 7,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.reset()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 3,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 3,
        "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.emptyOrderedMapIterator()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 4,
        "org.apache.commons.collections4.iterators.AbstractEmptyIterator.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.mapIterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.size()": 0,
        "org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator.next()",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testAccessOrder2()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 1,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 4,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.setValue(V)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003c?, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003c?, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, ?\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 0,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 3,
        "org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.values()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.iterator()": 0,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 2,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 0,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object, boolean)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.next()": 0,
        "org.apache.commons.collections4.map.LRUMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()",
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.next()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testClone()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap._putAll(java.util.Map\u003c? extends K, ? extends V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.entrySet()": 4,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.clone()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.putAll(java.util.Map\u003c? extends K, ? extends V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 5,
        "org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator.next()": 4,
        "org.apache.commons.collections4.map.AbstractLinkedMap.getEntry(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.iterator()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 4,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.LRUMap.clone()": 0,
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object, boolean)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntrySetIterator()": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.hasNext()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.LRUMap.get(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testRemoveLRU()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()",
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)",
        "org.apache.commons.collections4.map.AbstractHashedMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()",
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testCtors()",
      "hitSet": {
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.LRUMapTest",
      "test": "testLRU()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 1,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutAddSupported()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 3,
        "org.apache.commons.collections4.map.LRUMap.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e, int, int, K, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.addMapping(int, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createValuesIterator()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.map.AbstractLinkedMap.init()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float, boolean)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.setValue(V)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003c?, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003c?, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullKey()": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 2,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, int, float, boolean)": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int)": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.nextEntry()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getValue()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, int, K, V)": 3,
        "org.apache.commons.collections4.map.LRUMap.isFull()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, ?\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 0,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.iterator()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 1,
        "org.apache.commons.collections4.map.LRUMap.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.values()": 0,
        "org.apache.commons.collections4.map.LRUMap.maxSize()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.isPutChangeSupported()": 0,
        "org.apache.commons.collections4.map.LRUMap.\u003cinit\u003e(int, float)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.getKey()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.iterator()": 0,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractLinkedMap\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 0,
        "org.apache.commons.collections4.map.AbstractOrderedMapTest.getSampleKeys()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.keySet()": 0,
        "org.apache.commons.collections4.map.AbstractLinkedMap.createKeySetIterator()": 1,
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.next()": 0,
        "org.apache.commons.collections4.map.LRUMap.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.LRUMap.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, V)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEqualKey(java.lang.Object, java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 0
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.LRUMap.maxSize()",
        "org.apache.commons.collections4.map.AbstractHashedMap.size()",
        "org.apache.commons.collections4.map.LRUMap.isFull()",
        "org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator.next()",
        "org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator.next()"
      ],
      "groundTruth": []
    }
  ]
}