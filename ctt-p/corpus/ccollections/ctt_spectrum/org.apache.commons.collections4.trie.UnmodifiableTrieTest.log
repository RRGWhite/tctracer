{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.trie.UnmodifiableTrieTest",
      "test": "testDecorateFactory()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)",
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.trie.UnmodifiableTrieTest",
      "test": "testUnmodifiable()",
      "hitSet": {
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 4,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 3,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.\u003cinit\u003e(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 3,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.trie.UnmodifiableTrie.unmodifiableTrie(org.apache.commons.collections4.Trie\u003cK, ? extends V\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 3,
        "org.apache.commons.collections4.map.AbstractSortedMapTest.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 5,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeObject()",
        "org.apache.commons.collections4.trie.UnmodifiableTrieTest.makeFullMap()"
      ],
      "groundTruth": []
    }
  ]
}