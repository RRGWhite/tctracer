{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.map.AbstractOrderedMapTest",
      "test": "testLastKey()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()": 0,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 7,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 9,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 8,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.lastKey()",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.AbstractOrderedMapTest",
      "test": "testNextKey()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(K)": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 3,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.nextKey(K)",
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.AbstractOrderedMapTest",
      "test": "testFirstKey()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 7,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 3,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstEntry()": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 9,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstKey()": 0,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 8,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.firstKey()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.AbstractOrderedMapTest",
      "test": "testPreviousKey()",
      "hitSet": {
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e(java.util.Comparator\u003c? super E\u003e, boolean)": 2,
        "org.apache.commons.collections4.comparators.NullComparator.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int)": 6,
        "org.apache.commons.collections4.trie.KeyAnalyzer.compare(K, K)": 3,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.lengthInBits(java.lang.String)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.lengthInBits(K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.entrySet()": 2,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherKeys()": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.resetEmpty()": 0,
        "org.apache.commons.collections4.trie.KeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.getOtherNonNullStringElements()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.getKey()": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.bitIndex(K, K)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.isAllowNullKey()": 0,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e, int)": 6,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.isEmpty()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.isBitSet(K, int, int)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowNullValue()": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.bitIndex(java.lang.String, int, int, java.lang.String, int, int)": 7,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.keySet()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 3,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.size()": 5,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.mask(int)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003cK, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)": 6,
        "org.apache.commons.collections4.trie.PatriciaTrie.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.comparators.ComparableComparator.compare(E, E)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.\u003cinit\u003e(org.apache.commons.collections4.trie.AbstractPatriciaTrie)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(K)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 2,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 4,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.getNearestEntryForKey(K, int)": 2,
        "org.apache.commons.collections4.trie.PatriciaTrie2Test.makeObject()": 1,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.\u003cinit\u003e()": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.compareKeys(K, K)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry.\u003cinit\u003e(K, V, int)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementModCount()": 7,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.comparators.NullComparator.compare(E, E)": 1,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.incrementSize()": 6,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.castKey(java.lang.Object)": 2,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.put(K, V)": 5,
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e, org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry\u003c?, ?\u003e)": 2,
        "org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.isBitSet(java.lang.String, int, int)": 4,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.\u003cinit\u003e(org.apache.commons.collections4.trie.KeyAnalyzer\u003c? super K\u003e)": 2,
        "org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry.\u003cinit\u003e(K, V)": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.trie.AbstractPatriciaTrie.previousKey(K)"
      ],
      "groundTruth": []
    }
  ]
}