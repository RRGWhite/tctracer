{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.map.ReferenceMapTest",
      "test": "testNullHandling()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractReferenceMap.entrySet()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 7,
        "org.apache.commons.collections4.map.AbstractReferenceMap.purge()": 2,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.getMap()": 2,
        "org.apache.commons.collections4.map.ReferenceMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength)": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.get(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.getMap()": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 5,
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()": 0,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractReferenceMap\u003cK, V\u003e, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 8,
        "org.apache.commons.collections4.map.AbstractReferenceMap.containsKey(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractIterableMapTest.makeFullMap()": 1,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003c?, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractReferenceMap.containsValue(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, T, int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractReferenceMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, int, float, boolean)": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.init()": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.keySet()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 6,
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003c?, V\u003e)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef.\u003cinit\u003e(int, T, java.lang.ref.ReferenceQueue\u003c? super T\u003e)": 9,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.makeFullMap()": 2,
        "org.apache.commons.collections4.map.AbstractReferenceMap.getEntry(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractReferenceMap.values()": 0,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.\u003cinit\u003e(int)": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.size()": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 6,
        "org.apache.commons.collections4.map.AbstractMapTest.isAllowDuplicateValues()": 2,
        "org.apache.commons.collections4.map.AbstractReferenceMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 7,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleValues()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 7,
        "org.apache.commons.collections4.map.AbstractHashedMap.size()": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.getSampleKeys()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap\u003cK, ?\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractMapTest.addSampleMappings(java.util.Map\u003c? super K, ? super V\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeWrite()": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.ensureCapacity(int)": 8,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 6,
        "org.apache.commons.collections4.map.AbstractReferenceMap.put(K, V)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.views()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.remove(java.lang.Object)": 0,
        "org.apache.commons.collections4.map.AbstractMapTest.makeConfirmedMap()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 4
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.AbstractMapTest.resetFull()",
        "org.apache.commons.collections4.map.AbstractReferenceMap.remove(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractReferenceMap.containsKey(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.EntrySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.Values.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractHashedMap.KeySet.contains(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractReferenceMap.get(java.lang.Object)",
        "org.apache.commons.collections4.map.AbstractReferenceMap.containsValue(java.lang.Object)"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.map.ReferenceMapTest",
      "test": "testPurgeValues()",
      "hitSet": {
        "org.apache.commons.collections4.map.AbstractReferenceMap.getEntry(java.lang.Object)": 2,
        "org.apache.commons.collections4.map.ReferenceMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, boolean)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.checkCapacity()": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.purge()": 2,
        "org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeRead()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hash(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractReferenceMap.createEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.get(java.lang.Object)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.addEntry(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.put(K, V)": 2,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.getValue()": 2,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractReferenceMap\u003cK, V\u003e, org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, K, V)": 5,
        "org.apache.commons.collections4.map.AbstractReferenceMap.purge(java.lang.ref.Reference\u003c?\u003e)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.isEmpty()": 1,
        "org.apache.commons.collections4.map.AbstractReferenceMap.purgeBeforeWrite()": 2,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.toReference(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, T, int)": 5,
        "org.apache.commons.collections4.map.AbstractHashedMap.getEntry(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry.purge(java.lang.ref.Reference\u003c?\u003e)": 4,
        "org.apache.commons.collections4.map.AbstractReferenceMap.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, int, float, boolean)": 1,
        "org.apache.commons.collections4.map.AbstractReferenceMap.init()": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.HashEntry.\u003cinit\u003e(org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry\u003cK, V\u003e, int, java.lang.Object, V)": 5,
        "org.apache.commons.collections4.map.AbstractReferenceMap.isEqualKey(java.lang.Object, java.lang.Object)": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.convertKey(java.lang.Object)": 3,
        "org.apache.commons.collections4.map.AbstractReferenceMap.put(K, V)": 1,
        "org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef.hashCode()": 4,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateNewCapacity(int)": 1,
        "org.apache.commons.collections4.map.AbstractHashedMap.hashIndex(int, int)": 3,
        "org.apache.commons.collections4.map.AbstractReferenceMap.isEmpty()": 0,
        "org.apache.commons.collections4.map.AbstractHashedMap.\u003cinit\u003e(int, float)": 1,
        "org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef.\u003cinit\u003e(int, T, java.lang.ref.ReferenceQueue\u003c? super T\u003e)": 6,
        "org.apache.commons.collections4.map.AbstractHashedMap.addMapping(int, int, K, V)": 3,
        "org.apache.commons.collections4.map.AbstractHashedMap.calculateThreshold(int, float)": 1
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.map.ReferenceMapTest.buildRefMap()"
      ],
      "groundTruth": []
    }
  ]
}