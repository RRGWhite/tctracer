{
  "tests": [
    {
      "cls": "org.apache.commons.collections4.multiset.PredicatedMultiSetTest",
      "test": "testLegalAddRemove()",
      "hitSet": {
        "org.apache.commons.collections4.multiset.AbstractMultiSet.add(E)": 1,
        "org.apache.commons.collections4.collection.PredicatedCollection.add(E)": 0,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.iterator()": 3,
        "org.apache.commons.collections4.collection.PredicatedCollection.validate(E)": 1,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()": 0,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.createUniqueSet()": 2,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator.hasNext()": 3,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MutableInteger.\u003cinit\u003e(int)": 3,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.\u003cinit\u003e(java.util.Collection\u003cE\u003e)": 3,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.size()": 1,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.uniqueSet()": 1,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.UniqueSet.contains(java.lang.Object)": 0,
        "null.evaluate(T)": 2,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.remove(java.lang.Object)": 1,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.decorated()": 1,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.predicatedMultiSet(org.apache.commons.collections4.MultiSet\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 2,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()": 2,
        "org.apache.commons.collections4.multiset.HashMultiSet.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.remove(java.lang.Object)": 0,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.\u003cinit\u003e(java.util.Map\u003cE, org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger\u003e)": 1,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.\u003cinit\u003e(org.apache.commons.collections4.MultiSet\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 3,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.UniqueSet.\u003cinit\u003e(org.apache.commons.collections4.multiset.AbstractMultiSet\u003cE\u003e)": 3,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.remove(java.lang.Object, int)": 2,
        "org.apache.commons.collections4.collection.PredicatedCollection.\u003cinit\u003e(java.util.Collection\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 3,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.uniqueSet()": 0,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator.\u003cinit\u003e(org.apache.commons.collections4.multiset.AbstractMapMultiSet\u003cE\u003e)": 4,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.add(E, int)": 2,
        "null.\u003cinit\u003e(org.apache.commons.collections4.multiset.PredicatedMultiSetTest)": 2,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.contains(java.lang.Object)": 1,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.\u003cinit\u003e()": 1
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.remove(java.lang.Object)",
        "org.apache.commons.collections4.multiset.AbstractMultiSet.UniqueSet.contains(java.lang.Object)",
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)",
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.size()"
      ],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.multiset.PredicatedMultiSetTest",
      "test": "testIllegalDecorate()",
      "hitSet": {
        "org.apache.commons.collections4.multiset.HashMultiSet.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.add(E)": 0,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.\u003cinit\u003e(java.util.Map\u003cE, org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger\u003e)": 0,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.iterator()": 2,
        "org.apache.commons.collections4.collection.PredicatedCollection.validate(E)": 2,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.\u003cinit\u003e(org.apache.commons.collections4.MultiSet\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 2,
        "org.apache.commons.collections4.collection.PredicatedCollection.\u003cinit\u003e(java.util.Collection\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 2,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator.hasNext()": 2,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MutableInteger.\u003cinit\u003e(int)": 2,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.\u003cinit\u003e(java.util.Collection\u003cE\u003e)": 2,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.add(E, int)": 1,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator.\u003cinit\u003e(org.apache.commons.collections4.multiset.AbstractMapMultiSet\u003cE\u003e)": 3,
        "null.\u003cinit\u003e(org.apache.commons.collections4.multiset.PredicatedMultiSetTest)": 1,
        "null.evaluate(T)": 3,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator.next()": 2,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.\u003cinit\u003e()": 0,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.predicatedMultiSet(org.apache.commons.collections4.MultiSet\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 1
      },
      "callsBeforeAssert": [],
      "groundTruth": []
    },
    {
      "cls": "org.apache.commons.collections4.multiset.PredicatedMultiSetTest",
      "test": "testIllegalAdd()",
      "hitSet": {
        "org.apache.commons.collections4.multiset.HashMultiSet.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.collection.PredicatedCollection.add(E)": 0,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)": 0,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.\u003cinit\u003e(java.util.Map\u003cE, org.apache.commons.collections4.multiset.AbstractMapMultiSet$MutableInteger\u003e)": 1,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.iterator()": 3,
        "org.apache.commons.collections4.collection.PredicatedCollection.validate(E)": 1,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.\u003cinit\u003e(org.apache.commons.collections4.MultiSet\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 3,
        "org.apache.commons.collections4.collection.PredicatedCollection.\u003cinit\u003e(java.util.Collection\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 3,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator.hasNext()": 3,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.\u003cinit\u003e(java.util.Collection\u003cE\u003e)": 3,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator.\u003cinit\u003e(org.apache.commons.collections4.multiset.AbstractMapMultiSet\u003cE\u003e)": 4,
        "null.\u003cinit\u003e(org.apache.commons.collections4.multiset.PredicatedMultiSetTest)": 2,
        "null.evaluate(T)": 2,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.decorated()": 1,
        "org.apache.commons.collections4.multiset.AbstractMapMultiSet.contains(java.lang.Object)": 1,
        "org.apache.commons.collections4.multiset.AbstractMultiSet.\u003cinit\u003e()": 1,
        "org.apache.commons.collections4.multiset.PredicatedMultiSet.predicatedMultiSet(org.apache.commons.collections4.MultiSet\u003cE\u003e, org.apache.commons.collections4.Predicate\u003c? super E\u003e)": 2,
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.decorated()": 2
      },
      "callsBeforeAssert": [
        "org.apache.commons.collections4.collection.AbstractCollectionDecorator.contains(java.lang.Object)"
      ],
      "groundTruth": []
    }
  ]
}